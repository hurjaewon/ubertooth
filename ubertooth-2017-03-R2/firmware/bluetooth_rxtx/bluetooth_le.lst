ARM GAS  /tmp/ccziOb5q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"bluetooth_le.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.btle_channel_index,"ax",%progbits
  19              		.align	1
  20              		.global	btle_channel_index
  21              		.thumb
  22              		.thumb_func
  24              	btle_channel_index:
  25              	.LFB1:
  26              		.file 1 "bluetooth_le.c"
   1:bluetooth_le.c **** /*
   2:bluetooth_le.c ****  * Copyright 2012 Dominic Spill
   3:bluetooth_le.c ****  *
   4:bluetooth_le.c ****  * This file is part of Project Ubertooth.
   5:bluetooth_le.c ****  *
   6:bluetooth_le.c ****  * This program is free software; you can redistribute it and/or modify
   7:bluetooth_le.c ****  * it under the terms of the GNU General Public License as published by
   8:bluetooth_le.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:bluetooth_le.c ****  * any later version.
  10:bluetooth_le.c ****  *
  11:bluetooth_le.c ****  * This program is distributed in the hope that it will be useful,
  12:bluetooth_le.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:bluetooth_le.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:bluetooth_le.c ****  * GNU General Public License for more details.
  15:bluetooth_le.c ****  *
  16:bluetooth_le.c ****  * You should have received a copy of the GNU General Public License
  17:bluetooth_le.c ****  * along with this program; see the file COPYING.  If not, write to
  18:bluetooth_le.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  19:bluetooth_le.c ****  * Boston, MA 02110-1301, USA.
  20:bluetooth_le.c ****  */
  21:bluetooth_le.c **** 
  22:bluetooth_le.c **** #include "bluetooth_le.h"
  23:bluetooth_le.c **** 
  24:bluetooth_le.c **** extern u8 le_channel_idx;
  25:bluetooth_le.c **** extern u8 le_hop_amount;
  26:bluetooth_le.c **** 
  27:bluetooth_le.c **** u16 btle_next_hop(le_state_t *le)
  28:bluetooth_le.c **** {
  29:bluetooth_le.c **** 	u16 phys = btle_channel_index_to_phys(le->channel_idx);
  30:bluetooth_le.c **** 	le->channel_idx = (le->channel_idx + le->channel_increment) % 37;
  31:bluetooth_le.c **** 	return phys;
  32:bluetooth_le.c **** }
ARM GAS  /tmp/ccziOb5q.s 			page 2


  33:bluetooth_le.c **** 
  34:bluetooth_le.c **** u8 btle_channel_index(u8 channel) {
  27              		.loc 1 34 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.LVL1:
  35:bluetooth_le.c **** 	u8 idx;
  36:bluetooth_le.c **** 	channel /= 2;
  37:bluetooth_le.c **** 	if (channel == 0)
  34              		.loc 1 37 0
  35 0000 4008     		lsrs	r0, r0, #1
  36              	.LVL2:
  37 0002 0AD0     		beq	.L4
  38:bluetooth_le.c **** 		idx = 37;
  39:bluetooth_le.c **** 	else if (channel < 12)
  38              		.loc 1 39 0
  39 0004 0B28     		cmp	r0, #11
  40 0006 01D8     		bhi	.L3
  40:bluetooth_le.c **** 		idx = channel - 1;
  41              		.loc 1 40 0
  42 0008 0138     		subs	r0, r0, #1
  43 000a 04E0     		b	.L7
  44              	.L3:
  41:bluetooth_le.c **** 	else if (channel == 12)
  45              		.loc 1 41 0
  46 000c 0C28     		cmp	r0, #12
  47 000e 06D0     		beq	.L5
  42:bluetooth_le.c **** 		idx = 38;
  43:bluetooth_le.c **** 	else if (channel < 39)
  48              		.loc 1 43 0
  49 0010 2628     		cmp	r0, #38
  50 0012 06D8     		bhi	.L6
  44:bluetooth_le.c **** 		idx = channel - 2;
  51              		.loc 1 44 0
  52 0014 0238     		subs	r0, r0, #2
  53              	.L7:
  54 0016 C0B2     		uxtb	r0, r0
  55              	.LVL3:
  56 0018 7047     		bx	lr
  57              	.LVL4:
  58              	.L4:
  38:bluetooth_le.c **** 	else if (channel < 12)
  59              		.loc 1 38 0
  60 001a 2520     		movs	r0, #37
  61 001c 7047     		bx	lr
  62              	.L5:
  42:bluetooth_le.c **** 		idx = 38;
  63              		.loc 1 42 0
  64 001e 2620     		movs	r0, #38
  65 0020 7047     		bx	lr
  66              	.L6:
  45:bluetooth_le.c **** 	else
  46:bluetooth_le.c **** 		idx = 39;
  67              		.loc 1 46 0
ARM GAS  /tmp/ccziOb5q.s 			page 3


  68 0022 2720     		movs	r0, #39
  69              	.LVL5:
  47:bluetooth_le.c **** 	return idx;
  48:bluetooth_le.c **** }
  70              		.loc 1 48 0
  71 0024 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE1:
  75              		.section	.text.btle_channel_index_to_phys,"ax",%progbits
  76              		.align	1
  77              		.global	btle_channel_index_to_phys
  78              		.thumb
  79              		.thumb_func
  81              	btle_channel_index_to_phys:
  82              	.LFB2:
  49:bluetooth_le.c **** 
  50:bluetooth_le.c **** u16 btle_channel_index_to_phys(u8 idx) {
  83              		.loc 1 50 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL6:
  51:bluetooth_le.c **** 	u16 phys;
  52:bluetooth_le.c **** 	if (idx < 11)
  89              		.loc 1 52 0
  90 0000 0A28     		cmp	r0, #10
  91 0002 02D8     		bhi	.L10
  53:bluetooth_le.c **** 		phys = 2404 + 2 * idx;
  92              		.loc 1 53 0
  93 0004 00F2B240 		addw	r0, r0, #1202
  94              	.LVL7:
  95 0008 03E0     		b	.L15
  96              	.LVL8:
  97              	.L10:
  54:bluetooth_le.c **** 	else if (idx < 37)
  98              		.loc 1 54 0
  99 000a 2428     		cmp	r0, #36
 100 000c 03D8     		bhi	.L12
  55:bluetooth_le.c **** 		phys = 2428 + 2 * (idx - 11);
 101              		.loc 1 55 0
 102 000e 00F2B340 		addw	r0, r0, #1203
 103              	.LVL9:
 104              	.L15:
 105 0012 4000     		lsls	r0, r0, #1
 106              	.LVL10:
 107 0014 7047     		bx	lr
 108              	.LVL11:
 109              	.L12:
  56:bluetooth_le.c **** 	else if (idx == 37)
 110              		.loc 1 56 0
 111 0016 2528     		cmp	r0, #37
 112 0018 07D0     		beq	.L13
  57:bluetooth_le.c **** 		phys = 2402;
  58:bluetooth_le.c **** 	else if (idx == 38)
  59:bluetooth_le.c **** 		phys = 2426;
 113              		.loc 1 59 0
ARM GAS  /tmp/ccziOb5q.s 			page 4


 114 001a 40F67A13 		movw	r3, #2426
 115 001e 2628     		cmp	r0, #38
 116 0020 0CBF     		ite	eq
 117 0022 1846     		moveq	r0, r3
 118 0024 4FF41B60 		movne	r0, #2480
 119              	.LVL12:
 120 0028 7047     		bx	lr
 121              	.LVL13:
 122              	.L13:
  57:bluetooth_le.c **** 		phys = 2402;
 123              		.loc 1 57 0
 124 002a 40F66210 		movw	r0, #2402
 125              	.LVL14:
  60:bluetooth_le.c **** 	else
  61:bluetooth_le.c **** 		phys = 2480;
  62:bluetooth_le.c **** 	return phys;
  63:bluetooth_le.c **** }
 126              		.loc 1 63 0
 127 002e 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE2:
 131              		.section	.text.btle_next_hop,"ax",%progbits
 132              		.align	1
 133              		.global	btle_next_hop
 134              		.thumb
 135              		.thumb_func
 137              	btle_next_hop:
 138              	.LFB0:
  28:bluetooth_le.c **** 	u16 phys = btle_channel_index_to_phys(le->channel_idx);
 139              		.loc 1 28 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL15:
 144 0000 38B5     		push	{r3, r4, r5, lr}
 145              		.cfi_def_cfa_offset 16
 146              		.cfi_offset 3, -16
 147              		.cfi_offset 4, -12
 148              		.cfi_offset 5, -8
 149              		.cfi_offset 14, -4
  29:bluetooth_le.c **** 	le->channel_idx = (le->channel_idx + le->channel_increment) % 37;
 150              		.loc 1 29 0
 151 0002 457D     		ldrb	r5, [r0, #21]	@ zero_extendqisi2
  28:bluetooth_le.c **** 	u16 phys = btle_channel_index_to_phys(le->channel_idx);
 152              		.loc 1 28 0
 153 0004 0446     		mov	r4, r0
  29:bluetooth_le.c **** 	le->channel_idx = (le->channel_idx + le->channel_increment) % 37;
 154              		.loc 1 29 0
 155 0006 2846     		mov	r0, r5
 156              	.LVL16:
 157 0008 FFF7FEFF 		bl	btle_channel_index_to_phys
 158              	.LVL17:
  30:bluetooth_le.c **** 	return phys;
 159              		.loc 1 30 0
 160 000c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 161 000e 2523     		movs	r3, #37
 162 0010 2A44     		add	r2, r2, r5
ARM GAS  /tmp/ccziOb5q.s 			page 5


 163 0012 92FBF3F1 		sdiv	r1, r2, r3
 164 0016 03FB1123 		mls	r3, r3, r1, r2
 165 001a 6375     		strb	r3, [r4, #21]
  32:bluetooth_le.c **** 
 166              		.loc 1 32 0
 167 001c 38BD     		pop	{r3, r4, r5, pc}
 168              		.cfi_endproc
 169              	.LFE0:
 171              		.section	.text.btle_calc_crc,"ax",%progbits
 172              		.align	1
 173              		.global	btle_calc_crc
 174              		.thumb
 175              		.thumb_func
 177              	btle_calc_crc:
 178              	.LFB3:
  64:bluetooth_le.c **** 
  65:bluetooth_le.c **** // calculate CRC
  66:bluetooth_le.c **** //	note 1: crc_init's bits should be in reverse order
  67:bluetooth_le.c **** //	note 2: output bytes are in reverse order compared to wire
  68:bluetooth_le.c **** //
  69:bluetooth_le.c **** //		example output:
  70:bluetooth_le.c **** //			0x6ff46e
  71:bluetooth_le.c **** //
  72:bluetooth_le.c **** //		bytes in packet will be:
  73:bluetooth_le.c **** //		  { 0x6e, 0xf4, 0x6f }
  74:bluetooth_le.c **** //
  75:bluetooth_le.c **** u32 btle_calc_crc(u32 crc_init, u8 *data, int len) {
 179              		.loc 1 75 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL18:
 184 0000 70B5     		push	{r4, r5, r6, lr}
 185              		.cfi_def_cfa_offset 16
 186              		.cfi_offset 4, -16
 187              		.cfi_offset 5, -12
 188              		.cfi_offset 6, -8
 189              		.cfi_offset 14, -4
  76:bluetooth_le.c **** 	u32 state = crc_init & 0xffffff;
  77:bluetooth_le.c **** 	u32 lfsr_mask = 0x5a6000; // 010110100110000000000000
  78:bluetooth_le.c **** 	int i, j;
  79:bluetooth_le.c **** 
  80:bluetooth_le.c **** 	for (i = 0; i < len; ++i) {
 190              		.loc 1 80 0
 191 0002 0023     		movs	r3, #0
  76:bluetooth_le.c **** 	u32 state = crc_init & 0xffffff;
 192              		.loc 1 76 0
 193 0004 20F07F40 		bic	r0, r0, #-16777216
 194              	.LVL19:
 195              	.L18:
 196              		.loc 1 80 0 discriminator 1
 197 0008 9342     		cmp	r3, r2
 198 000a 14DA     		bge	.L27
 199              	.LBB2:
  81:bluetooth_le.c **** 		u8 cur = data[i];
 200              		.loc 1 81 0
 201 000c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccziOb5q.s 			page 6


 202              	.LVL20:
 203 000e 0824     		movs	r4, #8
 204              	.LVL21:
 205              	.L21:
 206              	.LBB3:
  82:bluetooth_le.c **** 		for (j = 0; j < 8; ++j) {
  83:bluetooth_le.c **** 			int next_bit = (state ^ cur) & 1;
 207              		.loc 1 83 0
 208 0010 85EA0006 		eor	r6, r5, r0
  84:bluetooth_le.c **** 			cur >>= 1;
  85:bluetooth_le.c **** 			state >>= 1;
  86:bluetooth_le.c **** 			if (next_bit) {
 209              		.loc 1 86 0
 210 0014 16F0010F 		tst	r6, #1
 211 0018 4FEA5505 		lsr	r5, r5, #1
 212              	.LVL22:
 213 001c 4FEA5000 		lsr	r0, r0, #1
 214              	.LVL23:
 215 0020 05D0     		beq	.L19
  87:bluetooth_le.c **** 				state |= 1 << 23;
 216              		.loc 1 87 0
 217 0022 40F40000 		orr	r0, r0, #8388608
 218              	.LVL24:
  88:bluetooth_le.c **** 				state ^= lfsr_mask;
 219              		.loc 1 88 0
 220 0026 80F4B400 		eor	r0, r0, #5898240
 221              	.LVL25:
 222 002a 80F4C040 		eor	r0, r0, #24576
 223              	.LVL26:
 224              	.L19:
 225              	.LBE3:
  82:bluetooth_le.c **** 			int next_bit = (state ^ cur) & 1;
 226              		.loc 1 82 0
 227 002e 013C     		subs	r4, r4, #1
 228              	.LVL27:
 229 0030 EED1     		bne	.L21
 230              	.LBE2:
  80:bluetooth_le.c **** 		u8 cur = data[i];
 231              		.loc 1 80 0
 232 0032 0133     		adds	r3, r3, #1
 233              	.LVL28:
 234 0034 E8E7     		b	.L18
 235              	.LVL29:
 236              	.L27:
  89:bluetooth_le.c **** 			}
  90:bluetooth_le.c **** 		}
  91:bluetooth_le.c **** 	}
  92:bluetooth_le.c **** 
  93:bluetooth_le.c **** 	return state;
  94:bluetooth_le.c **** }
 237              		.loc 1 94 0
 238 0036 70BD     		pop	{r4, r5, r6, pc}
 239              		.cfi_endproc
 240              	.LFE3:
 242              		.section	.text.btle_reverse_crc,"ax",%progbits
 243              		.align	1
 244              		.global	btle_reverse_crc
ARM GAS  /tmp/ccziOb5q.s 			page 7


 245              		.thumb
 246              		.thumb_func
 248              	btle_reverse_crc:
 249              	.LFB4:
  95:bluetooth_le.c **** 
  96:bluetooth_le.c **** // runs the CRC in reverse to generate a CRCInit
  97:bluetooth_le.c **** //
  98:bluetooth_le.c **** //	crc should be big endian
  99:bluetooth_le.c **** //	the return will be big endian
 100:bluetooth_le.c **** //
 101:bluetooth_le.c **** u32 btle_reverse_crc(u32 crc, u8 *data, int len) {
 250              		.loc 1 101 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              	.LVL30:
 255 0000 70B5     		push	{r4, r5, r6, lr}
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 4, -16
 258              		.cfi_offset 5, -12
 259              		.cfi_offset 6, -8
 260              		.cfi_offset 14, -4
 261              	.LVL31:
 262              	.L41:
 102:bluetooth_le.c **** 	u32 state = crc;
 103:bluetooth_le.c **** 	u32 lfsr_mask = 0xb4c000; // 101101001100000000000000
 104:bluetooth_le.c **** 	u32 ret;
 105:bluetooth_le.c **** 	int i, j;
 106:bluetooth_le.c **** 
 107:bluetooth_le.c **** 	for (i = len - 1; i >= 0; --i) {
 263              		.loc 1 107 0
 264 0002 013A     		subs	r2, r2, #1
 265              	.LVL32:
 266 0004 002A     		cmp	r2, #0
 267 0006 14DB     		blt	.L42
 268              	.LBB4:
 108:bluetooth_le.c **** 		u8 cur = data[i];
 269              		.loc 1 108 0
 270 0008 8D5C     		ldrb	r5, [r1, r2]	@ zero_extendqisi2
 271              	.LVL33:
 272 000a 0723     		movs	r3, #7
 273              	.LVL34:
 274              	.L32:
 275              	.LBB5:
 109:bluetooth_le.c **** 		for (j = 0; j < 8; ++j) {
 110:bluetooth_le.c **** 			int top_bit = state >> 23;
 276              		.loc 1 110 0
 277 000c C40D     		lsrs	r4, r0, #23
 278              	.LVL35:
 111:bluetooth_le.c **** 			state = (state << 1) & 0xffffff;
 279              		.loc 1 111 0
 280 000e 4000     		lsls	r0, r0, #1
 281              	.LVL36:
 282 0010 20F07F46 		bic	r6, r0, #-16777216
 283              	.LVL37:
 112:bluetooth_le.c **** 			state |= top_bit ^ ((cur >> (7 - j)) & 1);
 284              		.loc 1 112 0
ARM GAS  /tmp/ccziOb5q.s 			page 8


 285 0014 45FA03F0 		asr	r0, r5, r3
 286 0018 00F00100 		and	r0, r0, #1
 287 001c 6040     		eors	r0, r0, r4
 288 001e 3043     		orrs	r0, r0, r6
 289              	.LVL38:
 113:bluetooth_le.c **** 			if (top_bit)
 290              		.loc 1 113 0
 291 0020 1CB1     		cbz	r4, .L30
 114:bluetooth_le.c **** 				state ^= lfsr_mask;
 292              		.loc 1 114 0
 293 0022 80F43400 		eor	r0, r0, #11796480
 294              	.LVL39:
 295 0026 80F44040 		eor	r0, r0, #49152
 296              	.LVL40:
 297              	.L30:
 298              	.LBE5:
 109:bluetooth_le.c **** 			int top_bit = state >> 23;
 299              		.loc 1 109 0
 300 002a 13F1FF33 		adds	r3, r3, #-1
 301              	.LVL41:
 302 002e EDD2     		bcs	.L32
 303 0030 E7E7     		b	.L41
 304              	.LVL42:
 305              	.L42:
 306              	.LBE4:
 107:bluetooth_le.c **** 		u8 cur = data[i];
 307              		.loc 1 107 0
 308 0032 0023     		movs	r3, #0
 309 0034 1A46     		mov	r2, r3
 310              	.LVL43:
 311              	.L35:
 115:bluetooth_le.c **** 		}
 116:bluetooth_le.c **** 	}
 117:bluetooth_le.c **** 
 118:bluetooth_le.c **** 	ret = 0;
 119:bluetooth_le.c **** 	for (i = 0; i < 24; ++i)
 120:bluetooth_le.c **** 		ret |= ((state >> i) & 1) << (23 - i);
 312              		.loc 1 120 0 discriminator 2
 313 0036 20FA03F1 		lsr	r1, r0, r3
 314 003a C3F11704 		rsb	r4, r3, #23
 315 003e 01F00101 		and	r1, r1, #1
 316 0042 A140     		lsls	r1, r1, r4
 119:bluetooth_le.c **** 		ret |= ((state >> i) & 1) << (23 - i);
 317              		.loc 1 119 0 discriminator 2
 318 0044 0133     		adds	r3, r3, #1
 319              	.LVL44:
 320 0046 182B     		cmp	r3, #24
 321              		.loc 1 120 0 discriminator 2
 322 0048 42EA0102 		orr	r2, r2, r1
 323              	.LVL45:
 119:bluetooth_le.c **** 		ret |= ((state >> i) & 1) << (23 - i);
 324              		.loc 1 119 0 discriminator 2
 325 004c F3D1     		bne	.L35
 121:bluetooth_le.c **** 
 122:bluetooth_le.c **** 	return ret;
 123:bluetooth_le.c **** }
 326              		.loc 1 123 0
ARM GAS  /tmp/ccziOb5q.s 			page 9


 327 004e 1046     		mov	r0, r2
 328              	.LVL46:
 329 0050 70BD     		pop	{r4, r5, r6, pc}
 330              		.cfi_endproc
 331              	.LFE4:
 333              		.section	.text.btle_crcgen_lut,"ax",%progbits
 334              		.align	1
 335              		.global	btle_crcgen_lut
 336              		.thumb
 337              		.thumb_func
 339              	btle_crcgen_lut:
 340              	.LFB5:
 124:bluetooth_le.c **** 
 125:bluetooth_le.c **** u32 btle_crc_lut[256] = {
 126:bluetooth_le.c **** 	0x000000, 0x01b4c0, 0x036980, 0x02dd40, 0x06d300, 0x0767c0, 0x05ba80, 0x040e40,
 127:bluetooth_le.c **** 	0x0da600, 0x0c12c0, 0x0ecf80, 0x0f7b40, 0x0b7500, 0x0ac1c0, 0x081c80, 0x09a840,
 128:bluetooth_le.c **** 	0x1b4c00, 0x1af8c0, 0x182580, 0x199140, 0x1d9f00, 0x1c2bc0, 0x1ef680, 0x1f4240,
 129:bluetooth_le.c **** 	0x16ea00, 0x175ec0, 0x158380, 0x143740, 0x103900, 0x118dc0, 0x135080, 0x12e440,
 130:bluetooth_le.c **** 	0x369800, 0x372cc0, 0x35f180, 0x344540, 0x304b00, 0x31ffc0, 0x332280, 0x329640,
 131:bluetooth_le.c **** 	0x3b3e00, 0x3a8ac0, 0x385780, 0x39e340, 0x3ded00, 0x3c59c0, 0x3e8480, 0x3f3040,
 132:bluetooth_le.c **** 	0x2dd400, 0x2c60c0, 0x2ebd80, 0x2f0940, 0x2b0700, 0x2ab3c0, 0x286e80, 0x29da40,
 133:bluetooth_le.c **** 	0x207200, 0x21c6c0, 0x231b80, 0x22af40, 0x26a100, 0x2715c0, 0x25c880, 0x247c40,
 134:bluetooth_le.c **** 	0x6d3000, 0x6c84c0, 0x6e5980, 0x6fed40, 0x6be300, 0x6a57c0, 0x688a80, 0x693e40,
 135:bluetooth_le.c **** 	0x609600, 0x6122c0, 0x63ff80, 0x624b40, 0x664500, 0x67f1c0, 0x652c80, 0x649840,
 136:bluetooth_le.c **** 	0x767c00, 0x77c8c0, 0x751580, 0x74a140, 0x70af00, 0x711bc0, 0x73c680, 0x727240,
 137:bluetooth_le.c **** 	0x7bda00, 0x7a6ec0, 0x78b380, 0x790740, 0x7d0900, 0x7cbdc0, 0x7e6080, 0x7fd440,
 138:bluetooth_le.c **** 	0x5ba800, 0x5a1cc0, 0x58c180, 0x597540, 0x5d7b00, 0x5ccfc0, 0x5e1280, 0x5fa640,
 139:bluetooth_le.c **** 	0x560e00, 0x57bac0, 0x556780, 0x54d340, 0x50dd00, 0x5169c0, 0x53b480, 0x520040,
 140:bluetooth_le.c **** 	0x40e400, 0x4150c0, 0x438d80, 0x423940, 0x463700, 0x4783c0, 0x455e80, 0x44ea40,
 141:bluetooth_le.c **** 	0x4d4200, 0x4cf6c0, 0x4e2b80, 0x4f9f40, 0x4b9100, 0x4a25c0, 0x48f880, 0x494c40,
 142:bluetooth_le.c **** 	0xda6000, 0xdbd4c0, 0xd90980, 0xd8bd40, 0xdcb300, 0xdd07c0, 0xdfda80, 0xde6e40,
 143:bluetooth_le.c **** 	0xd7c600, 0xd672c0, 0xd4af80, 0xd51b40, 0xd11500, 0xd0a1c0, 0xd27c80, 0xd3c840,
 144:bluetooth_le.c **** 	0xc12c00, 0xc098c0, 0xc24580, 0xc3f140, 0xc7ff00, 0xc64bc0, 0xc49680, 0xc52240,
 145:bluetooth_le.c **** 	0xcc8a00, 0xcd3ec0, 0xcfe380, 0xce5740, 0xca5900, 0xcbedc0, 0xc93080, 0xc88440,
 146:bluetooth_le.c **** 	0xecf800, 0xed4cc0, 0xef9180, 0xee2540, 0xea2b00, 0xeb9fc0, 0xe94280, 0xe8f640,
 147:bluetooth_le.c **** 	0xe15e00, 0xe0eac0, 0xe23780, 0xe38340, 0xe78d00, 0xe639c0, 0xe4e480, 0xe55040,
 148:bluetooth_le.c **** 	0xf7b400, 0xf600c0, 0xf4dd80, 0xf56940, 0xf16700, 0xf0d3c0, 0xf20e80, 0xf3ba40,
 149:bluetooth_le.c **** 	0xfa1200, 0xfba6c0, 0xf97b80, 0xf8cf40, 0xfcc100, 0xfd75c0, 0xffa880, 0xfe1c40,
 150:bluetooth_le.c **** 	0xb75000, 0xb6e4c0, 0xb43980, 0xb58d40, 0xb18300, 0xb037c0, 0xb2ea80, 0xb35e40,
 151:bluetooth_le.c **** 	0xbaf600, 0xbb42c0, 0xb99f80, 0xb82b40, 0xbc2500, 0xbd91c0, 0xbf4c80, 0xbef840,
 152:bluetooth_le.c **** 	0xac1c00, 0xada8c0, 0xaf7580, 0xaec140, 0xaacf00, 0xab7bc0, 0xa9a680, 0xa81240,
 153:bluetooth_le.c **** 	0xa1ba00, 0xa00ec0, 0xa2d380, 0xa36740, 0xa76900, 0xa6ddc0, 0xa40080, 0xa5b440,
 154:bluetooth_le.c **** 	0x81c800, 0x807cc0, 0x82a180, 0x831540, 0x871b00, 0x86afc0, 0x847280, 0x85c640,
 155:bluetooth_le.c **** 	0x8c6e00, 0x8ddac0, 0x8f0780, 0x8eb340, 0x8abd00, 0x8b09c0, 0x89d480, 0x886040,
 156:bluetooth_le.c **** 	0x9a8400, 0x9b30c0, 0x99ed80, 0x985940, 0x9c5700, 0x9de3c0, 0x9f3e80, 0x9e8a40,
 157:bluetooth_le.c **** 	0x972200, 0x9696c0, 0x944b80, 0x95ff40, 0x91f100, 0x9045c0, 0x929880, 0x932c40
 158:bluetooth_le.c **** };
 159:bluetooth_le.c **** 
 160:bluetooth_le.c **** /*
 161:bluetooth_le.c ****  * Calculate a BTLE CRC one byte at a time. Thanks to Dominic Spill and
 162:bluetooth_le.c ****  * Michael Ossmann for writing and optimizing this.
 163:bluetooth_le.c ****  *
 164:bluetooth_le.c ****  * Arguments: CRCInit, pointer to start of packet, length of packet in
 165:bluetooth_le.c ****  * bytes
 166:bluetooth_le.c ****  * */
 167:bluetooth_le.c **** u32 btle_crcgen_lut(u32 crc_init, u8 *data, int len) {
 341              		.loc 1 167 0
ARM GAS  /tmp/ccziOb5q.s 			page 10


 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              	.LVL47:
 346 0000 30B5     		push	{r4, r5, lr}
 347              		.cfi_def_cfa_offset 12
 348              		.cfi_offset 4, -12
 349              		.cfi_offset 5, -8
 350              		.cfi_offset 14, -4
 168:bluetooth_le.c **** 	u32 state;
 169:bluetooth_le.c **** 	int i;
 170:bluetooth_le.c **** 	u8 key;
 171:bluetooth_le.c **** 
 172:bluetooth_le.c **** 	state = crc_init & 0xffffff;
 173:bluetooth_le.c **** 	for (i = 0; i < len; ++i) {
 351              		.loc 1 173 0
 352 0002 0023     		movs	r3, #0
 172:bluetooth_le.c **** 	for (i = 0; i < len; ++i) {
 353              		.loc 1 172 0
 354 0004 20F07F40 		bic	r0, r0, #-16777216
 355              	.LVL48:
 356              	.L44:
 357              		.loc 1 173 0 discriminator 1
 358 0008 9342     		cmp	r3, r2
 359 000a 09DA     		bge	.L46
 360              	.LVL49:
 174:bluetooth_le.c **** 		key = data[i] ^ (state & 0xff);
 361              		.loc 1 174 0 discriminator 2
 362 000c CD5C     		ldrb	r5, [r1, r3]	@ zero_extendqisi2
 175:bluetooth_le.c **** 		state = (state >> 8) ^ btle_crc_lut[key];
 363              		.loc 1 175 0 discriminator 2
 364 000e 054C     		ldr	r4, .L47
 174:bluetooth_le.c **** 		key = data[i] ^ (state & 0xff);
 365              		.loc 1 174 0 discriminator 2
 366 0010 4540     		eors	r5, r5, r0
 367              		.loc 1 175 0 discriminator 2
 368 0012 EDB2     		uxtb	r5, r5
 369 0014 54F82540 		ldr	r4, [r4, r5, lsl #2]
 173:bluetooth_le.c **** 		key = data[i] ^ (state & 0xff);
 370              		.loc 1 173 0 discriminator 2
 371 0018 0133     		adds	r3, r3, #1
 372              	.LVL50:
 373              		.loc 1 175 0 discriminator 2
 374 001a 84EA1020 		eor	r0, r4, r0, lsr #8
 375              	.LVL51:
 376 001e F3E7     		b	.L44
 377              	.L46:
 176:bluetooth_le.c **** 	}
 177:bluetooth_le.c **** 	return state;
 178:bluetooth_le.c **** }
 378              		.loc 1 178 0
 379 0020 30BD     		pop	{r4, r5, pc}
 380              	.L48:
 381 0022 00BF     		.align	2
 382              	.L47:
 383 0024 00000000 		.word	.LANCHOR0
 384              		.cfi_endproc
ARM GAS  /tmp/ccziOb5q.s 			page 11


 385              	.LFE5:
 387              		.global	btle_crc_lut
 388              		.data
 389              		.align	2
 390              		.set	.LANCHOR0,. + 0
 393              	btle_crc_lut:
 394 0000 00000000 		.word	0
 395 0004 C0B40100 		.word	111808
 396 0008 80690300 		.word	223616
 397 000c 40DD0200 		.word	187712
 398 0010 00D30600 		.word	447232
 399 0014 C0670700 		.word	485312
 400 0018 80BA0500 		.word	375424
 401 001c 400E0400 		.word	265792
 402 0020 00A60D00 		.word	894464
 403 0024 C0120C00 		.word	791232
 404 0028 80CF0E00 		.word	970624
 405 002c 407B0F00 		.word	1014592
 406 0030 00750B00 		.word	750848
 407 0034 C0C10A00 		.word	704960
 408 0038 801C0800 		.word	531584
 409 003c 40A80900 		.word	632896
 410 0040 004C1B00 		.word	1788928
 411 0044 C0F81A00 		.word	1767616
 412 0048 80251800 		.word	1582464
 413 004c 40911900 		.word	1675584
 414 0050 009F1D00 		.word	1941248
 415 0054 C02B1C00 		.word	1846208
 416 0058 80F61E00 		.word	2029184
 417 005c 40421F00 		.word	2048576
 418 0060 00EA1600 		.word	1501696
 419 0064 C05E1700 		.word	1531584
 420 0068 80831500 		.word	1409920
 421 006c 40371400 		.word	1324864
 422 0070 00391000 		.word	1063168
 423 0074 C08D1100 		.word	1150400
 424 0078 80501300 		.word	1265792
 425 007c 40E41200 		.word	1238080
 426 0080 00983600 		.word	3577856
 427 0084 C02C3700 		.word	3615936
 428 0088 80F13500 		.word	3535232
 429 008c 40453400 		.word	3425600
 430 0090 004B3000 		.word	3164928
 431 0094 C0FF3100 		.word	3276736
 432 0098 80223300 		.word	3351168
 433 009c 40963200 		.word	3315264
 434 00a0 003E3B00 		.word	3882496
 435 00a4 C08A3A00 		.word	3836608
 436 00a8 80573800 		.word	3692416
 437 00ac 40E33900 		.word	3793728
 438 00b0 00ED3D00 		.word	4058368
 439 00b4 C0593C00 		.word	3955136
 440 00b8 80843E00 		.word	4097152
 441 00bc 40303F00 		.word	4141120
 442 00c0 00D42D00 		.word	3003392
 443 00c4 C0602C00 		.word	2908352
 444 00c8 80BD2E00 		.word	3063168
ARM GAS  /tmp/ccziOb5q.s 			page 12


 445 00cc 40092F00 		.word	3082560
 446 00d0 00072B00 		.word	2819840
 447 00d4 C0B32A00 		.word	2798528
 448 00d8 806E2800 		.word	2649728
 449 00dc 40DA2900 		.word	2742848
 450 00e0 00722000 		.word	2126336
 451 00e4 C0C62100 		.word	2213568
 452 00e8 801B2300 		.word	2300800
 453 00ec 40AF2200 		.word	2273088
 454 00f0 00A12600 		.word	2531584
 455 00f4 C0152700 		.word	2561472
 456 00f8 80C82500 		.word	2476160
 457 00fc 407C2400 		.word	2391104
 458 0100 00306D00 		.word	7155712
 459 0104 C0846C00 		.word	7111872
 460 0108 80596E00 		.word	7231872
 461 010c 40ED6F00 		.word	7335232
 462 0110 00E36B00 		.word	7070464
 463 0114 C0576A00 		.word	6969280
 464 0118 808A6800 		.word	6851200
 465 011c 403E6900 		.word	6897216
 466 0120 00966000 		.word	6329856
 467 0124 C0226100 		.word	6365888
 468 0128 80FF6300 		.word	6553472
 469 012c 404B6200 		.word	6441792
 470 0130 00456600 		.word	6702336
 471 0134 C0F16700 		.word	6812096
 472 0138 802C6500 		.word	6630528
 473 013c 40986400 		.word	6592576
 474 0140 007C7600 		.word	7764992
 475 0144 C0C87700 		.word	7850176
 476 0148 80157500 		.word	7673216
 477 014c 40A17400 		.word	7643456
 478 0150 00AF7000 		.word	7384832
 479 0154 C01B7100 		.word	7412672
 480 0158 80C67300 		.word	7587456
 481 015c 40727200 		.word	7500352
 482 0160 00DA7B00 		.word	8116736
 483 0164 C06E7A00 		.word	8023744
 484 0168 80B37800 		.word	7910272
 485 016c 40077900 		.word	7931712
 486 0170 00097D00 		.word	8194304
 487 0174 C0BD7C00 		.word	8175040
 488 0178 80607E00 		.word	8282240
 489 017c 40D47F00 		.word	8377408
 490 0180 00A85B00 		.word	6006784
 491 0184 C01C5A00 		.word	5905600
 492 0188 80C15800 		.word	5816704
 493 018c 40755900 		.word	5862720
 494 0190 007B5D00 		.word	6126336
 495 0194 C0CF5C00 		.word	6082496
 496 0198 80125E00 		.word	6165120
 497 019c 40A65F00 		.word	6268480
 498 01a0 000E5600 		.word	5639680
 499 01a4 C0BA5700 		.word	5749440
 500 01a8 80675500 		.word	5597056
 501 01ac 40D35400 		.word	5559104
ARM GAS  /tmp/ccziOb5q.s 			page 13


 502 01b0 00DD5000 		.word	5299456
 503 01b4 C0695100 		.word	5335488
 504 01b8 80B45300 		.word	5485696
 505 01bc 40005200 		.word	5374016
 506 01c0 00E44000 		.word	4252672
 507 01c4 C0504100 		.word	4280512
 508 01c8 808D4300 		.word	4427136
 509 01cc 40394200 		.word	4340032
 510 01d0 00374600 		.word	4601600
 511 01d4 C0834700 		.word	4686784
 512 01d8 805E4500 		.word	4546176
 513 01dc 40EA4400 		.word	4516416
 514 01e0 00424D00 		.word	5063168
 515 01e4 C0F64C00 		.word	5043904
 516 01e8 802B4E00 		.word	5122944
 517 01ec 409F4F00 		.word	5218112
 518 01f0 00914B00 		.word	4952320
 519 01f4 C0254A00 		.word	4859328
 520 01f8 80F84800 		.word	4782208
 521 01fc 404C4900 		.word	4803648
 522 0200 0060DA00 		.word	14311424
 523 0204 C0D4DB00 		.word	14406848
 524 0208 8009D900 		.word	14223744
 525 020c 40BDD800 		.word	14204224
 526 0210 00B3DC00 		.word	14463744
 527 0214 C007DD00 		.word	14485440
 528 0218 80DADF00 		.word	14670464
 529 021c 406EDE00 		.word	14577216
 530 0220 00C6D700 		.word	14140928
 531 0224 C072D600 		.word	14054080
 532 0228 80AFD400 		.word	13938560
 533 022c 401BD500 		.word	13966144
 534 0230 0015D100 		.word	13702400
 535 0234 C0A1D000 		.word	13672896
 536 0238 807CD200 		.word	13794432
 537 023c 40C8D300 		.word	13879360
 538 0240 002CC100 		.word	12659712
 539 0244 C098C000 		.word	12622016
 540 0248 8045C200 		.word	12731776
 541 024c 40F1C300 		.word	12841280
 542 0250 00FFC700 		.word	13106944
 543 0254 C04BC600 		.word	12995520
 544 0258 8096C400 		.word	12883584
 545 025c 4022C500 		.word	12919360
 546 0260 008ACC00 		.word	13404672
 547 0264 C03ECD00 		.word	13450944
 548 0268 80E3CF00 		.word	13624192
 549 026c 4057CE00 		.word	13522752
 550 0270 0059CA00 		.word	13261056
 551 0274 C0EDCB00 		.word	13364672
 552 0278 8030C900 		.word	13185152
 553 027c 4084C800 		.word	13141056
 554 0280 00F8EC00 		.word	15529984
 555 0284 C04CED00 		.word	15551680
 556 0288 8091EF00 		.word	15700352
 557 028c 4025EE00 		.word	15607104
 558 0290 002BEA00 		.word	15346432
ARM GAS  /tmp/ccziOb5q.s 			page 14


 559 0294 C09FEB00 		.word	15441856
 560 0298 8042E900 		.word	15286912
 561 029c 40F6E800 		.word	15267392
 562 02a0 005EE100 		.word	14769664
 563 02a4 C0EAE000 		.word	14740160
 564 02a8 8037E200 		.word	14825344
 565 02ac 4083E300 		.word	14910272
 566 02b0 008DE700 		.word	15174912
 567 02b4 C039E600 		.word	15088064
 568 02b8 80E4E400 		.word	15000704
 569 02bc 4050E500 		.word	15028288
 570 02c0 00B4F700 		.word	16233472
 571 02c4 C000F600 		.word	16122048
 572 02c8 80DDF400 		.word	16047488
 573 02cc 4069F500 		.word	16083264
 574 02d0 0067F100 		.word	15820544
 575 02d4 C0D3F000 		.word	15782848
 576 02d8 800EF200 		.word	15863424
 577 02dc 40BAF300 		.word	15972928
 578 02e0 0012FA00 		.word	16388608
 579 02e4 C0A6FB00 		.word	16492224
 580 02e8 807BF900 		.word	16350080
 581 02ec 40CFF800 		.word	16305984
 582 02f0 00C1FC00 		.word	16564480
 583 02f4 C075FD00 		.word	16610752
 584 02f8 80A8FF00 		.word	16754816
 585 02fc 401CFE00 		.word	16653376
 586 0300 0050B700 		.word	12013568
 587 0304 C0E4B600 		.word	11986112
 588 0308 8039B400 		.word	11811200
 589 030c 408DB500 		.word	11898176
 590 0310 0083B100 		.word	11633408
 591 0314 C037B000 		.word	11548608
 592 0318 80EAB200 		.word	11725440
 593 031c 405EB300 		.word	11755072
 594 0320 00F6BA00 		.word	12252672
 595 0324 C042BB00 		.word	12272320
 596 0328 809FB900 		.word	12164992
 597 032c 402BB800 		.word	12069696
 598 0330 0025BC00 		.word	12330240
 599 0334 C091BD00 		.word	12423616
 600 0338 804CBF00 		.word	12536960
 601 033c 40F8BE00 		.word	12515392
 602 0340 001CAC00 		.word	11279360
 603 0344 C0A8AD00 		.word	11380928
 604 0348 8075AF00 		.word	11498880
 605 034c 40C1AE00 		.word	11452736
 606 0350 00CFAA00 		.word	11194112
 607 0354 C07BAB00 		.word	11238336
 608 0358 80A6A900 		.word	11118208
 609 035c 4012A800 		.word	11014720
 610 0360 00BAA100 		.word	10598912
 611 0364 C00EA000 		.word	10489536
 612 0368 80D3A200 		.word	10670976
 613 036c 4067A300 		.word	10708800
 614 0370 0069A700 		.word	10971392
 615 0374 C0DDA600 		.word	10935744
ARM GAS  /tmp/ccziOb5q.s 			page 15


 616 0378 8000A400 		.word	10748032
 617 037c 40B4A500 		.word	10859584
 618 0380 00C88100 		.word	8505344
 619 0384 C07C8000 		.word	8420544
 620 0388 80A18200 		.word	8561024
 621 038c 40158300 		.word	8590656
 622 0390 001B8700 		.word	8854272
 623 0394 C0AF8600 		.word	8826816
 624 0398 80728400 		.word	8680064
 625 039c 40C68500 		.word	8767040
 626 03a0 006E8C00 		.word	9203200
 627 03a4 C0DA8D00 		.word	9296576
 628 03a8 80078F00 		.word	9373568
 629 03ac 40B38E00 		.word	9352000
 630 03b0 00BD8A00 		.word	9092352
 631 03b4 C0098B00 		.word	9112000
 632 03b8 80D48900 		.word	9032832
 633 03bc 40608800 		.word	8937536
 634 03c0 00849A00 		.word	10126336
 635 03c4 C0309B00 		.word	10170560
 636 03c8 80ED9900 		.word	10087808
 637 03cc 40599800 		.word	9984320
 638 03d0 00579C00 		.word	10245888
 639 03d4 C0E39D00 		.word	10347456
 640 03d8 803E9F00 		.word	10436224
 641 03dc 408A9E00 		.word	10390080
 642 03e0 00229700 		.word	9904640
 643 03e4 C0969600 		.word	9868992
 644 03e8 804B9400 		.word	9718656
 645 03ec 40FF9500 		.word	9830208
 646 03f0 00F19100 		.word	9564416
 647 03f4 C0459000 		.word	9455040
 648 03f8 80989200 		.word	9607296
 649 03fc 402C9300 		.word	9645120
 650              		.text
 651              	.Letext0:
 652              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.8.2/include/stdint-gcc.h"
 653              		.file 3 "bluetooth_le.h"
ARM GAS  /tmp/ccziOb5q.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bluetooth_le.c
     /tmp/ccziOb5q.s:19     .text.btle_channel_index:0000000000000000 $t
     /tmp/ccziOb5q.s:24     .text.btle_channel_index:0000000000000000 btle_channel_index
     /tmp/ccziOb5q.s:76     .text.btle_channel_index_to_phys:0000000000000000 $t
     /tmp/ccziOb5q.s:81     .text.btle_channel_index_to_phys:0000000000000000 btle_channel_index_to_phys
     /tmp/ccziOb5q.s:132    .text.btle_next_hop:0000000000000000 $t
     /tmp/ccziOb5q.s:137    .text.btle_next_hop:0000000000000000 btle_next_hop
     /tmp/ccziOb5q.s:172    .text.btle_calc_crc:0000000000000000 $t
     /tmp/ccziOb5q.s:177    .text.btle_calc_crc:0000000000000000 btle_calc_crc
     /tmp/ccziOb5q.s:243    .text.btle_reverse_crc:0000000000000000 $t
     /tmp/ccziOb5q.s:248    .text.btle_reverse_crc:0000000000000000 btle_reverse_crc
     /tmp/ccziOb5q.s:334    .text.btle_crcgen_lut:0000000000000000 $t
     /tmp/ccziOb5q.s:339    .text.btle_crcgen_lut:0000000000000000 btle_crcgen_lut
     /tmp/ccziOb5q.s:383    .text.btle_crcgen_lut:0000000000000024 $d
     /tmp/ccziOb5q.s:393    .data:0000000000000000 btle_crc_lut
     /tmp/ccziOb5q.s:389    .data:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
