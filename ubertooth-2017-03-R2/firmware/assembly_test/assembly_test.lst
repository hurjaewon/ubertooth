ARM GAS  /tmp/ccbDzT8J.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"assembly_test.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.dma_init,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	dma_init:
  24              	.LFB9:
  25              		.file 1 "assembly_test.c"
   1:assembly_test.c **** /*
   2:assembly_test.c ****  * Copyright 2010 Michael Ossmann
   3:assembly_test.c ****  *
   4:assembly_test.c ****  * This file is part of Project Ubertooth.
   5:assembly_test.c ****  *
   6:assembly_test.c ****  * This program is free software; you can redistribute it and/or modify
   7:assembly_test.c ****  * it under the terms of the GNU General Public License as published by
   8:assembly_test.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:assembly_test.c ****  * any later version.
  10:assembly_test.c ****  *
  11:assembly_test.c ****  * This program is distributed in the hope that it will be useful,
  12:assembly_test.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:assembly_test.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:assembly_test.c ****  * GNU General Public License for more details.
  15:assembly_test.c ****  *
  16:assembly_test.c ****  * You should have received a copy of the GNU General Public License
  17:assembly_test.c ****  * along with this program; see the file COPYING.  If not, write to
  18:assembly_test.c ****  * the Free Software Foundation, Inc., 51 Franklin Street,
  19:assembly_test.c ****  * Boston, MA 02110-1301, USA.
  20:assembly_test.c ****  */
  21:assembly_test.c **** 
  22:assembly_test.c **** /*
  23:assembly_test.c **** 	LPCUSB, an USB device driver for LPC microcontrollers	
  24:assembly_test.c **** 	Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
  25:assembly_test.c **** 
  26:assembly_test.c **** 	Redistribution and use in source and binary forms, with or without
  27:assembly_test.c **** 	modification, are permitted provided that the following conditions are met:
  28:assembly_test.c **** 
  29:assembly_test.c **** 	1. Redistributions of source code must retain the above copyright
  30:assembly_test.c **** 	   notice, this list of conditions and the following disclaimer.
  31:assembly_test.c **** 	2. Redistributions in binary form must reproduce the above copyright
  32:assembly_test.c **** 	   notice, this list of conditions and the following disclaimer in the
  33:assembly_test.c **** 	   documentation and/or other materials provided with the distribution.
ARM GAS  /tmp/ccbDzT8J.s 			page 2


  34:assembly_test.c **** 	3. The name of the author may not be used to endorse or promote products
  35:assembly_test.c **** 	   derived from this software without specific prior written permission.
  36:assembly_test.c **** 
  37:assembly_test.c **** 	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  38:assembly_test.c **** 	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  39:assembly_test.c **** 	OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  40:assembly_test.c **** 	IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, 
  41:assembly_test.c **** 	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  42:assembly_test.c **** 	NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  43:assembly_test.c **** 	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  44:assembly_test.c **** 	THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  45:assembly_test.c **** 	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  46:assembly_test.c **** 	THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:assembly_test.c **** */
  48:assembly_test.c **** /* For git version strings */
  49:assembly_test.c **** #include <string.h>
  50:assembly_test.c **** 
  51:assembly_test.c **** #include "ubertooth.h"
  52:assembly_test.c **** #include "usbapi.h"
  53:assembly_test.c **** #include "usbhw_lpc.h"
  54:assembly_test.c **** 
  55:assembly_test.c **** /*
  56:assembly_test.c ****  * CLK100NS is a free-running clock with a period of 100ns.  It resets every
  57:assembly_test.c ****  * 2^15 * 10^5 cycles (about 5.5 minutes) and is used to compute CLKN.
  58:assembly_test.c ****  *
  59:assembly_test.c ****  * CLKN is the native (local) clock as defined in the Bluetooth specification.
  60:assembly_test.c ****  * It advances 3200 times per second.  Two CLKN periods make a Bluetooth time
  61:assembly_test.c ****  * slot.
  62:assembly_test.c ****  */
  63:assembly_test.c **** 
  64:assembly_test.c **** #define CLK100NS T0TC
  65:assembly_test.c **** volatile u8 clkn_high;
  66:assembly_test.c **** #define CLKN ((clkn_high << 20) | (CLK100NS / 3125))
  67:assembly_test.c **** 
  68:assembly_test.c **** #define BULK_IN_EP		0x82
  69:assembly_test.c **** #define BULK_OUT_EP		0x05
  70:assembly_test.c **** 
  71:assembly_test.c **** #define MAX_PACKET_SIZE	64
  72:assembly_test.c **** 
  73:assembly_test.c **** #define LE_WORD(x)		((x)&0xFF),((x)>>8)
  74:assembly_test.c **** 
  75:assembly_test.c **** /* DMA buffers */
  76:assembly_test.c **** #define DMA_SIZE 50
  77:assembly_test.c **** u8 rxbuf1[DMA_SIZE];
  78:assembly_test.c **** u8 rxbuf2[DMA_SIZE];
  79:assembly_test.c **** 
  80:assembly_test.c **** /*
  81:assembly_test.c ****  * The active buffer is the one with an active DMA transfer.
  82:assembly_test.c ****  * The idle buffer is the one we can read/write between transfers.
  83:assembly_test.c ****  */
  84:assembly_test.c **** u8 *active_rxbuf = &rxbuf1[0];
  85:assembly_test.c **** u8 *idle_rxbuf = &rxbuf2[0];
  86:assembly_test.c **** 
  87:assembly_test.c **** rangetest_result rr;
  88:assembly_test.c **** 
  89:assembly_test.c **** volatile u32 mode = MODE_IDLE;
  90:assembly_test.c **** volatile u32 requested_mode = MODE_IDLE;
ARM GAS  /tmp/ccbDzT8J.s 			page 3


  91:assembly_test.c **** volatile u32 modulation = MOD_BT_BASIC_RATE;
  92:assembly_test.c **** volatile u16 channel = 2441;
  93:assembly_test.c **** volatile u16 low_freq = 2400;
  94:assembly_test.c **** volatile u16 high_freq = 2483;
  95:assembly_test.c **** 
  96:assembly_test.c **** /* DMA linked list items */
  97:assembly_test.c **** typedef struct {
  98:assembly_test.c **** 	u32 src;
  99:assembly_test.c **** 	u32 dest;
 100:assembly_test.c **** 	u32 next_lli;
 101:assembly_test.c **** 	u32 control;
 102:assembly_test.c **** } dma_lli;
 103:assembly_test.c **** 
 104:assembly_test.c **** dma_lli rx_dma_lli1;
 105:assembly_test.c **** dma_lli rx_dma_lli2;
 106:assembly_test.c **** 
 107:assembly_test.c **** /* rx terminal count and error interrupt counters */
 108:assembly_test.c **** volatile u32 rx_tc;
 109:assembly_test.c **** volatile u32 rx_err;
 110:assembly_test.c **** 
 111:assembly_test.c **** /* number of rx USB packets to send */
 112:assembly_test.c **** volatile u32 rx_pkts = 0;
 113:assembly_test.c **** 
 114:assembly_test.c **** /* status information byte */
 115:assembly_test.c **** volatile u8 status = 0;
 116:assembly_test.c **** 
 117:assembly_test.c **** #define DMA_OVERFLOW  0x01
 118:assembly_test.c **** #define DMA_ERROR     0x02
 119:assembly_test.c **** #define FIFO_OVERFLOW 0x04
 120:assembly_test.c **** 
 121:assembly_test.c **** /*
 122:assembly_test.c ****  * This is supposed to be a lock-free ring buffer, but I haven't verified
 123:assembly_test.c ****  * atomicity of the operations on head and tail.
 124:assembly_test.c ****  */
 125:assembly_test.c **** 
 126:assembly_test.c **** usb_pkt_rx fifo[128];
 127:assembly_test.c **** 
 128:assembly_test.c **** volatile u32 head = 0;
 129:assembly_test.c **** volatile u32 tail = 0;
 130:assembly_test.c **** 
 131:assembly_test.c **** void queue_init()
 132:assembly_test.c **** {
 133:assembly_test.c **** 	head = 0;
 134:assembly_test.c **** 	tail = 0;
 135:assembly_test.c **** }
 136:assembly_test.c **** 
 137:assembly_test.c **** int enqueue(u8 *buf)
 138:assembly_test.c **** {
 139:assembly_test.c **** 	int i;
 140:assembly_test.c **** 	u8 h = head & 0x7F;
 141:assembly_test.c **** 	u8 t = tail & 0x7F;
 142:assembly_test.c **** 	u8 n = (t + 1) & 0x7F;
 143:assembly_test.c **** 
 144:assembly_test.c **** 	/* fail if queue is full */
 145:assembly_test.c **** 	if (h == n)
 146:assembly_test.c **** 		return 0;
 147:assembly_test.c **** 
ARM GAS  /tmp/ccbDzT8J.s 			page 4


 148:assembly_test.c **** 	fifo[t].clkn_high = clkn_high;
 149:assembly_test.c **** 	fifo[t].clk100ns = CLK100NS;
 150:assembly_test.c **** 
 151:assembly_test.c **** 	USRLED_SET;
 152:assembly_test.c **** 	for (i = 0; i < DMA_SIZE; i++)
 153:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 154:assembly_test.c **** 	fifo[t].status = status;
 155:assembly_test.c **** 	status = 0;
 156:assembly_test.c **** 	++tail;
 157:assembly_test.c **** 
 158:assembly_test.c **** 	return 1;
 159:assembly_test.c **** }
 160:assembly_test.c **** 
 161:assembly_test.c **** int dequeue()
 162:assembly_test.c **** {
 163:assembly_test.c **** 	u8 h = head & 0x7F;
 164:assembly_test.c **** 	u8 t = tail & 0x7F;
 165:assembly_test.c **** 
 166:assembly_test.c **** 	/* fail if queue is empty */
 167:assembly_test.c **** 	if (h == t) {
 168:assembly_test.c **** 		USRLED_CLR;
 169:assembly_test.c **** 		return 0;
 170:assembly_test.c **** 	}
 171:assembly_test.c **** 
 172:assembly_test.c **** 	USBHwEPWrite(BULK_IN_EP, (u8 *)&fifo[h], sizeof(usb_pkt_rx));
 173:assembly_test.c **** 	++head;
 174:assembly_test.c **** 
 175:assembly_test.c **** 	return 1;
 176:assembly_test.c **** }
 177:assembly_test.c **** 
 178:assembly_test.c **** static const u8 abDescriptors[] = {
 179:assembly_test.c **** 
 180:assembly_test.c **** /* Device descriptor */
 181:assembly_test.c **** 	0x12,              		
 182:assembly_test.c **** 	DESC_DEVICE,       		
 183:assembly_test.c **** 	LE_WORD(0x0200),		// bcdUSB	
 184:assembly_test.c **** 	0xFF,              		// bDeviceClass
 185:assembly_test.c **** 	0x00,              		// bDeviceSubClass
 186:assembly_test.c **** 	0x00,              		// bDeviceProtocol
 187:assembly_test.c **** 	MAX_PACKET_SIZE0,  		// bMaxPacketSize
 188:assembly_test.c **** 	LE_WORD(0xFFFF),		// idVendor
 189:assembly_test.c **** 	LE_WORD(0x0004),		// idProduct
 190:assembly_test.c **** 	LE_WORD(0x0100),		// bcdDevice
 191:assembly_test.c **** 	0x01,              		// iManufacturer
 192:assembly_test.c **** 	0x02,              		// iProduct
 193:assembly_test.c **** 	0x03,              		// iSerialNumber
 194:assembly_test.c **** 	0x01,              		// bNumConfigurations
 195:assembly_test.c **** 
 196:assembly_test.c **** // configuration
 197:assembly_test.c **** 	0x09,
 198:assembly_test.c **** 	DESC_CONFIGURATION,
 199:assembly_test.c **** 	LE_WORD(0x20),  		// wTotalLength
 200:assembly_test.c **** 	0x01,  					// bNumInterfaces
 201:assembly_test.c **** 	0x01,  					// bConfigurationValue
 202:assembly_test.c **** 	0x00,  					// iConfiguration
 203:assembly_test.c **** 	0x80,  					// bmAttributes
 204:assembly_test.c **** 	0x32,  					// bMaxPower
ARM GAS  /tmp/ccbDzT8J.s 			page 5


 205:assembly_test.c **** 
 206:assembly_test.c **** // interface
 207:assembly_test.c **** 	0x09,   				
 208:assembly_test.c **** 	DESC_INTERFACE, 
 209:assembly_test.c **** 	0x00,  		 			// bInterfaceNumber
 210:assembly_test.c **** 	0x00,   				// bAlternateSetting
 211:assembly_test.c **** 	0x02,   				// bNumEndPoints
 212:assembly_test.c **** 	0xFF,   				// bInterfaceClass
 213:assembly_test.c **** 	0x00,   				// bInterfaceSubClass
 214:assembly_test.c **** 	0x00,   				// bInterfaceProtocol
 215:assembly_test.c **** 	0x00,   				// iInterface
 216:assembly_test.c **** 
 217:assembly_test.c **** // bulk in
 218:assembly_test.c **** 	0x07,   		
 219:assembly_test.c **** 	DESC_ENDPOINT,   		
 220:assembly_test.c **** 	BULK_IN_EP,				// bEndpointAddress
 221:assembly_test.c **** 	0x02,   				// bmAttributes = BULK
 222:assembly_test.c **** 	LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
 223:assembly_test.c **** 	0,						// bInterval   		
 224:assembly_test.c **** 
 225:assembly_test.c **** // bulk out
 226:assembly_test.c **** 	0x07,   		
 227:assembly_test.c **** 	DESC_ENDPOINT,   		
 228:assembly_test.c **** 	BULK_OUT_EP,			// bEndpointAddress
 229:assembly_test.c **** 	0x02,   				// bmAttributes = BULK
 230:assembly_test.c **** 	LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
 231:assembly_test.c **** 	0,						// bInterval 
 232:assembly_test.c **** 
 233:assembly_test.c **** // string descriptors
 234:assembly_test.c **** 	0x04,
 235:assembly_test.c **** 	DESC_STRING,
 236:assembly_test.c **** 	LE_WORD(0x0409),
 237:assembly_test.c **** 
 238:assembly_test.c **** 	// manufacturer string
 239:assembly_test.c **** 	0x44,
 240:assembly_test.c **** 	DESC_STRING,
 241:assembly_test.c **** 	'h', 0, 't', 0, 't', 0, 'p', 0, ':', 0, '/', 0, '/', 0, 'u', 0,
 242:assembly_test.c **** 	'b', 0, 'e', 0, 'r', 0, 't', 0, 'o', 0, 'o', 0, 't', 0, 'h', 0,
 243:assembly_test.c **** 	'.', 0, 's', 0, 'o', 0, 'u', 0, 'r', 0, 'c', 0, 'e', 0, 'f', 0,
 244:assembly_test.c **** 	'o', 0, 'r', 0, 'g', 0, 'e', 0, '.', 0, 'n', 0, 'e', 0, 't', 0,
 245:assembly_test.c **** 	'/', 0,
 246:assembly_test.c **** 
 247:assembly_test.c **** 	// product string
 248:assembly_test.c **** 	0x30,
 249:assembly_test.c **** 	DESC_STRING,
 250:assembly_test.c **** 	'u', 0, 'b', 0, 'e', 0, 'r', 0, 't', 0, 'o', 0, 'o', 0, 't', 0,
 251:assembly_test.c **** 	'h', 0, ' ', 0, 'a', 0, 's', 0, 's', 0, 'e', 0, 'm', 0, 'b', 0,
 252:assembly_test.c **** 	'l', 0, 'y', 0, '_', 0, 't', 0, 'e', 0, 's', 0, 't', 0,
 253:assembly_test.c **** 
 254:assembly_test.c **** 	// serial number string
 255:assembly_test.c **** 	0x12,
 256:assembly_test.c **** 	DESC_STRING,
 257:assembly_test.c **** 	'0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '1', 0,
 258:assembly_test.c **** 
 259:assembly_test.c **** 	// terminator
 260:assembly_test.c **** 	0
 261:assembly_test.c **** };
ARM GAS  /tmp/ccbDzT8J.s 			page 6


 262:assembly_test.c **** 
 263:assembly_test.c **** static u8 abVendorReqData[17];
 264:assembly_test.c **** 
 265:assembly_test.c **** static void usb_bulk_in_handler(u8 bEP, u8 bEPStatus)
 266:assembly_test.c **** {
 267:assembly_test.c **** 	if (!(bEPStatus & EP_STATUS_DATA))
 268:assembly_test.c **** 		dequeue();
 269:assembly_test.c **** }
 270:assembly_test.c **** 
 271:assembly_test.c **** static void usb_bulk_out_handler(u8 bEP, u8 bEPStatus)
 272:assembly_test.c **** {
 273:assembly_test.c **** }
 274:assembly_test.c **** 
 275:assembly_test.c **** static BOOL usb_vendor_request_handler(TSetupPacket *pSetup, int *piLen, u8 **ppbData)
 276:assembly_test.c **** {
 277:assembly_test.c **** 	u8 *pbData = *ppbData;
 278:assembly_test.c **** 	u32 command[5];
 279:assembly_test.c **** 	u32 result[5];
 280:assembly_test.c **** 	u8 length; // string length
 281:assembly_test.c **** 
 282:assembly_test.c **** 	switch (pSetup->bRequest) {
 283:assembly_test.c **** 
 284:assembly_test.c **** 	case UBERTOOTH_PING:
 285:assembly_test.c **** 		*piLen = 0;
 286:assembly_test.c **** 		break;
 287:assembly_test.c **** 
 288:assembly_test.c **** 	case UBERTOOTH_RX_SYMBOLS:
 289:assembly_test.c **** 		rx_pkts += pSetup->wValue;
 290:assembly_test.c **** 		if (rx_pkts == 0)
 291:assembly_test.c **** 			rx_pkts = 0xFFFFFFFF;
 292:assembly_test.c **** 		*piLen = 0;
 293:assembly_test.c **** 		break;
 294:assembly_test.c **** 
 295:assembly_test.c **** 	case UBERTOOTH_GET_USRLED:
 296:assembly_test.c **** 		pbData[0] = (USRLED) ? 1 : 0;
 297:assembly_test.c **** 		*piLen = 1;
 298:assembly_test.c **** 		break;
 299:assembly_test.c **** 
 300:assembly_test.c **** 	case UBERTOOTH_SET_USRLED:
 301:assembly_test.c **** 		if (pSetup->wValue)
 302:assembly_test.c **** 			USRLED_SET;
 303:assembly_test.c **** 		else
 304:assembly_test.c **** 			USRLED_CLR;
 305:assembly_test.c **** 		break;
 306:assembly_test.c **** 
 307:assembly_test.c **** 	case UBERTOOTH_GET_RXLED:
 308:assembly_test.c **** 		pbData[0] = (RXLED) ? 1 : 0;
 309:assembly_test.c **** 		*piLen = 1;
 310:assembly_test.c **** 		break;
 311:assembly_test.c **** 
 312:assembly_test.c **** 	case UBERTOOTH_SET_RXLED:
 313:assembly_test.c **** 		if (pSetup->wValue)
 314:assembly_test.c **** 			RXLED_SET;
 315:assembly_test.c **** 		else
 316:assembly_test.c **** 			RXLED_CLR;
 317:assembly_test.c **** 		break;
 318:assembly_test.c **** 
ARM GAS  /tmp/ccbDzT8J.s 			page 7


 319:assembly_test.c **** 	case UBERTOOTH_GET_TXLED:
 320:assembly_test.c **** 		pbData[0] = (TXLED) ? 1 : 0;
 321:assembly_test.c **** 		*piLen = 1;
 322:assembly_test.c **** 		break;
 323:assembly_test.c **** 
 324:assembly_test.c **** 	case UBERTOOTH_SET_TXLED:
 325:assembly_test.c **** 		if (pSetup->wValue)
 326:assembly_test.c **** 			TXLED_SET;
 327:assembly_test.c **** 		else
 328:assembly_test.c **** 			TXLED_CLR;
 329:assembly_test.c **** 		break;
 330:assembly_test.c **** 
 331:assembly_test.c **** 	case UBERTOOTH_GET_1V8:
 332:assembly_test.c **** 		pbData[0] = (CC1V8) ? 1 : 0;
 333:assembly_test.c **** 		*piLen = 1;
 334:assembly_test.c **** 		break;
 335:assembly_test.c **** 
 336:assembly_test.c **** 	case UBERTOOTH_SET_1V8:
 337:assembly_test.c **** 		if (pSetup->wValue)
 338:assembly_test.c **** 			CC1V8_SET;
 339:assembly_test.c **** 		else
 340:assembly_test.c **** 			CC1V8_CLR;
 341:assembly_test.c **** 		break;
 342:assembly_test.c **** 
 343:assembly_test.c **** 	case UBERTOOTH_GET_PARTNUM:
 344:assembly_test.c **** 		command[0] = 54; /* read part number */
 345:assembly_test.c **** 		iap_entry(command, result);
 346:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 347:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 348:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 349:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 350:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 351:assembly_test.c **** 		*piLen = 5;
 352:assembly_test.c **** 		break;
 353:assembly_test.c **** 
 354:assembly_test.c **** 	case UBERTOOTH_RESET:
 355:assembly_test.c **** 		reset();
 356:assembly_test.c **** 		break;
 357:assembly_test.c **** 
 358:assembly_test.c **** 	case UBERTOOTH_GET_SERIAL:
 359:assembly_test.c **** 		command[0] = 58; /* read device serial number */
 360:assembly_test.c **** 		iap_entry(command, result);
 361:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 362:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 363:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 364:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 365:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 366:assembly_test.c **** 		pbData[5] = result[2] & 0xFF;
 367:assembly_test.c **** 		pbData[6] = (result[2] >> 8) & 0xFF;
 368:assembly_test.c **** 		pbData[7] = (result[2] >> 16) & 0xFF;
 369:assembly_test.c **** 		pbData[8] = (result[2] >> 24) & 0xFF;
 370:assembly_test.c **** 		pbData[9] = result[3] & 0xFF;
 371:assembly_test.c **** 		pbData[10] = (result[3] >> 8) & 0xFF;
 372:assembly_test.c **** 		pbData[11] = (result[3] >> 16) & 0xFF;
 373:assembly_test.c **** 		pbData[12] = (result[3] >> 24) & 0xFF;
 374:assembly_test.c **** 		pbData[13] = result[4] & 0xFF;
 375:assembly_test.c **** 		pbData[14] = (result[4] >> 8) & 0xFF;
ARM GAS  /tmp/ccbDzT8J.s 			page 8


 376:assembly_test.c **** 		pbData[15] = (result[4] >> 16) & 0xFF;
 377:assembly_test.c **** 		pbData[16] = (result[4] >> 24) & 0xFF;
 378:assembly_test.c **** 		*piLen = 17;
 379:assembly_test.c **** 		break;
 380:assembly_test.c **** 
 381:assembly_test.c **** #ifdef UBERTOOTH_ONE
 382:assembly_test.c **** 	case UBERTOOTH_GET_PAEN:
 383:assembly_test.c **** 		pbData[0] = (PAEN) ? 1 : 0;
 384:assembly_test.c **** 		*piLen = 1;
 385:assembly_test.c **** 		break;
 386:assembly_test.c **** 
 387:assembly_test.c **** 	case UBERTOOTH_SET_PAEN:
 388:assembly_test.c **** 		if (pSetup->wValue)
 389:assembly_test.c **** 			PAEN_SET;
 390:assembly_test.c **** 		else
 391:assembly_test.c **** 			PAEN_CLR;
 392:assembly_test.c **** 		break;
 393:assembly_test.c **** 
 394:assembly_test.c **** 	case UBERTOOTH_GET_HGM:
 395:assembly_test.c **** 		pbData[0] = (HGM) ? 1 : 0;
 396:assembly_test.c **** 		*piLen = 1;
 397:assembly_test.c **** 		break;
 398:assembly_test.c **** 
 399:assembly_test.c **** 	case UBERTOOTH_SET_HGM:
 400:assembly_test.c **** 		if (pSetup->wValue)
 401:assembly_test.c **** 			HGM_SET;
 402:assembly_test.c **** 		else
 403:assembly_test.c **** 			HGM_CLR;
 404:assembly_test.c **** 		break;
 405:assembly_test.c **** #endif
 406:assembly_test.c **** 
 407:assembly_test.c **** #ifdef TX_ENABLE
 408:assembly_test.c **** 	case UBERTOOTH_TX_TEST:
 409:assembly_test.c **** 		requested_mode = MODE_TX_TEST;
 410:assembly_test.c **** 		break;
 411:assembly_test.c **** 
 412:assembly_test.c **** 	case UBERTOOTH_GET_PALEVEL:
 413:assembly_test.c **** 		pbData[0] = cc2400_get(FREND) & 0x7;
 414:assembly_test.c **** 		*piLen = 1;
 415:assembly_test.c **** 		break;
 416:assembly_test.c **** 
 417:assembly_test.c **** 	case UBERTOOTH_SET_PALEVEL:
 418:assembly_test.c **** 		if( pSetup->wValue < 8 ) {
 419:assembly_test.c **** 			cc2400_set(FREND, 8 | pSetup->wValue);
 420:assembly_test.c **** 		} else {
 421:assembly_test.c **** 			return FALSE;
 422:assembly_test.c **** 		}
 423:assembly_test.c **** 		break;
 424:assembly_test.c **** 
 425:assembly_test.c **** 	case UBERTOOTH_RANGE_TEST:
 426:assembly_test.c **** 		requested_mode = MODE_RANGE_TEST;
 427:assembly_test.c **** 		break;
 428:assembly_test.c **** 
 429:assembly_test.c **** 	case UBERTOOTH_REPEATER:
 430:assembly_test.c **** 		requested_mode = MODE_REPEATER;
 431:assembly_test.c **** 		break;
 432:assembly_test.c **** #endif
ARM GAS  /tmp/ccbDzT8J.s 			page 9


 433:assembly_test.c **** 
 434:assembly_test.c **** 	case UBERTOOTH_RANGE_CHECK:
 435:assembly_test.c **** 		pbData[0] = rr.valid;
 436:assembly_test.c **** 		pbData[1] = rr.request_pa;
 437:assembly_test.c **** 		pbData[2] = rr.request_num;
 438:assembly_test.c **** 		pbData[3] = rr.reply_pa;
 439:assembly_test.c **** 		pbData[4] = rr.reply_num;
 440:assembly_test.c **** 		*piLen = 5;
 441:assembly_test.c **** 		break;
 442:assembly_test.c **** 
 443:assembly_test.c **** 	case UBERTOOTH_STOP:
 444:assembly_test.c **** 		requested_mode = MODE_IDLE;
 445:assembly_test.c **** 		break;
 446:assembly_test.c **** 
 447:assembly_test.c **** 	case UBERTOOTH_GET_MOD:
 448:assembly_test.c **** 		pbData[0] = modulation;
 449:assembly_test.c **** 		*piLen = 1;
 450:assembly_test.c **** 		break;
 451:assembly_test.c **** 
 452:assembly_test.c **** 	case UBERTOOTH_SET_MOD:
 453:assembly_test.c **** 		modulation = pSetup->wValue;
 454:assembly_test.c **** 		break;
 455:assembly_test.c **** 
 456:assembly_test.c **** 	case UBERTOOTH_GET_CHANNEL:
 457:assembly_test.c **** 		pbData[0] = channel & 0xFF;
 458:assembly_test.c **** 		pbData[1] = (channel >> 8) & 0xFF;
 459:assembly_test.c **** 		*piLen = 2;
 460:assembly_test.c **** 		break;
 461:assembly_test.c **** 
 462:assembly_test.c ****     case UBERTOOTH_SET_CHANNEL:
 463:assembly_test.c **** 		channel = pSetup->wValue;
 464:assembly_test.c **** 		channel = MAX(channel, MIN_FREQ);
 465:assembly_test.c **** 		channel = MIN(channel, MAX_FREQ);
 466:assembly_test.c **** 		break;
 467:assembly_test.c **** 
 468:assembly_test.c **** 	case UBERTOOTH_SET_ISP:
 469:assembly_test.c **** 		command[0] = 57;
 470:assembly_test.c **** 		iap_entry(command, result);
 471:assembly_test.c **** 		*piLen = 0; /* should never return */
 472:assembly_test.c **** 		break;
 473:assembly_test.c **** 
 474:assembly_test.c **** 	case UBERTOOTH_FLASH:
 475:assembly_test.c **** 		bootloader_ctrl = DFU_MODE;
 476:assembly_test.c **** 		reset();
 477:assembly_test.c **** 		break;
 478:assembly_test.c **** 
 479:assembly_test.c **** 	case UBERTOOTH_SPECAN:
 480:assembly_test.c **** 		if (pSetup->wValue < 2049 || pSetup->wValue > 3072 || 
 481:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 482:assembly_test.c **** 				pSetup->wIndex < pSetup->wValue)
 483:assembly_test.c **** 			return FALSE;
 484:assembly_test.c **** 		low_freq = pSetup->wValue;
 485:assembly_test.c **** 		high_freq = pSetup->wIndex;
 486:assembly_test.c **** 		requested_mode = MODE_SPECAN;
 487:assembly_test.c **** 		*piLen = 0;
 488:assembly_test.c **** 		break;
 489:assembly_test.c **** 
ARM GAS  /tmp/ccbDzT8J.s 			page 10


 490:assembly_test.c **** 	case UBERTOOTH_GET_REV_NUM:
 491:assembly_test.c **** 		pbData[0] = 0x00;
 492:assembly_test.c **** 		pbData[1] = 0x00;
 493:assembly_test.c **** 
 494:assembly_test.c **** 		length = (u8)strlen(GIT_REVISION);
 495:assembly_test.c **** 		pbData[2] = length;
 496:assembly_test.c **** 
 497:assembly_test.c **** 		memcpy(&pbData[3], GIT_REVISION, length);
 498:assembly_test.c **** 
 499:assembly_test.c **** 		*piLen = 2 + 1 + length;
 500:assembly_test.c **** 		break;
 501:assembly_test.c **** 
 502:assembly_test.c **** 	default:
 503:assembly_test.c **** 		return FALSE;
 504:assembly_test.c **** 	}
 505:assembly_test.c **** 	return TRUE;
 506:assembly_test.c **** }
 507:assembly_test.c **** 
 508:assembly_test.c **** int ubertooth_usb_init()
 509:assembly_test.c **** {
 510:assembly_test.c **** 	// initialise stack
 511:assembly_test.c **** 	USBInit();
 512:assembly_test.c **** 	
 513:assembly_test.c **** 	// register device descriptors
 514:assembly_test.c **** 	USBRegisterDescriptors(abDescriptors);
 515:assembly_test.c **** 
 516:assembly_test.c **** 	// override standard request handler
 517:assembly_test.c **** 	USBRegisterRequestHandler(REQTYPE_TYPE_VENDOR, usb_vendor_request_handler, abVendorReqData);
 518:assembly_test.c **** 
 519:assembly_test.c **** 	// register endpoints
 520:assembly_test.c **** 	//USBHwRegisterEPIntHandler(BULK_IN_EP, usb_bulk_in_handler);
 521:assembly_test.c **** 	//USBHwRegisterEPIntHandler(BULK_OUT_EP, usb_bulk_out_handler);
 522:assembly_test.c **** 
 523:assembly_test.c **** 	// enable USB interrupts
 524:assembly_test.c **** 	//ISER0 |= ISER0_ISE_USB;
 525:assembly_test.c **** 	
 526:assembly_test.c **** 	// connect to bus
 527:assembly_test.c **** 	USBHwConnect(TRUE);
 528:assembly_test.c **** 
 529:assembly_test.c **** 	return 0;
 530:assembly_test.c **** }
 531:assembly_test.c **** 
 532:assembly_test.c **** static void clkn_init()
 533:assembly_test.c **** {
 534:assembly_test.c **** 	/*
 535:assembly_test.c **** 	 * Because these are reset defaults, we're assuming TIMER0 is powered on
 536:assembly_test.c **** 	 * and in timer mode.  The TIMER0 peripheral clock should have been set to
 537:assembly_test.c **** 	 * cclk/2 (50 MHz) by clock_start().
 538:assembly_test.c **** 	 */
 539:assembly_test.c **** 
 540:assembly_test.c **** 	/* stop and reset the timer to zero */
 541:assembly_test.c **** 	T0TCR = TCR_Counter_Reset;
 542:assembly_test.c **** 	clkn_high = 0;
 543:assembly_test.c **** 
 544:assembly_test.c **** 	/*
 545:assembly_test.c **** 	 * The peripheral clock has a period of 20ns.  5 pclk periods makes one
 546:assembly_test.c **** 	 * CLK100NS period (100ns).  CLK100NS resets every 2^15 * 10^5 (3276800000)
ARM GAS  /tmp/ccbDzT8J.s 			page 11


 547:assembly_test.c **** 	 * steps, roughly 5.5 minutes.
 548:assembly_test.c **** 	 */
 549:assembly_test.c **** 	T0PR = 4;
 550:assembly_test.c **** 	T0MR0 = 3276799999;
 551:assembly_test.c **** 	T0MCR = TMCR_MR0R | TMCR_MR0I;
 552:assembly_test.c **** 	ISER0 |= ISER0_ISE_TIMER0;
 553:assembly_test.c **** 
 554:assembly_test.c **** 	/* start timer */
 555:assembly_test.c **** 	T0TCR = TCR_Counter_Enable;
 556:assembly_test.c **** }
 557:assembly_test.c **** 
 558:assembly_test.c **** /* clkn_high is incremented each time CLK100NS rolls over */
 559:assembly_test.c **** void TIMER0_IRQHandler()
 560:assembly_test.c **** {
 561:assembly_test.c **** 	if (T0IR & TIR_MR0_Interrupt) {
 562:assembly_test.c **** 		++clkn_high;
 563:assembly_test.c **** 		T0IR |= TIR_MR0_Interrupt;
 564:assembly_test.c **** 	}
 565:assembly_test.c **** }
 566:assembly_test.c **** 
 567:assembly_test.c **** static void dma_init()
 568:assembly_test.c **** {
  26              		.loc 1 568 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 569:assembly_test.c **** 	/* power up GPDMA controller */
 570:assembly_test.c **** 	PCONP |= PCONP_PCGPDMA;
  31              		.loc 1 570 0
  32 0000 214B     		ldr	r3, .L5
 571:assembly_test.c **** 
 572:assembly_test.c **** 	/* zero out channel configs and clear interrupts */
 573:assembly_test.c **** 	DMACC0Config = 0;
 574:assembly_test.c **** 	DMACC1Config = 0;
 575:assembly_test.c **** 	DMACC2Config = 0;
 576:assembly_test.c **** 	DMACC3Config = 0;
 577:assembly_test.c **** 	DMACC4Config = 0;
 578:assembly_test.c **** 	DMACC5Config = 0;
 579:assembly_test.c **** 	DMACC6Config = 0;
 580:assembly_test.c **** 	DMACC7Config = 0;
 581:assembly_test.c **** 	DMACIntTCClear = 0xFF;
 582:assembly_test.c **** 	DMACIntErrClr = 0xFF;
 583:assembly_test.c **** 
 584:assembly_test.c **** 	/* DMA linked lists */
 585:assembly_test.c **** 	rx_dma_lli1.src = (u32)&(DIO_SSP_DR);
  33              		.loc 1 585 0
  34 0002 2248     		ldr	r0, .L5+4
 570:assembly_test.c **** 
  35              		.loc 1 570 0
  36 0004 1A68     		ldr	r2, [r3]
 586:assembly_test.c **** 	rx_dma_lli1.dest = (u32)&rxbuf1[0];
 587:assembly_test.c **** 	rx_dma_lli1.next_lli = (u32)&rx_dma_lli2;
 588:assembly_test.c **** 	rx_dma_lli1.control = (DMA_SIZE) |
  37              		.loc 1 588 0
  38 0006 2249     		ldr	r1, .L5+8
 570:assembly_test.c **** 
ARM GAS  /tmp/ccbDzT8J.s 			page 12


  39              		.loc 1 570 0
  40 0008 42F00052 		orr	r2, r2, #536870912
  41 000c 1A60     		str	r2, [r3]
 573:assembly_test.c **** 	DMACC1Config = 0;
  42              		.loc 1 573 0
  43 000e 214A     		ldr	r2, .L5+12
  44 0010 0023     		movs	r3, #0
  45 0012 1360     		str	r3, [r2]
 574:assembly_test.c **** 	DMACC2Config = 0;
  46              		.loc 1 574 0
  47 0014 1362     		str	r3, [r2, #32]
 575:assembly_test.c **** 	DMACC3Config = 0;
  48              		.loc 1 575 0
  49 0016 1364     		str	r3, [r2, #64]
 576:assembly_test.c **** 	DMACC4Config = 0;
  50              		.loc 1 576 0
  51 0018 1366     		str	r3, [r2, #96]
 577:assembly_test.c **** 	DMACC5Config = 0;
  52              		.loc 1 577 0
  53 001a C2F88030 		str	r3, [r2, #128]
 578:assembly_test.c **** 	DMACC6Config = 0;
  54              		.loc 1 578 0
  55 001e C2F8A030 		str	r3, [r2, #160]
 579:assembly_test.c **** 	DMACC7Config = 0;
  56              		.loc 1 579 0
  57 0022 C2F8C030 		str	r3, [r2, #192]
 580:assembly_test.c **** 	DMACIntTCClear = 0xFF;
  58              		.loc 1 580 0
  59 0026 C2F8E030 		str	r3, [r2, #224]
 581:assembly_test.c **** 	DMACIntErrClr = 0xFF;
  60              		.loc 1 581 0
  61 002a FF23     		movs	r3, #255
  62 002c A2F58472 		sub	r2, r2, #264
  63 0030 1360     		str	r3, [r2]
 582:assembly_test.c **** 
  64              		.loc 1 582 0
  65 0032 9360     		str	r3, [r2, #8]
 585:assembly_test.c **** 	rx_dma_lli1.dest = (u32)&rxbuf1[0];
  66              		.loc 1 585 0
  67 0034 184B     		ldr	r3, .L5+16
 586:assembly_test.c **** 	rx_dma_lli1.next_lli = (u32)&rx_dma_lli2;
  68              		.loc 1 586 0
  69 0036 194A     		ldr	r2, .L5+20
 585:assembly_test.c **** 	rx_dma_lli1.dest = (u32)&rxbuf1[0];
  70              		.loc 1 585 0
  71 0038 1860     		str	r0, [r3]
 586:assembly_test.c **** 	rx_dma_lli1.next_lli = (u32)&rx_dma_lli2;
  72              		.loc 1 586 0
  73 003a 5A60     		str	r2, [r3, #4]
 587:assembly_test.c **** 	rx_dma_lli1.control = (DMA_SIZE) |
  74              		.loc 1 587 0
  75 003c 184A     		ldr	r2, .L5+24
  76              		.loc 1 588 0
  77 003e D960     		str	r1, [r3, #12]
 589:assembly_test.c **** 			(1 << 12) |        /* source burst size = 4 */
 590:assembly_test.c **** 			(1 << 15) |        /* destination burst size = 4 */
 591:assembly_test.c **** 			(0 << 18) |        /* source width 8 bits */
ARM GAS  /tmp/ccbDzT8J.s 			page 13


 592:assembly_test.c **** 			(0 << 21) |        /* destination width 8 bits */
 593:assembly_test.c **** 			DMACCxControl_DI | /* destination increment */
 594:assembly_test.c **** 			DMACCxControl_I;   /* terminal count interrupt enable */
 595:assembly_test.c **** 
 596:assembly_test.c **** 	rx_dma_lli2.src = (u32)&(DIO_SSP_DR);
  78              		.loc 1 596 0
  79 0040 1060     		str	r0, [r2]
 597:assembly_test.c **** 	rx_dma_lli2.dest = (u32)&rxbuf2[0];
  80              		.loc 1 597 0
  81 0042 1848     		ldr	r0, .L5+28
 587:assembly_test.c **** 	rx_dma_lli1.control = (DMA_SIZE) |
  82              		.loc 1 587 0
  83 0044 9A60     		str	r2, [r3, #8]
 598:assembly_test.c **** 	rx_dma_lli2.next_lli = (u32)&rx_dma_lli1;
 599:assembly_test.c **** 	rx_dma_lli2.control = (DMA_SIZE) |
  84              		.loc 1 599 0
  85 0046 D160     		str	r1, [r2, #12]
 597:assembly_test.c **** 	rx_dma_lli2.dest = (u32)&rxbuf2[0];
  86              		.loc 1 597 0
  87 0048 5060     		str	r0, [r2, #4]
 598:assembly_test.c **** 	rx_dma_lli2.next_lli = (u32)&rx_dma_lli1;
  88              		.loc 1 598 0
  89 004a 9360     		str	r3, [r2, #8]
 600:assembly_test.c **** 			(1 << 12) |        /* source burst size = 4 */
 601:assembly_test.c **** 			(1 << 15) |        /* destination burst size = 4 */
 602:assembly_test.c **** 			(0 << 18) |        /* source width 8 bits */
 603:assembly_test.c **** 			(0 << 21) |        /* destination width 8 bits */
 604:assembly_test.c **** 			DMACCxControl_DI | /* destination increment */
 605:assembly_test.c **** 			DMACCxControl_I;   /* terminal count interrupt enable */
 606:assembly_test.c **** 
 607:assembly_test.c **** 	/* disable DMA interrupts */
 608:assembly_test.c **** 	ISER0 &= ~ISER0_ISE_DMA;
  90              		.loc 1 608 0
  91 004c 164A     		ldr	r2, .L5+32
  92 004e 1168     		ldr	r1, [r2]
  93 0050 21F08061 		bic	r1, r1, #67108864
  94 0054 1160     		str	r1, [r2]
 609:assembly_test.c **** 
 610:assembly_test.c **** 	/* enable DMA globally */
 611:assembly_test.c **** 	DMACConfig = DMACConfig_E;
  95              		.loc 1 611 0
  96 0056 154A     		ldr	r2, .L5+36
  97 0058 0121     		movs	r1, #1
  98 005a 1160     		str	r1, [r2]
  99              	.L3:
 612:assembly_test.c **** 	while (!(DMACConfig & DMACConfig_E));
 100              		.loc 1 612 0 discriminator 1
 101 005c 1168     		ldr	r1, [r2]
 102 005e C907     		lsls	r1, r1, #31
 103 0060 FCD5     		bpl	.L3
 613:assembly_test.c **** 
 614:assembly_test.c **** 	/* configure DMA channel 1 */
 615:assembly_test.c **** 	DMACC0SrcAddr = rx_dma_lli1.src;
 104              		.loc 1 615 0
 105 0062 1A68     		ldr	r2, [r3]
 106 0064 1249     		ldr	r1, .L5+40
 107 0066 0A60     		str	r2, [r1]
ARM GAS  /tmp/ccbDzT8J.s 			page 14


 616:assembly_test.c **** 	DMACC0DestAddr = rx_dma_lli1.dest;
 108              		.loc 1 616 0
 109 0068 5A68     		ldr	r2, [r3, #4]
 110 006a 4A60     		str	r2, [r1, #4]
 617:assembly_test.c **** 	DMACC0LLI = rx_dma_lli1.next_lli;
 111              		.loc 1 617 0
 112 006c 9A68     		ldr	r2, [r3, #8]
 113 006e 8A60     		str	r2, [r1, #8]
 618:assembly_test.c **** 	DMACC0Control = rx_dma_lli1.control;
 114              		.loc 1 618 0
 115 0070 DA68     		ldr	r2, [r3, #12]
 116 0072 104B     		ldr	r3, .L5+44
 117 0074 1A60     		str	r2, [r3]
 619:assembly_test.c **** 	DMACC0Config =
 118              		.loc 1 619 0
 119 0076 4DF20602 		movw	r2, #53254
 120 007a 5A60     		str	r2, [r3, #4]
 620:assembly_test.c **** 			DIO_SSP_SRC |
 621:assembly_test.c **** 			(0x2 << 11) |           /* peripheral to memory */
 622:assembly_test.c **** 			DMACCxConfig_IE |       /* allow error interrupts */
 623:assembly_test.c **** 			DMACCxConfig_ITC;       /* allow terminal count interrupts */
 624:assembly_test.c **** 
 625:assembly_test.c **** 	/* reset interrupt counters */
 626:assembly_test.c **** 	rx_tc = 0;
 121              		.loc 1 626 0
 122 007c 0E4A     		ldr	r2, .L5+48
 123 007e 0023     		movs	r3, #0
 124 0080 1360     		str	r3, [r2]
 627:assembly_test.c **** 	rx_err = 0;
 125              		.loc 1 627 0
 126 0082 0E4A     		ldr	r2, .L5+52
 127 0084 1360     		str	r3, [r2]
 128 0086 7047     		bx	lr
 129              	.L6:
 130              		.align	2
 131              	.L5:
 132 0088 C4C00F40 		.word	1074774212
 133 008c 08000340 		.word	1073938440
 134 0090 32900088 		.word	-2013229006
 135 0094 10410050 		.word	1342193936
 136 0098 00000000 		.word	rx_dma_lli1
 137 009c 00000000 		.word	rxbuf1
 138 00a0 00000000 		.word	rx_dma_lli2
 139 00a4 00000000 		.word	rxbuf2
 140 00a8 00E100E0 		.word	-536813312
 141 00ac 30400050 		.word	1342193712
 142 00b0 00410050 		.word	1342193920
 143 00b4 0C410050 		.word	1342193932
 144 00b8 00000000 		.word	rx_tc
 145 00bc 00000000 		.word	rx_err
 146              		.cfi_endproc
 147              	.LFE9:
 149              		.section	.text.dio_ssp_start,"ax",%progbits
 150              		.align	1
 151              		.thumb
 152              		.thumb_func
 154              	dio_ssp_start:
ARM GAS  /tmp/ccbDzT8J.s 			page 15


 155              	.LFB11:
 628:assembly_test.c **** }
 629:assembly_test.c **** 
 630:assembly_test.c **** void DMA_IRQHandler()
 631:assembly_test.c **** {
 632:assembly_test.c **** 	/* interrupt on channel 0 */
 633:assembly_test.c **** 	if (DMACIntStat & (1 << 0)) {
 634:assembly_test.c **** 		if (DMACIntTCStat & (1 << 0)) {
 635:assembly_test.c **** 			DMACIntTCClear |= (1 << 0);
 636:assembly_test.c **** 			++rx_tc;
 637:assembly_test.c **** 		}
 638:assembly_test.c **** 		if (DMACIntErrStat & (1 << 0)) {
 639:assembly_test.c **** 			DMACIntErrClr |= (1 << 0);
 640:assembly_test.c **** 			++rx_err;
 641:assembly_test.c **** 		}
 642:assembly_test.c **** 	}
 643:assembly_test.c **** }
 644:assembly_test.c **** 
 645:assembly_test.c **** static void dio_ssp_start()
 646:assembly_test.c **** {
 156              		.loc 1 646 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 647:assembly_test.c **** 	/* make sure the (active low) slave select signal is not active */
 648:assembly_test.c **** 	DIO_SSEL_SET;
 161              		.loc 1 648 0
 162 0000 0D4A     		ldr	r2, .L8
 163 0002 4FF08053 		mov	r3, #268435456
 164 0006 1360     		str	r3, [r2]
 649:assembly_test.c **** 
 650:assembly_test.c **** 	/* enable rx DMA on DIO_SSP */
 651:assembly_test.c **** 	DIO_SSP_DMACR |= SSPDMACR_RXDMAE;
 165              		.loc 1 651 0
 166 0008 0C4A     		ldr	r2, .L8+4
 167 000a 1168     		ldr	r1, [r2]
 168 000c 41F00101 		orr	r1, r1, #1
 169 0010 1160     		str	r1, [r2]
 652:assembly_test.c **** 	DIO_SSP_CR1 |= SSPCR1_SSE;
 170              		.loc 1 652 0
 171 0012 52F8201C 		ldr	r1, [r2, #-32]
 172 0016 41F00201 		orr	r1, r1, #2
 173 001a 42F8201C 		str	r1, [r2, #-32]
 653:assembly_test.c **** 	
 654:assembly_test.c **** 	/* enable DMA */
 655:assembly_test.c **** 	DMACC0Config |= DMACCxConfig_E;
 174              		.loc 1 655 0
 175 001e 084A     		ldr	r2, .L8+8
 176 0020 1168     		ldr	r1, [r2]
 177 0022 41F00101 		orr	r1, r1, #1
 178 0026 1160     		str	r1, [r2]
 656:assembly_test.c **** 	ISER0 |= ISER0_ISE_DMA;
 179              		.loc 1 656 0
 180 0028 064A     		ldr	r2, .L8+12
 181 002a 1168     		ldr	r1, [r2]
 182 002c 41F08061 		orr	r1, r1, #67108864
ARM GAS  /tmp/ccbDzT8J.s 			page 16


 183 0030 1160     		str	r1, [r2]
 657:assembly_test.c **** 
 658:assembly_test.c **** 	/* activate slave select pin */
 659:assembly_test.c **** 	DIO_SSEL_CLR;
 184              		.loc 1 659 0
 185 0032 054A     		ldr	r2, .L8+16
 186 0034 1360     		str	r3, [r2]
 187 0036 7047     		bx	lr
 188              	.L9:
 189              		.align	2
 190              	.L8:
 191 0038 98C00920 		.word	537510040
 192 003c 24000340 		.word	1073938468
 193 0040 10410050 		.word	1342193936
 194 0044 00E100E0 		.word	-536813312
 195 0048 9CC00920 		.word	537510044
 196              		.cfi_endproc
 197              	.LFE11:
 199              		.section	.text.usb_vendor_request_handler,"ax",%progbits
 200              		.align	1
 201              		.thumb
 202              		.thumb_func
 204              	usb_vendor_request_handler:
 205              	.LFB5:
 276:assembly_test.c **** 	u8 *pbData = *ppbData;
 206              		.loc 1 276 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 40
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL0:
 211 0000 70B5     		push	{r4, r5, r6, lr}
 212              		.cfi_def_cfa_offset 16
 213              		.cfi_offset 4, -16
 214              		.cfi_offset 5, -12
 215              		.cfi_offset 6, -8
 216              		.cfi_offset 14, -4
 217 0002 8AB0     		sub	sp, sp, #40
 218              		.cfi_def_cfa_offset 56
 282:assembly_test.c **** 
 219              		.loc 1 282 0
 220 0004 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 276:assembly_test.c **** 	u8 *pbData = *ppbData;
 221              		.loc 1 276 0
 222 0006 0D46     		mov	r5, r1
 277:assembly_test.c **** 	u32 command[5];
 223              		.loc 1 277 0
 224 0008 1468     		ldr	r4, [r2]
 225              	.LVL1:
 282:assembly_test.c **** 
 226              		.loc 1 282 0
 227 000a 212B     		cmp	r3, #33
 228 000c 00F24981 		bhi	.L60
 229 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 230              	.LVL2:
 231              	.L13:
 232 0014 3301     		.2byte	(.L64-.L13)/2
 233 0016 2200     		.2byte	(.L14-.L13)/2
ARM GAS  /tmp/ccbDzT8J.s 			page 17


 234 0018 4701     		.2byte	(.L60-.L13)/2
 235 001a 2F00     		.2byte	(.L15-.L13)/2
 236 001c 3400     		.2byte	(.L16-.L13)/2
 237 001e 3700     		.2byte	(.L17-.L13)/2
 238 0020 3C00     		.2byte	(.L18-.L13)/2
 239 0022 3F00     		.2byte	(.L19-.L13)/2
 240 0024 4100     		.2byte	(.L20-.L13)/2
 241 0026 4500     		.2byte	(.L21-.L13)/2
 242 0028 4A00     		.2byte	(.L22-.L13)/2
 243 002a E900     		.2byte	(.L23-.L13)/2
 244 002c F200     		.2byte	(.L24-.L13)/2
 245 002e 1801     		.2byte	(.L70-.L13)/2
 246 0030 6900     		.2byte	(.L26-.L13)/2
 247 0032 5300     		.2byte	(.L27-.L13)/2
 248 0034 A200     		.2byte	(.L28-.L13)/2
 249 0036 A700     		.2byte	(.L29-.L13)/2
 250 0038 AA00     		.2byte	(.L30-.L13)/2
 251 003a AF00     		.2byte	(.L31-.L13)/2
 252 003c B700     		.2byte	(.L32-.L13)/2
 253 003e DB00     		.2byte	(.L33-.L13)/2
 254 0040 DF00     		.2byte	(.L34-.L13)/2
 255 0042 E500     		.2byte	(.L35-.L13)/2
 256 0044 0B01     		.2byte	(.L36-.L13)/2
 257 0046 1501     		.2byte	(.L37-.L13)/2
 258 0048 4701     		.2byte	(.L60-.L13)/2
 259 004a 1B01     		.2byte	(.L38-.L13)/2
 260 004c B900     		.2byte	(.L39-.L13)/2
 261 004e C000     		.2byte	(.L40-.L13)/2
 262 0050 CC00     		.2byte	(.L41-.L13)/2
 263 0052 CA00     		.2byte	(.L42-.L13)/2
 264 0054 CE00     		.2byte	(.L43-.L13)/2
 265 0056 3701     		.2byte	(.L44-.L13)/2
 266              	.L14:
 289:assembly_test.c **** 		if (rx_pkts == 0)
 267              		.loc 1 289 0
 268 0058 934B     		ldr	r3, .L82
 269 005a 4188     		ldrh	r1, [r0, #2]
 270              	.LVL3:
 271 005c 1A68     		ldr	r2, [r3]
 272 005e 0A44     		add	r2, r2, r1
 273 0060 1A60     		str	r2, [r3]
 290:assembly_test.c **** 			rx_pkts = 0xFFFFFFFF;
 274              		.loc 1 290 0
 275 0062 1A68     		ldr	r2, [r3]
 276 0064 002A     		cmp	r2, #0
 277 0066 40F00881 		bne	.L64
 291:assembly_test.c **** 		*piLen = 0;
 278              		.loc 1 291 0
 279 006a 4FF0FF32 		mov	r2, #-1
 280 006e 1A60     		str	r2, [r3]
 281 0070 03E1     		b	.L64
 282              	.LVL4:
 283              	.L15:
 296:assembly_test.c **** 		*piLen = 1;
 284              		.loc 1 296 0
 285 0072 8E4B     		ldr	r3, .L82+4
 286 0074 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccbDzT8J.s 			page 18


 287 0076 C3F34003 		ubfx	r3, r3, #1, #1
 288 007a ACE0     		b	.L65
 289              	.L16:
 301:assembly_test.c **** 			USRLED_SET;
 290              		.loc 1 301 0
 291 007c 4288     		ldrh	r2, [r0, #2]
 292 007e 0223     		movs	r3, #2
 293 0080 15E0     		b	.L78
 294              	.L17:
 308:assembly_test.c **** 		*piLen = 1;
 295              		.loc 1 308 0
 296 0082 8A4B     		ldr	r3, .L82+4
 297 0084 1B68     		ldr	r3, [r3]
 298 0086 C3F30013 		ubfx	r3, r3, #4, #1
 299 008a A4E0     		b	.L65
 300              	.L18:
 313:assembly_test.c **** 			RXLED_SET;
 301              		.loc 1 313 0
 302 008c 4288     		ldrh	r2, [r0, #2]
 303 008e 1023     		movs	r3, #16
 304 0090 0DE0     		b	.L78
 305              	.L19:
 320:assembly_test.c **** 		*piLen = 1;
 306              		.loc 1 320 0
 307 0092 864B     		ldr	r3, .L82+4
 308 0094 69E0     		b	.L66
 309              	.L20:
 325:assembly_test.c **** 			TXLED_SET;
 310              		.loc 1 325 0
 311 0096 4288     		ldrh	r2, [r0, #2]
 312 0098 4FF48073 		mov	r3, #256
 313 009c 07E0     		b	.L78
 314              	.L21:
 332:assembly_test.c **** 		*piLen = 1;
 315              		.loc 1 332 0
 316 009e 834B     		ldr	r3, .L82+4
 317 00a0 1B68     		ldr	r3, [r3]
 318 00a2 C3F34023 		ubfx	r3, r3, #9, #1
 319 00a6 96E0     		b	.L65
 320              	.L22:
 337:assembly_test.c **** 			CC1V8_SET;
 321              		.loc 1 337 0
 322 00a8 4288     		ldrh	r2, [r0, #2]
 323 00aa 4FF40073 		mov	r3, #512
 324              	.L78:
 325 00ae 12B9     		cbnz	r2, .L81
 316:assembly_test.c **** 		break;
 326              		.loc 1 316 0
 327 00b0 7F4A     		ldr	r2, .L82+8
 328              	.L68:
 329 00b2 1360     		str	r3, [r2]
 330 00b4 E3E0     		b	.L61
 331              	.L81:
 338:assembly_test.c **** 		else
 332              		.loc 1 338 0
 333 00b6 7F4A     		ldr	r2, .L82+12
 334 00b8 FBE7     		b	.L68
ARM GAS  /tmp/ccbDzT8J.s 			page 19


 335              	.L27:
 344:assembly_test.c **** 		iap_entry(command, result);
 336              		.loc 1 344 0
 337 00ba 0AA8     		add	r0, sp, #40
 338              	.LVL5:
 339 00bc 3623     		movs	r3, #54
 340 00be 40F8283D 		str	r3, [r0, #-40]!
 345:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 341              		.loc 1 345 0
 342 00c2 7D4B     		ldr	r3, .L82+16
 343 00c4 6846     		mov	r0, sp
 344 00c6 1B68     		ldr	r3, [r3]
 345 00c8 05A9     		add	r1, sp, #20
 346              	.LVL6:
 347 00ca 9847     		blx	r3
 348              	.LVL7:
 346:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 349              		.loc 1 346 0
 350 00cc 059B     		ldr	r3, [sp, #20]
 351 00ce 2370     		strb	r3, [r4]
 347:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 352              		.loc 1 347 0
 353 00d0 069B     		ldr	r3, [sp, #24]
 354 00d2 6370     		strb	r3, [r4, #1]
 348:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 355              		.loc 1 348 0
 356 00d4 069B     		ldr	r3, [sp, #24]
 357 00d6 1B0A     		lsrs	r3, r3, #8
 358 00d8 A370     		strb	r3, [r4, #2]
 349:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 359              		.loc 1 349 0
 360 00da BDF81A30 		ldrh	r3, [sp, #26]
 361 00de E370     		strb	r3, [r4, #3]
 350:assembly_test.c **** 		*piLen = 5;
 362              		.loc 1 350 0
 363 00e0 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 364 00e4 6EE0     		b	.L67
 365              	.LVL8:
 366              	.L26:
 359:assembly_test.c **** 		iap_entry(command, result);
 367              		.loc 1 359 0
 368 00e6 0AA8     		add	r0, sp, #40
 369              	.LVL9:
 370 00e8 3A23     		movs	r3, #58
 371 00ea 40F8283D 		str	r3, [r0, #-40]!
 360:assembly_test.c **** 		pbData[0] = result[0] & 0xFF; /* status */
 372              		.loc 1 360 0
 373 00ee 724B     		ldr	r3, .L82+16
 374 00f0 6846     		mov	r0, sp
 375 00f2 1B68     		ldr	r3, [r3]
 376 00f4 05A9     		add	r1, sp, #20
 377              	.LVL10:
 378 00f6 9847     		blx	r3
 379              	.LVL11:
 361:assembly_test.c **** 		pbData[1] = result[1] & 0xFF;
 380              		.loc 1 361 0
 381 00f8 059B     		ldr	r3, [sp, #20]
ARM GAS  /tmp/ccbDzT8J.s 			page 20


 382 00fa 2370     		strb	r3, [r4]
 362:assembly_test.c **** 		pbData[2] = (result[1] >> 8) & 0xFF;
 383              		.loc 1 362 0
 384 00fc 069B     		ldr	r3, [sp, #24]
 385 00fe 6370     		strb	r3, [r4, #1]
 363:assembly_test.c **** 		pbData[3] = (result[1] >> 16) & 0xFF;
 386              		.loc 1 363 0
 387 0100 069B     		ldr	r3, [sp, #24]
 388 0102 1B0A     		lsrs	r3, r3, #8
 389 0104 A370     		strb	r3, [r4, #2]
 364:assembly_test.c **** 		pbData[4] = (result[1] >> 24) & 0xFF;
 390              		.loc 1 364 0
 391 0106 BDF81A30 		ldrh	r3, [sp, #26]
 392 010a E370     		strb	r3, [r4, #3]
 365:assembly_test.c **** 		pbData[5] = result[2] & 0xFF;
 393              		.loc 1 365 0
 394 010c 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 395 0110 2371     		strb	r3, [r4, #4]
 366:assembly_test.c **** 		pbData[6] = (result[2] >> 8) & 0xFF;
 396              		.loc 1 366 0
 397 0112 079B     		ldr	r3, [sp, #28]
 398 0114 6371     		strb	r3, [r4, #5]
 367:assembly_test.c **** 		pbData[7] = (result[2] >> 16) & 0xFF;
 399              		.loc 1 367 0
 400 0116 079B     		ldr	r3, [sp, #28]
 401 0118 1B0A     		lsrs	r3, r3, #8
 402 011a A371     		strb	r3, [r4, #6]
 368:assembly_test.c **** 		pbData[8] = (result[2] >> 24) & 0xFF;
 403              		.loc 1 368 0
 404 011c BDF81E30 		ldrh	r3, [sp, #30]
 405 0120 E371     		strb	r3, [r4, #7]
 369:assembly_test.c **** 		pbData[9] = result[3] & 0xFF;
 406              		.loc 1 369 0
 407 0122 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 408 0126 2372     		strb	r3, [r4, #8]
 370:assembly_test.c **** 		pbData[10] = (result[3] >> 8) & 0xFF;
 409              		.loc 1 370 0
 410 0128 089B     		ldr	r3, [sp, #32]
 411 012a 6372     		strb	r3, [r4, #9]
 371:assembly_test.c **** 		pbData[11] = (result[3] >> 16) & 0xFF;
 412              		.loc 1 371 0
 413 012c 089B     		ldr	r3, [sp, #32]
 414 012e 1B0A     		lsrs	r3, r3, #8
 415 0130 A372     		strb	r3, [r4, #10]
 372:assembly_test.c **** 		pbData[12] = (result[3] >> 24) & 0xFF;
 416              		.loc 1 372 0
 417 0132 BDF82230 		ldrh	r3, [sp, #34]
 418 0136 E372     		strb	r3, [r4, #11]
 373:assembly_test.c **** 		pbData[13] = result[4] & 0xFF;
 419              		.loc 1 373 0
 420 0138 9DF82330 		ldrb	r3, [sp, #35]	@ zero_extendqisi2
 421 013c 2373     		strb	r3, [r4, #12]
 374:assembly_test.c **** 		pbData[14] = (result[4] >> 8) & 0xFF;
 422              		.loc 1 374 0
 423 013e 099B     		ldr	r3, [sp, #36]
 424 0140 6373     		strb	r3, [r4, #13]
 375:assembly_test.c **** 		pbData[15] = (result[4] >> 16) & 0xFF;
ARM GAS  /tmp/ccbDzT8J.s 			page 21


 425              		.loc 1 375 0
 426 0142 099B     		ldr	r3, [sp, #36]
 427 0144 1B0A     		lsrs	r3, r3, #8
 428 0146 A373     		strb	r3, [r4, #14]
 376:assembly_test.c **** 		pbData[16] = (result[4] >> 24) & 0xFF;
 429              		.loc 1 376 0
 430 0148 BDF82630 		ldrh	r3, [sp, #38]
 431 014c E373     		strb	r3, [r4, #15]
 377:assembly_test.c **** 		*piLen = 17;
 432              		.loc 1 377 0
 433 014e 9DF82730 		ldrb	r3, [sp, #39]	@ zero_extendqisi2
 434 0152 2374     		strb	r3, [r4, #16]
 378:assembly_test.c **** 		break;
 435              		.loc 1 378 0
 436 0154 1123     		movs	r3, #17
 437 0156 91E0     		b	.L62
 438              	.LVL12:
 439              	.L28:
 383:assembly_test.c **** 		*piLen = 1;
 440              		.loc 1 383 0
 441 0158 584B     		ldr	r3, .L82+20
 442 015a 1B68     		ldr	r3, [r3]
 443 015c C3F3C013 		ubfx	r3, r3, #7, #1
 444 0160 39E0     		b	.L65
 445              	.L29:
 388:assembly_test.c **** 			PAEN_SET;
 446              		.loc 1 388 0
 447 0162 4288     		ldrh	r2, [r0, #2]
 448 0164 8023     		movs	r3, #128
 449 0166 07E0     		b	.L76
 450              	.L30:
 395:assembly_test.c **** 		*piLen = 1;
 451              		.loc 1 395 0
 452 0168 544B     		ldr	r3, .L82+20
 453              	.L66:
 454 016a 1B68     		ldr	r3, [r3]
 455 016c C3F30023 		ubfx	r3, r3, #8, #1
 456 0170 31E0     		b	.L65
 457              	.L31:
 400:assembly_test.c **** 			HGM_SET;
 458              		.loc 1 400 0
 459 0172 4288     		ldrh	r2, [r0, #2]
 460 0174 4FF48073 		mov	r3, #256
 461              	.L76:
 462 0178 0AB1     		cbz	r2, .L51
 401:assembly_test.c **** 		else
 463              		.loc 1 401 0
 464 017a 514A     		ldr	r2, .L82+24
 465 017c 99E7     		b	.L68
 466              	.L51:
 403:assembly_test.c **** 		break;
 467              		.loc 1 403 0
 468 017e 514A     		ldr	r2, .L82+28
 469 0180 97E7     		b	.L68
 470              	.L32:
 409:assembly_test.c **** 		break;
 471              		.loc 1 409 0
ARM GAS  /tmp/ccbDzT8J.s 			page 22


 472 0182 0322     		movs	r2, #3
 473 0184 22E0     		b	.L69
 474              	.L39:
 413:assembly_test.c **** 		*piLen = 1;
 475              		.loc 1 413 0
 476 0186 0520     		movs	r0, #5
 477              	.LVL13:
 478 0188 FFF7FEFF 		bl	cc2400_get
 479              	.LVL14:
 480 018c 00F00700 		and	r0, r0, #7
 481 0190 2070     		strb	r0, [r4]
 482 0192 21E0     		b	.L63
 483              	.LVL15:
 484              	.L40:
 418:assembly_test.c **** 			cc2400_set(FREND, 8 | pSetup->wValue);
 485              		.loc 1 418 0
 486 0194 4188     		ldrh	r1, [r0, #2]
 487              	.LVL16:
 488 0196 0729     		cmp	r1, #7
 489 0198 00F28380 		bhi	.L60
 419:assembly_test.c **** 		} else {
 490              		.loc 1 419 0
 491 019c 0520     		movs	r0, #5
 492              	.LVL17:
 493 019e 41F00801 		orr	r1, r1, #8
 494 01a2 FFF7FEFF 		bl	cc2400_set
 495              	.LVL18:
 496 01a6 6AE0     		b	.L61
 497              	.LVL19:
 498              	.L42:
 426:assembly_test.c **** 		break;
 499              		.loc 1 426 0
 500 01a8 0522     		movs	r2, #5
 501 01aa 0FE0     		b	.L69
 502              	.L41:
 430:assembly_test.c **** 		break;
 503              		.loc 1 430 0
 504 01ac 0622     		movs	r2, #6
 505 01ae 0DE0     		b	.L69
 506              	.L43:
 435:assembly_test.c **** 		pbData[1] = rr.request_pa;
 507              		.loc 1 435 0
 508 01b0 454B     		ldr	r3, .L82+32
 509 01b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 510 01b4 2270     		strb	r2, [r4]
 436:assembly_test.c **** 		pbData[2] = rr.request_num;
 511              		.loc 1 436 0
 512 01b6 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 513 01b8 6270     		strb	r2, [r4, #1]
 437:assembly_test.c **** 		pbData[3] = rr.reply_pa;
 514              		.loc 1 437 0
 515 01ba 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 516 01bc A270     		strb	r2, [r4, #2]
 438:assembly_test.c **** 		pbData[4] = rr.reply_num;
 517              		.loc 1 438 0
 518 01be DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 519 01c0 E270     		strb	r2, [r4, #3]
ARM GAS  /tmp/ccbDzT8J.s 			page 23


 439:assembly_test.c **** 		*piLen = 5;
 520              		.loc 1 439 0
 521 01c2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 522              	.LVL20:
 523              	.L67:
 524 01c4 2371     		strb	r3, [r4, #4]
 440:assembly_test.c **** 		break;
 525              		.loc 1 440 0
 526 01c6 0523     		movs	r3, #5
 527 01c8 58E0     		b	.L62
 528              	.LVL21:
 529              	.L33:
 444:assembly_test.c **** 		break;
 530              		.loc 1 444 0
 531 01ca 0022     		movs	r2, #0
 532              	.L69:
 533 01cc 364B     		ldr	r3, .L82
 534 01ce 5A60     		str	r2, [r3, #4]
 535 01d0 55E0     		b	.L61
 536              	.L34:
 448:assembly_test.c **** 		*piLen = 1;
 537              		.loc 1 448 0
 538 01d2 354B     		ldr	r3, .L82
 539 01d4 9B68     		ldr	r3, [r3, #8]
 540              	.L65:
 541 01d6 2370     		strb	r3, [r4]
 542              	.LVL22:
 543              	.L63:
 449:assembly_test.c **** 		break;
 544              		.loc 1 449 0
 545 01d8 0120     		movs	r0, #1
 546 01da 2860     		str	r0, [r5]
 450:assembly_test.c **** 
 547              		.loc 1 450 0
 548 01dc 62E0     		b	.L11
 549              	.LVL23:
 550              	.L35:
 453:assembly_test.c **** 		break;
 551              		.loc 1 453 0
 552 01de 4288     		ldrh	r2, [r0, #2]
 553 01e0 314B     		ldr	r3, .L82
 554 01e2 9A60     		str	r2, [r3, #8]
 555 01e4 4BE0     		b	.L61
 556              	.L23:
 457:assembly_test.c **** 		pbData[1] = (channel >> 8) & 0xFF;
 557              		.loc 1 457 0
 558 01e6 394B     		ldr	r3, .L82+36
 559 01e8 1A88     		ldrh	r2, [r3]
 560 01ea 2270     		strb	r2, [r4]
 458:assembly_test.c **** 		*piLen = 2;
 561              		.loc 1 458 0
 562 01ec 1B88     		ldrh	r3, [r3]
 563 01ee C3F30723 		ubfx	r3, r3, #8, #8
 564 01f2 6370     		strb	r3, [r4, #1]
 459:assembly_test.c **** 		break;
 565              		.loc 1 459 0
 566 01f4 0223     		movs	r3, #2
ARM GAS  /tmp/ccbDzT8J.s 			page 24


 567 01f6 41E0     		b	.L62
 568              	.L24:
 463:assembly_test.c **** 		channel = MAX(channel, MIN_FREQ);
 569              		.loc 1 463 0
 570 01f8 344B     		ldr	r3, .L82+36
 571 01fa 4288     		ldrh	r2, [r0, #2]
 572 01fc 1A80     		strh	r2, [r3]	@ movhi
 464:assembly_test.c **** 		channel = MIN(channel, MAX_FREQ);
 573              		.loc 1 464 0
 574 01fe 1988     		ldrh	r1, [r3]
 575              	.LVL24:
 576 0200 40F6DC02 		movw	r2, #2268
 577 0204 89B2     		uxth	r1, r1
 578 0206 9142     		cmp	r1, r2
 579 0208 84BF     		itt	hi
 580 020a 1A88     		ldrhhi	r2, [r3]
 581 020c 92B2     		uxthhi	r2, r2
 582 020e 1A80     		strh	r2, [r3]	@ movhi
 465:assembly_test.c **** 		break;
 583              		.loc 1 465 0
 584 0210 1988     		ldrh	r1, [r3]
 585 0212 40F6E922 		movw	r2, #2793
 586 0216 89B2     		uxth	r1, r1
 587 0218 9142     		cmp	r1, r2
 588 021a 97BF     		itett	ls
 589 021c 2B4A     		ldrls	r2, .L82+36
 590 021e 40F6EA22 		movwhi	r2, #2794
 591 0222 1288     		ldrhls	r2, [r2]
 592 0224 92B2     		uxthls	r2, r2
 593 0226 1A80     		strh	r2, [r3]	@ movhi
 594 0228 29E0     		b	.L61
 595              	.LVL25:
 596              	.L36:
 469:assembly_test.c **** 		iap_entry(command, result);
 597              		.loc 1 469 0
 598 022a 0AA8     		add	r0, sp, #40
 599              	.LVL26:
 600 022c 3923     		movs	r3, #57
 601 022e 40F8283D 		str	r3, [r0, #-40]!
 470:assembly_test.c **** 		*piLen = 0; /* should never return */
 602              		.loc 1 470 0
 603 0232 214B     		ldr	r3, .L82+16
 604 0234 6846     		mov	r0, sp
 605 0236 05A9     		add	r1, sp, #20
 606              	.LVL27:
 607 0238 1B68     		ldr	r3, [r3]
 608 023a 9847     		blx	r3
 609              	.LVL28:
 610 023c 1DE0     		b	.L64
 611              	.LVL29:
 612              	.L37:
 475:assembly_test.c **** 		reset();
 613              		.loc 1 475 0
 614 023e 244A     		ldr	r2, .L82+40
 615 0240 244B     		ldr	r3, .L82+44
 616 0242 1A60     		str	r2, [r3]
 617              	.L70:
ARM GAS  /tmp/ccbDzT8J.s 			page 25


 476:assembly_test.c **** 		break;
 618              		.loc 1 476 0
 619 0244 FFF7FEFF 		bl	reset
 620              	.LVL30:
 621 0248 19E0     		b	.L61
 622              	.LVL31:
 623              	.L38:
 480:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 624              		.loc 1 480 0
 625 024a 4288     		ldrh	r2, [r0, #2]
 626 024c 6FF40064 		mvn	r4, #2048
 627              	.LVL32:
 628 0250 1319     		adds	r3, r2, r4
 629 0252 40F2FF31 		movw	r1, #1023
 630              	.LVL33:
 631 0256 9BB2     		uxth	r3, r3
 632 0258 8B42     		cmp	r3, r1
 633 025a 22D8     		bhi	.L60
 481:assembly_test.c **** 				pSetup->wIndex < pSetup->wValue)
 634              		.loc 1 481 0 discriminator 1
 635 025c 8388     		ldrh	r3, [r0, #4]
 480:assembly_test.c **** 				pSetup->wIndex < 2049 || pSetup->wIndex > 3072 ||
 636              		.loc 1 480 0 discriminator 1
 637 025e 6FF40060 		mvn	r0, #2048
 638              	.LVL34:
 639 0262 1818     		adds	r0, r3, r0
 640 0264 80B2     		uxth	r0, r0
 641 0266 8842     		cmp	r0, r1
 642 0268 1BD8     		bhi	.L60
 481:assembly_test.c **** 				pSetup->wIndex < pSetup->wValue)
 643              		.loc 1 481 0 discriminator 1
 644 026a 9342     		cmp	r3, r2
 645 026c 19D3     		bcc	.L60
 484:assembly_test.c **** 		high_freq = pSetup->wIndex;
 646              		.loc 1 484 0
 647 026e 1749     		ldr	r1, .L82+36
 648 0270 4A80     		strh	r2, [r1, #2]	@ movhi
 485:assembly_test.c **** 		requested_mode = MODE_SPECAN;
 649              		.loc 1 485 0
 650 0272 8B80     		strh	r3, [r1, #4]	@ movhi
 486:assembly_test.c **** 		*piLen = 0;
 651              		.loc 1 486 0
 652 0274 0C4B     		ldr	r3, .L82
 653 0276 0422     		movs	r2, #4
 654 0278 5A60     		str	r2, [r3, #4]
 655              	.LVL35:
 656              	.L64:
 487:assembly_test.c **** 		break;
 657              		.loc 1 487 0
 658 027a 0023     		movs	r3, #0
 659              	.L62:
 660 027c 2B60     		str	r3, [r5]
 661              	.L61:
 505:assembly_test.c **** }
 662              		.loc 1 505 0
 663 027e 0120     		movs	r0, #1
 488:assembly_test.c **** 
ARM GAS  /tmp/ccbDzT8J.s 			page 26


 664              		.loc 1 488 0
 665 0280 10E0     		b	.L11
 666              	.LVL36:
 667              	.L44:
 491:assembly_test.c **** 		pbData[1] = 0x00;
 668              		.loc 1 491 0
 669 0282 0023     		movs	r3, #0
 670 0284 2370     		strb	r3, [r4]
 492:assembly_test.c **** 
 671              		.loc 1 492 0
 672 0286 6370     		strb	r3, [r4, #1]
 494:assembly_test.c **** 		pbData[2] = length;
 673              		.loc 1 494 0
 674 0288 1348     		ldr	r0, .L82+48
 675              	.LVL37:
 676 028a FFF7FEFF 		bl	strlen
 677              	.LVL38:
 497:assembly_test.c **** 
 678              		.loc 1 497 0
 679 028e C6B2     		uxtb	r6, r0
 494:assembly_test.c **** 		pbData[2] = length;
 680              		.loc 1 494 0
 681 0290 A070     		strb	r0, [r4, #2]
 497:assembly_test.c **** 
 682              		.loc 1 497 0
 683 0292 3246     		mov	r2, r6
 684 0294 E01C     		adds	r0, r4, #3
 685              	.LVL39:
 686 0296 1049     		ldr	r1, .L82+48
 499:assembly_test.c **** 		break;
 687              		.loc 1 499 0
 688 0298 0336     		adds	r6, r6, #3
 497:assembly_test.c **** 
 689              		.loc 1 497 0
 690 029a FFF7FEFF 		bl	memcpy
 691              	.LVL40:
 499:assembly_test.c **** 		break;
 692              		.loc 1 499 0
 693 029e 2E60     		str	r6, [r5]
 694 02a0 EDE7     		b	.L61
 695              	.LVL41:
 696              	.L60:
 421:assembly_test.c **** 		}
 697              		.loc 1 421 0
 698 02a2 0020     		movs	r0, #0
 699              	.LVL42:
 700              	.L11:
 506:assembly_test.c **** 
 701              		.loc 1 506 0
 702 02a4 0AB0     		add	sp, sp, #40
 703              		@ sp needed
 704 02a6 70BD     		pop	{r4, r5, r6, pc}
 705              	.LVL43:
 706              	.L83:
 707              		.align	2
 708              	.L82:
 709 02a8 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccbDzT8J.s 			page 27


 710 02ac 34C00920 		.word	537509940
 711 02b0 3CC00920 		.word	537509948
 712 02b4 38C00920 		.word	537509944
 713 02b8 00000000 		.word	iap_entry
 714 02bc 54C00920 		.word	537509972
 715 02c0 58C00920 		.word	537509976
 716 02c4 5CC00920 		.word	537509980
 717 02c8 00000000 		.word	rr
 718 02cc 00000000 		.word	.LANCHOR1
 719 02d0 21BB0543 		.word	1124449057
 720 02d4 00000000 		.word	bootloader_ctrl
 721 02d8 00000000 		.word	.LC1
 722              		.cfi_endproc
 723              	.LFE5:
 725              		.section	.text.queue_init,"ax",%progbits
 726              		.align	1
 727              		.global	queue_init
 728              		.thumb
 729              		.thumb_func
 731              	queue_init:
 732              	.LFB0:
 132:assembly_test.c **** 	head = 0;
 733              		.loc 1 132 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 133:assembly_test.c **** 	tail = 0;
 738              		.loc 1 133 0
 739 0000 024B     		ldr	r3, .L85
 740 0002 0022     		movs	r2, #0
 741 0004 DA60     		str	r2, [r3, #12]
 134:assembly_test.c **** }
 742              		.loc 1 134 0
 743 0006 1A61     		str	r2, [r3, #16]
 744 0008 7047     		bx	lr
 745              	.L86:
 746 000a 00BF     		.align	2
 747              	.L85:
 748 000c 00000000 		.word	.LANCHOR0
 749              		.cfi_endproc
 750              	.LFE0:
 752              		.section	.text.enqueue,"ax",%progbits
 753              		.align	1
 754              		.global	enqueue
 755              		.thumb
 756              		.thumb_func
 758              	enqueue:
 759              	.LFB1:
 138:assembly_test.c **** 	int i;
 760              		.loc 1 138 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              	.LVL44:
 765 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 766              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccbDzT8J.s 			page 28


 767              		.cfi_offset 4, -20
 768              		.cfi_offset 5, -16
 769              		.cfi_offset 6, -12
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 140:assembly_test.c **** 	u8 t = tail & 0x7F;
 772              		.loc 1 140 0
 773 0002 154A     		ldr	r2, .L93
 774 0004 D168     		ldr	r1, [r2, #12]
 775              	.LVL45:
 141:assembly_test.c **** 	u8 n = (t + 1) & 0x7F;
 776              		.loc 1 141 0
 777 0006 1469     		ldr	r4, [r2, #16]
 145:assembly_test.c **** 		return 0;
 778              		.loc 1 145 0
 779 0008 01F07F01 		and	r1, r1, #127
 780              	.LVL46:
 141:assembly_test.c **** 	u8 n = (t + 1) & 0x7F;
 781              		.loc 1 141 0
 782 000c 04F07F04 		and	r4, r4, #127
 783              	.LVL47:
 142:assembly_test.c **** 
 784              		.loc 1 142 0
 785 0010 631C     		adds	r3, r4, #1
 145:assembly_test.c **** 		return 0;
 786              		.loc 1 145 0
 787 0012 03F07F03 		and	r3, r3, #127
 788 0016 9942     		cmp	r1, r3
 789 0018 1CD0     		beq	.L91
 148:assembly_test.c **** 	fifo[t].clk100ns = CLK100NS;
 790              		.loc 1 148 0
 791 001a 104B     		ldr	r3, .L93+4
 792 001c 104D     		ldr	r5, .L93+8
 793 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 794 0020 A401     		lsls	r4, r4, #6
 795              	.LVL48:
 796 0022 2919     		adds	r1, r5, r4
 797 0024 CB70     		strb	r3, [r1, #3]
 149:assembly_test.c **** 
 798              		.loc 1 149 0
 799 0026 0F4B     		ldr	r3, .L93+12
 151:assembly_test.c **** 	for (i = 0; i < DMA_SIZE; i++)
 800              		.loc 1 151 0
 801 0028 0226     		movs	r6, #2
 149:assembly_test.c **** 
 802              		.loc 1 149 0
 803 002a 1B68     		ldr	r3, [r3]
 804 002c 4B60     		str	r3, [r1, #4]
 151:assembly_test.c **** 	for (i = 0; i < DMA_SIZE; i++)
 805              		.loc 1 151 0
 806 002e 0E4B     		ldr	r3, .L93+16
 807 0030 1E60     		str	r6, [r3]
 808              	.LVL49:
 152:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 809              		.loc 1 152 0
 810 0032 0023     		movs	r3, #0
 811              	.LVL50:
ARM GAS  /tmp/ccbDzT8J.s 			page 29


 812              	.L90:
 153:assembly_test.c **** 	fifo[t].status = status;
 813              		.loc 1 153 0 discriminator 2
 814 0034 C75C     		ldrb	r7, [r0, r3]	@ zero_extendqisi2
 815 0036 CE18     		adds	r6, r1, r3
 152:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 816              		.loc 1 152 0 discriminator 2
 817 0038 0133     		adds	r3, r3, #1
 818              	.LVL51:
 819 003a 322B     		cmp	r3, #50
 153:assembly_test.c **** 	fifo[t].status = status;
 820              		.loc 1 153 0 discriminator 2
 821 003c B773     		strb	r7, [r6, #14]
 152:assembly_test.c **** 		fifo[t].data[i] = buf[i];
 822              		.loc 1 152 0 discriminator 2
 823 003e F9D1     		bne	.L90
 154:assembly_test.c **** 	status = 0;
 824              		.loc 1 154 0
 825 0040 137D     		ldrb	r3, [r2, #20]	@ zero_extendqisi2
 826              	.LVL52:
 827 0042 2C44     		add	r4, r4, r5
 828 0044 6370     		strb	r3, [r4, #1]
 155:assembly_test.c **** 	++tail;
 829              		.loc 1 155 0
 830 0046 0023     		movs	r3, #0
 831 0048 1375     		strb	r3, [r2, #20]
 156:assembly_test.c **** 
 832              		.loc 1 156 0
 833 004a 1369     		ldr	r3, [r2, #16]
 158:assembly_test.c **** }
 834              		.loc 1 158 0
 835 004c 0120     		movs	r0, #1
 836              	.LVL53:
 156:assembly_test.c **** 
 837              		.loc 1 156 0
 838 004e 0133     		adds	r3, r3, #1
 839 0050 1361     		str	r3, [r2, #16]
 158:assembly_test.c **** }
 840              		.loc 1 158 0
 841 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 842              	.LVL54:
 843              	.L91:
 146:assembly_test.c **** 
 844              		.loc 1 146 0
 845 0054 0020     		movs	r0, #0
 846              	.LVL55:
 159:assembly_test.c **** 
 847              		.loc 1 159 0
 848 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 849              	.LVL56:
 850              	.L94:
 851              		.align	2
 852              	.L93:
 853 0058 00000000 		.word	.LANCHOR0
 854 005c 00000000 		.word	clkn_high
 855 0060 00000000 		.word	fifo
 856 0064 08400040 		.word	1073758216
ARM GAS  /tmp/ccbDzT8J.s 			page 30


 857 0068 38C00920 		.word	537509944
 858              		.cfi_endproc
 859              	.LFE1:
 861              		.section	.text.dequeue,"ax",%progbits
 862              		.align	1
 863              		.global	dequeue
 864              		.thumb
 865              		.thumb_func
 867              	dequeue:
 868              	.LFB2:
 162:assembly_test.c **** 	u8 h = head & 0x7F;
 869              		.loc 1 162 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873 0000 10B5     		push	{r4, lr}
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 4, -8
 876              		.cfi_offset 14, -4
 163:assembly_test.c **** 	u8 t = tail & 0x7F;
 877              		.loc 1 163 0
 878 0002 0D4C     		ldr	r4, .L98
 879 0004 E368     		ldr	r3, [r4, #12]
 164:assembly_test.c **** 
 880              		.loc 1 164 0
 881 0006 2269     		ldr	r2, [r4, #16]
 163:assembly_test.c **** 	u8 t = tail & 0x7F;
 882              		.loc 1 163 0
 883 0008 03F07F03 		and	r3, r3, #127
 884              	.LVL57:
 167:assembly_test.c **** 		USRLED_CLR;
 885              		.loc 1 167 0
 886 000c 02F07F02 		and	r2, r2, #127
 887              	.LVL58:
 888 0010 9342     		cmp	r3, r2
 889 0012 04D1     		bne	.L96
 168:assembly_test.c **** 		return 0;
 890              		.loc 1 168 0
 891 0014 094B     		ldr	r3, .L98+4
 892              	.LVL59:
 893 0016 0222     		movs	r2, #2
 894 0018 1A60     		str	r2, [r3]
 169:assembly_test.c **** 	}
 895              		.loc 1 169 0
 896 001a 0020     		movs	r0, #0
 897 001c 10BD     		pop	{r4, pc}
 898              	.LVL60:
 899              	.L96:
 172:assembly_test.c **** 	++head;
 900              		.loc 1 172 0
 901 001e 0849     		ldr	r1, .L98+8
 902 0020 4022     		movs	r2, #64
 903 0022 01EB8311 		add	r1, r1, r3, lsl #6
 904 0026 8220     		movs	r0, #130
 905 0028 FFF7FEFF 		bl	USBHwEPWrite
 906              	.LVL61:
 173:assembly_test.c **** 
ARM GAS  /tmp/ccbDzT8J.s 			page 31


 907              		.loc 1 173 0
 908 002c E368     		ldr	r3, [r4, #12]
 175:assembly_test.c **** }
 909              		.loc 1 175 0
 910 002e 0120     		movs	r0, #1
 173:assembly_test.c **** 
 911              		.loc 1 173 0
 912 0030 0133     		adds	r3, r3, #1
 913 0032 E360     		str	r3, [r4, #12]
 176:assembly_test.c **** 
 914              		.loc 1 176 0
 915 0034 10BD     		pop	{r4, pc}
 916              	.L99:
 917 0036 00BF     		.align	2
 918              	.L98:
 919 0038 00000000 		.word	.LANCHOR0
 920 003c 3CC00920 		.word	537509948
 921 0040 00000000 		.word	fifo
 922              		.cfi_endproc
 923              	.LFE2:
 925              		.section	.text.ubertooth_usb_init,"ax",%progbits
 926              		.align	1
 927              		.global	ubertooth_usb_init
 928              		.thumb
 929              		.thumb_func
 931              	ubertooth_usb_init:
 932              	.LFB6:
 509:assembly_test.c **** 	// initialise stack
 933              		.loc 1 509 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937 0000 08B5     		push	{r3, lr}
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 3, -8
 940              		.cfi_offset 14, -4
 511:assembly_test.c **** 	
 941              		.loc 1 511 0
 942 0002 FFF7FEFF 		bl	USBInit
 943              	.LVL62:
 514:assembly_test.c **** 
 944              		.loc 1 514 0
 945 0006 0648     		ldr	r0, .L101
 946 0008 FFF7FEFF 		bl	USBRegisterDescriptors
 947              	.LVL63:
 517:assembly_test.c **** 
 948              		.loc 1 517 0
 949 000c 0549     		ldr	r1, .L101+4
 950 000e 064A     		ldr	r2, .L101+8
 951 0010 0220     		movs	r0, #2
 952 0012 FFF7FEFF 		bl	USBRegisterRequestHandler
 953              	.LVL64:
 527:assembly_test.c **** 
 954              		.loc 1 527 0
 955 0016 0120     		movs	r0, #1
 956 0018 FFF7FEFF 		bl	USBHwConnect
 957              	.LVL65:
ARM GAS  /tmp/ccbDzT8J.s 			page 32


 530:assembly_test.c **** 
 958              		.loc 1 530 0
 959 001c 0020     		movs	r0, #0
 960 001e 08BD     		pop	{r3, pc}
 961              	.L102:
 962              		.align	2
 963              	.L101:
 964 0020 00000000 		.word	.LANCHOR2
 965 0024 00000000 		.word	usb_vendor_request_handler
 966 0028 15000000 		.word	.LANCHOR0+21
 967              		.cfi_endproc
 968              	.LFE6:
 970              		.section	.text.TIMER0_IRQHandler,"ax",%progbits
 971              		.align	1
 972              		.global	TIMER0_IRQHandler
 973              		.thumb
 974              		.thumb_func
 976              	TIMER0_IRQHandler:
 977              	.LFB8:
 560:assembly_test.c **** 	if (T0IR & TIR_MR0_Interrupt) {
 978              		.loc 1 560 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 561:assembly_test.c **** 		++clkn_high;
 983              		.loc 1 561 0
 984 0000 4FF04023 		mov	r3, #1073758208
 985 0004 1A68     		ldr	r2, [r3]
 986 0006 D207     		lsls	r2, r2, #31
 987 0008 08D5     		bpl	.L103
 562:assembly_test.c **** 		T0IR |= TIR_MR0_Interrupt;
 988              		.loc 1 562 0
 989 000a 054A     		ldr	r2, .L108
 990 000c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 991 000e 0131     		adds	r1, r1, #1
 992 0010 C9B2     		uxtb	r1, r1
 993 0012 1170     		strb	r1, [r2]
 563:assembly_test.c **** 	}
 994              		.loc 1 563 0
 995 0014 1A68     		ldr	r2, [r3]
 996 0016 42F00102 		orr	r2, r2, #1
 997 001a 1A60     		str	r2, [r3]
 998              	.L103:
 999 001c 7047     		bx	lr
 1000              	.L109:
 1001 001e 00BF     		.align	2
 1002              	.L108:
 1003 0020 00000000 		.word	clkn_high
 1004              		.cfi_endproc
 1005              	.LFE8:
 1007              		.section	.text.DMA_IRQHandler,"ax",%progbits
 1008              		.align	1
 1009              		.global	DMA_IRQHandler
 1010              		.thumb
 1011              		.thumb_func
 1013              	DMA_IRQHandler:
ARM GAS  /tmp/ccbDzT8J.s 			page 33


 1014              	.LFB10:
 631:assembly_test.c **** 	/* interrupt on channel 0 */
 1015              		.loc 1 631 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		@ link register save eliminated.
 633:assembly_test.c **** 		if (DMACIntTCStat & (1 << 0)) {
 1020              		.loc 1 633 0
 1021 0000 0F4B     		ldr	r3, .L121
 1022 0002 1B68     		ldr	r3, [r3]
 1023 0004 DB07     		lsls	r3, r3, #31
 1024 0006 19D5     		bpl	.L110
 634:assembly_test.c **** 			DMACIntTCClear |= (1 << 0);
 1025              		.loc 1 634 0
 1026 0008 0E4B     		ldr	r3, .L121+4
 1027 000a 1B68     		ldr	r3, [r3]
 1028 000c D807     		lsls	r0, r3, #31
 1029 000e 08D5     		bpl	.L113
 635:assembly_test.c **** 			++rx_tc;
 1030              		.loc 1 635 0
 1031 0010 0D4B     		ldr	r3, .L121+8
 1032 0012 1A68     		ldr	r2, [r3]
 1033 0014 42F00102 		orr	r2, r2, #1
 1034 0018 1A60     		str	r2, [r3]
 636:assembly_test.c **** 		}
 1035              		.loc 1 636 0
 1036 001a 0C4B     		ldr	r3, .L121+12
 1037 001c 1A68     		ldr	r2, [r3]
 1038 001e 0132     		adds	r2, r2, #1
 1039 0020 1A60     		str	r2, [r3]
 1040              	.L113:
 638:assembly_test.c **** 			DMACIntErrClr |= (1 << 0);
 1041              		.loc 1 638 0
 1042 0022 0B4B     		ldr	r3, .L121+16
 1043 0024 1B68     		ldr	r3, [r3]
 1044 0026 D907     		lsls	r1, r3, #31
 1045 0028 08D5     		bpl	.L110
 639:assembly_test.c **** 			++rx_err;
 1046              		.loc 1 639 0
 1047 002a 0A4B     		ldr	r3, .L121+20
 1048 002c 1A68     		ldr	r2, [r3]
 1049 002e 42F00102 		orr	r2, r2, #1
 1050 0032 1A60     		str	r2, [r3]
 640:assembly_test.c **** 		}
 1051              		.loc 1 640 0
 1052 0034 084B     		ldr	r3, .L121+24
 1053 0036 1A68     		ldr	r2, [r3]
 1054 0038 0132     		adds	r2, r2, #1
 1055 003a 1A60     		str	r2, [r3]
 1056              	.L110:
 1057 003c 7047     		bx	lr
 1058              	.L122:
 1059 003e 00BF     		.align	2
 1060              	.L121:
 1061 0040 00400050 		.word	1342193664
 1062 0044 04400050 		.word	1342193668
ARM GAS  /tmp/ccbDzT8J.s 			page 34


 1063 0048 08400050 		.word	1342193672
 1064 004c 00000000 		.word	rx_tc
 1065 0050 0C400050 		.word	1342193676
 1066 0054 10400050 		.word	1342193680
 1067 0058 00000000 		.word	rx_err
 1068              		.cfi_endproc
 1069              	.LFE10:
 1071              		.section	.text.cc2400_rx,"ax",%progbits
 1072              		.align	1
 1073              		.global	cc2400_rx
 1074              		.thumb
 1075              		.thumb_func
 1077              	cc2400_rx:
 1078              	.LFB12:
 660:assembly_test.c **** }
 661:assembly_test.c **** 
 662:assembly_test.c **** /* start un-buffered rx */
 663:assembly_test.c **** void cc2400_rx()
 664:assembly_test.c **** {
 1079              		.loc 1 664 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083 0000 08B5     		push	{r3, lr}
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 3, -8
 1086              		.cfi_offset 14, -4
 665:assembly_test.c **** 	if (modulation == MOD_BT_BASIC_RATE) {
 1087              		.loc 1 665 0
 1088 0002 2D4B     		ldr	r3, .L132
 1089 0004 9A68     		ldr	r2, [r3, #8]
 1090 0006 F2B9     		cbnz	r2, .L124
 666:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1091              		.loc 1 666 0
 1092 0008 0D20     		movs	r0, #13
 1093 000a 47F6FF71 		movw	r1, #32767
 1094 000e FFF7FEFF 		bl	cc2400_set
 1095              	.LVL66:
 667:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1096              		.loc 1 667 0
 1097 0012 1220     		movs	r0, #18
 1098 0014 42F62231 		movw	r1, #11042
 1099 0018 FFF7FEFF 		bl	cc2400_set
 1100              	.LVL67:
 668:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b); // without PRNG
 1101              		.loc 1 668 0
 1102 001c 1420     		movs	r0, #20
 1103 001e 41F24B31 		movw	r1, #4939
 1104 0022 FFF7FEFF 		bl	cc2400_set
 1105              	.LVL68:
 669:assembly_test.c **** 		cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 1106              		.loc 1 669 0
 1107 0026 2020     		movs	r0, #32
 1108 0028 40F20111 		movw	r1, #257
 1109 002c FFF7FEFF 		bl	cc2400_set
 1110              	.LVL69:
 670:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1); // 1 MHz IF
ARM GAS  /tmp/ccbDzT8J.s 			page 35


 1111              		.loc 1 670 0
 1112 0030 224B     		ldr	r3, .L132+4
 1113 0032 0220     		movs	r0, #2
 1114 0034 1988     		ldrh	r1, [r3]
 1115 0036 89B2     		uxth	r1, r1
 1116 0038 0139     		subs	r1, r1, #1
 1117 003a 89B2     		uxth	r1, r1
 1118 003c FFF7FEFF 		bl	cc2400_set
 1119              	.LVL70:
 671:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 1120              		.loc 1 671 0
 1121 0040 0320     		movs	r0, #3
 1122 0042 2921     		movs	r1, #41
 1123 0044 20E0     		b	.L131
 1124              	.L124:
 672:assembly_test.c **** 	} else if (modulation == MOD_BT_LOW_ENERGY) {
 1125              		.loc 1 672 0
 1126 0046 9B68     		ldr	r3, [r3, #8]
 1127 0048 012B     		cmp	r3, #1
 1128 004a 33D1     		bne	.L123
 673:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1129              		.loc 1 673 0
 1130 004c 0D20     		movs	r0, #13
 1131 004e 47F6FF71 		movw	r1, #32767
 1132 0052 FFF7FEFF 		bl	cc2400_set
 1133              	.LVL71:
 674:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1134              		.loc 1 674 0
 1135 0056 1220     		movs	r0, #18
 1136 0058 42F62231 		movw	r1, #11042
 1137 005c FFF7FEFF 		bl	cc2400_set
 1138              	.LVL72:
 675:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b); // without PRNG
 1139              		.loc 1 675 0
 1140 0060 1420     		movs	r0, #20
 1141 0062 41F24B31 		movw	r1, #4939
 1142 0066 FFF7FEFF 		bl	cc2400_set
 1143              	.LVL73:
 676:assembly_test.c **** 		cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 1144              		.loc 1 676 0
 1145 006a 2020     		movs	r0, #32
 1146 006c 40F20111 		movw	r1, #257
 1147 0070 FFF7FEFF 		bl	cc2400_set
 1148              	.LVL74:
 677:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1); // 1 MHz IF
 1149              		.loc 1 677 0
 1150 0074 114B     		ldr	r3, .L132+4
 1151 0076 0220     		movs	r0, #2
 1152 0078 1988     		ldrh	r1, [r3]
 1153 007a 89B2     		uxth	r1, r1
 1154 007c 0139     		subs	r1, r1, #1
 1155 007e 89B2     		uxth	r1, r1
 1156 0080 FFF7FEFF 		bl	cc2400_set
 1157              	.LVL75:
 678:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0040); // 250 kHz frequency deviation
 1158              		.loc 1 678 0
 1159 0084 0320     		movs	r0, #3
ARM GAS  /tmp/ccbDzT8J.s 			page 36


 1160 0086 4021     		movs	r1, #64
 1161              	.L131:
 1162 0088 FFF7FEFF 		bl	cc2400_set
 1163              	.LVL76:
 1164              	.L128:
 679:assembly_test.c **** 	} else {
 680:assembly_test.c **** 		/* oops */
 681:assembly_test.c **** 		return;
 682:assembly_test.c **** 	}
 683:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 1165              		.loc 1 683 0 discriminator 1
 1166 008c FFF7FEFF 		bl	cc2400_status
 1167              	.LVL77:
 1168 0090 4106     		lsls	r1, r0, #25
 1169 0092 FBD5     		bpl	.L128
 684:assembly_test.c **** 	cc2400_strobe(SFSON);
 1170              		.loc 1 684 0
 1171 0094 6120     		movs	r0, #97
 1172 0096 FFF7FEFF 		bl	cc2400_strobe
 1173              	.LVL78:
 1174              	.L130:
 685:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 1175              		.loc 1 685 0 discriminator 1
 1176 009a FFF7FEFF 		bl	cc2400_status
 1177              	.LVL79:
 1178 009e 4207     		lsls	r2, r0, #29
 1179 00a0 FBD5     		bpl	.L130
 686:assembly_test.c **** 	cc2400_strobe(SRX);
 1180              		.loc 1 686 0
 1181 00a2 6220     		movs	r0, #98
 1182 00a4 FFF7FEFF 		bl	cc2400_strobe
 1183              	.LVL80:
 687:assembly_test.c **** #ifdef UBERTOOTH_ONE
 688:assembly_test.c **** 	PAEN_SET;
 1184              		.loc 1 688 0
 1185 00a8 054B     		ldr	r3, .L132+8
 1186 00aa 8022     		movs	r2, #128
 1187 00ac 1A60     		str	r2, [r3]
 689:assembly_test.c **** 	HGM_SET;
 1188              		.loc 1 689 0
 1189 00ae 4FF48072 		mov	r2, #256
 1190 00b2 1A60     		str	r2, [r3]
 1191              	.L123:
 1192 00b4 08BD     		pop	{r3, pc}
 1193              	.L133:
 1194 00b6 00BF     		.align	2
 1195              	.L132:
 1196 00b8 00000000 		.word	.LANCHOR0
 1197 00bc 00000000 		.word	.LANCHOR1
 1198 00c0 58C00920 		.word	537509976
 1199              		.cfi_endproc
 1200              	.LFE12:
 1202              		.section	.text.cc2400_txtest,"ax",%progbits
 1203              		.align	1
 1204              		.global	cc2400_txtest
 1205              		.thumb
 1206              		.thumb_func
ARM GAS  /tmp/ccbDzT8J.s 			page 37


 1208              	cc2400_txtest:
 1209              	.LFB13:
 690:assembly_test.c **** #endif
 691:assembly_test.c **** }
 692:assembly_test.c **** 
 693:assembly_test.c **** void cc2400_txtest()
 694:assembly_test.c **** {
 1210              		.loc 1 694 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214 0000 10B5     		push	{r4, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 4, -8
 1217              		.cfi_offset 14, -4
 695:assembly_test.c **** #ifdef TX_ENABLE
 696:assembly_test.c **** 	if (modulation == MOD_BT_BASIC_RATE) {
 1218              		.loc 1 696 0
 1219 0002 274C     		ldr	r4, .L143
 1220 0004 A368     		ldr	r3, [r4, #8]
 1221 0006 BBB9     		cbnz	r3, .L135
 697:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1222              		.loc 1 697 0
 1223 0008 0D20     		movs	r0, #13
 1224 000a 47F6FF71 		movw	r1, #32767
 1225 000e FFF7FEFF 		bl	cc2400_set
 1226              	.LVL81:
 698:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1227              		.loc 1 698 0
 1228 0012 1220     		movs	r0, #18
 1229 0014 42F62231 		movw	r1, #11042
 1230 0018 FFF7FEFF 		bl	cc2400_set
 1231              	.LVL82:
 699:assembly_test.c **** 		cc2400_set(MDMTST0, 0x334b); // with PRNG
 1232              		.loc 1 699 0
 1233 001c 1420     		movs	r0, #20
 1234 001e 43F24B31 		movw	r1, #13131
 1235 0022 FFF7FEFF 		bl	cc2400_set
 1236              	.LVL83:
 700:assembly_test.c **** 		cc2400_set(FSDIV,   channel);
 1237              		.loc 1 700 0
 1238 0026 1F4B     		ldr	r3, .L143+4
 1239 0028 0220     		movs	r0, #2
 1240 002a 1988     		ldrh	r1, [r3]
 1241 002c 89B2     		uxth	r1, r1
 1242 002e FFF7FEFF 		bl	cc2400_set
 1243              	.LVL84:
 701:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 1244              		.loc 1 701 0
 1245 0032 0320     		movs	r0, #3
 1246 0034 2921     		movs	r1, #41
 1247 0036 19E0     		b	.L142
 1248              	.L135:
 702:assembly_test.c **** 	} else if (modulation == MOD_BT_LOW_ENERGY) {
 1249              		.loc 1 702 0
 1250 0038 A368     		ldr	r3, [r4, #8]
 1251 003a 012B     		cmp	r3, #1
ARM GAS  /tmp/ccbDzT8J.s 			page 38


 1252 003c 2FD1     		bne	.L134
 703:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1253              		.loc 1 703 0
 1254 003e 0D20     		movs	r0, #13
 1255 0040 47F6FF71 		movw	r1, #32767
 1256 0044 FFF7FEFF 		bl	cc2400_set
 1257              	.LVL85:
 704:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1258              		.loc 1 704 0
 1259 0048 1220     		movs	r0, #18
 1260 004a 42F62231 		movw	r1, #11042
 1261 004e FFF7FEFF 		bl	cc2400_set
 1262              	.LVL86:
 705:assembly_test.c **** 		cc2400_set(MDMTST0, 0x334b); // with PRNG
 1263              		.loc 1 705 0
 1264 0052 1420     		movs	r0, #20
 1265 0054 43F24B31 		movw	r1, #13131
 1266 0058 FFF7FEFF 		bl	cc2400_set
 1267              	.LVL87:
 706:assembly_test.c **** 		cc2400_set(FSDIV,   channel);
 1268              		.loc 1 706 0
 1269 005c 114B     		ldr	r3, .L143+4
 1270 005e 0220     		movs	r0, #2
 1271 0060 1988     		ldrh	r1, [r3]
 1272 0062 89B2     		uxth	r1, r1
 1273 0064 FFF7FEFF 		bl	cc2400_set
 1274              	.LVL88:
 707:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0040); // 250 kHz frequency deviation
 1275              		.loc 1 707 0
 1276 0068 0320     		movs	r0, #3
 1277 006a 4021     		movs	r1, #64
 1278              	.L142:
 1279 006c FFF7FEFF 		bl	cc2400_set
 1280              	.LVL89:
 1281              	.L139:
 708:assembly_test.c **** 	} else {
 709:assembly_test.c **** 		/* oops */
 710:assembly_test.c **** 		return;
 711:assembly_test.c **** 	}
 712:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 1282              		.loc 1 712 0 discriminator 1
 1283 0070 FFF7FEFF 		bl	cc2400_status
 1284              	.LVL90:
 1285 0074 4306     		lsls	r3, r0, #25
 1286 0076 FBD5     		bpl	.L139
 713:assembly_test.c **** 	cc2400_strobe(SFSON);
 1287              		.loc 1 713 0
 1288 0078 6120     		movs	r0, #97
 1289 007a FFF7FEFF 		bl	cc2400_strobe
 1290              	.LVL91:
 1291              	.L141:
 714:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 1292              		.loc 1 714 0 discriminator 1
 1293 007e FFF7FEFF 		bl	cc2400_status
 1294              	.LVL92:
 1295 0082 4007     		lsls	r0, r0, #29
 1296 0084 FBD5     		bpl	.L141
ARM GAS  /tmp/ccbDzT8J.s 			page 39


 715:assembly_test.c **** 	TXLED_SET;
 1297              		.loc 1 715 0
 1298 0086 084B     		ldr	r3, .L143+8
 1299 0088 4FF48072 		mov	r2, #256
 1300 008c 1A60     		str	r2, [r3]
 716:assembly_test.c **** 	cc2400_strobe(STX);
 1301              		.loc 1 716 0
 1302 008e 6320     		movs	r0, #99
 1303 0090 FFF7FEFF 		bl	cc2400_strobe
 1304              	.LVL93:
 717:assembly_test.c **** #ifdef UBERTOOTH_ONE
 718:assembly_test.c **** 	PAEN_SET;
 1305              		.loc 1 718 0
 1306 0094 054B     		ldr	r3, .L143+12
 1307 0096 8022     		movs	r2, #128
 1308 0098 1A60     		str	r2, [r3]
 719:assembly_test.c **** #endif
 720:assembly_test.c **** 	mode = MODE_TX_TEST;
 1309              		.loc 1 720 0
 1310 009a 0323     		movs	r3, #3
 1311 009c A362     		str	r3, [r4, #40]
 1312              	.L134:
 1313 009e 10BD     		pop	{r4, pc}
 1314              	.L144:
 1315              		.align	2
 1316              	.L143:
 1317 00a0 00000000 		.word	.LANCHOR0
 1318 00a4 00000000 		.word	.LANCHOR1
 1319 00a8 38C00920 		.word	537509944
 1320 00ac 58C00920 		.word	537509976
 1321              		.cfi_endproc
 1322              	.LFE13:
 1324              		.section	.text.cc2400_rangetest,"ax",%progbits
 1325              		.align	1
 1326              		.global	cc2400_rangetest
 1327              		.thumb
 1328              		.thumb_func
 1330              	cc2400_rangetest:
 1331              	.LFB14:
 721:assembly_test.c **** #endif
 722:assembly_test.c **** }
 723:assembly_test.c **** 
 724:assembly_test.c **** /*
 725:assembly_test.c ****  * This range test transmits a Bluetooth-like (but not Bluetooth compatible)
 726:assembly_test.c ****  * packet to a repeater and then receives the repeated packet.  It is only
 727:assembly_test.c ****  * useful if another device is running cc2400_repeater() some distance away.
 728:assembly_test.c ****  *
 729:assembly_test.c ****  * The outgoing packet is transmitted at each power amplifier (PA) level from
 730:assembly_test.c ****  * lowest to highest.  It is sent several times at each level.  The repeater
 731:assembly_test.c ****  * takes the first packet to be received correctly and repeats it in a similar
 732:assembly_test.c ****  * manner.  The result should indicate the lowest successful PA level in each
 733:assembly_test.c ****  * direction.
 734:assembly_test.c ****  *
 735:assembly_test.c ****  * The range test packet consists of:
 736:assembly_test.c ****  *   preamble: 4 bytes
 737:assembly_test.c ****  *   sync word: 4 bytes
 738:assembly_test.c ****  *   payload:
ARM GAS  /tmp/ccbDzT8J.s 			page 40


 739:assembly_test.c ****  *     length: 1 byte (21)
 740:assembly_test.c ****  *     packet type: 1 byte (0 = request; 1 = reply)
 741:assembly_test.c ****  *     LPC17xx serial number: 16 bytes
 742:assembly_test.c ****  *     request pa: 1 byte
 743:assembly_test.c ****  *     request number: 1 byte
 744:assembly_test.c ****  *     reply pa: 1 byte
 745:assembly_test.c ****  *     reply number: 1 byte
 746:assembly_test.c ****  *   crc: 2 bytes
 747:assembly_test.c ****  */
 748:assembly_test.c **** 
 749:assembly_test.c **** void cc2400_rangetest()
 750:assembly_test.c **** {
 1332              		.loc 1 750 0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 88
 1335              		@ frame_needed = 1, uses_anonymous_args = 0
 1336 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1337              		.cfi_def_cfa_offset 32
 1338              		.cfi_offset 4, -32
 1339              		.cfi_offset 5, -28
 1340              		.cfi_offset 6, -24
 1341              		.cfi_offset 7, -20
 1342              		.cfi_offset 8, -16
 1343              		.cfi_offset 9, -12
 1344              		.cfi_offset 10, -8
 1345              		.cfi_offset 14, -4
 1346 0004 96B0     		sub	sp, sp, #88
 1347              		.cfi_def_cfa_offset 120
 1348 0006 00AF     		add	r7, sp, #0
 1349              		.cfi_def_cfa_register 7
 751:assembly_test.c **** #ifdef TX_ENABLE
 752:assembly_test.c **** 	u32 command[5];
 753:assembly_test.c **** 	u32 result[5];
 754:assembly_test.c **** 	int i;
 755:assembly_test.c **** 	int j;
 756:assembly_test.c **** 	u8 len = 22;
 757:assembly_test.c **** 	u8 pa = 0;
 758:assembly_test.c **** 	u8 txbuf[len];
 759:assembly_test.c **** 	u8 rxbuf[len];
 760:assembly_test.c **** 
 761:assembly_test.c **** 	mode = MODE_RANGE_TEST;
 1350              		.loc 1 761 0
 1351 0008 9E4B     		ldr	r3, .L187
 1352 000a 0524     		movs	r4, #5
 1353 000c 9C62     		str	r4, [r3, #40]
 762:assembly_test.c **** 
 763:assembly_test.c **** 	txbuf[0] = len - 1; // length of data (rest of payload)
 1354              		.loc 1 763 0
 1355 000e 1523     		movs	r3, #21
 1356 0010 87F84030 		strb	r3, [r7, #64]
 764:assembly_test.c **** 	txbuf[1] = 0; // request
 1357              		.loc 1 764 0
 1358 0014 0023     		movs	r3, #0
 1359 0016 87F84130 		strb	r3, [r7, #65]
 765:assembly_test.c **** 
 766:assembly_test.c **** 	// read device serial number
 767:assembly_test.c **** 	command[0] = 58;
ARM GAS  /tmp/ccbDzT8J.s 			page 41


 768:assembly_test.c **** 	iap_entry(command, result);
 1360              		.loc 1 768 0
 1361 001a 9B4B     		ldr	r3, .L187+4
 767:assembly_test.c **** 	iap_entry(command, result);
 1362              		.loc 1 767 0
 1363 001c 3A22     		movs	r2, #58
 1364 001e 07F15800 		add	r0, r7, #88
 1365 0022 40F8582D 		str	r2, [r0, #-88]!
 1366              		.loc 1 768 0
 1367 0026 07F11401 		add	r1, r7, #20
 1368 002a 3846     		mov	r0, r7
 1369 002c 1B68     		ldr	r3, [r3]
 1370 002e 9847     		blx	r3
 1371              	.LVL94:
 769:assembly_test.c **** 	if ((result[0] & 0xFF) != 0) //status check
 1372              		.loc 1 769 0
 1373 0030 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 1374 0032 EA46     		mov	r10, sp
 1375              	.LVL95:
 1376 0034 002A     		cmp	r2, #0
 1377 0036 40F02081 		bne	.L145
 1378              	.LVL96:
 770:assembly_test.c **** 		return;
 771:assembly_test.c **** 	txbuf[2] = (result[1] >> 24) & 0xFF;
 1379              		.loc 1 771 0
 1380 003a BB69     		ldr	r3, [r7, #24]
 772:assembly_test.c **** 	txbuf[3] = (result[1] >> 16) & 0xFF;
 773:assembly_test.c **** 	txbuf[4] = (result[1] >> 8) & 0xFF;
 774:assembly_test.c **** 	txbuf[5] = result[1] & 0xFF;
 775:assembly_test.c **** 	txbuf[6] = (result[2] >> 24) & 0xFF;
 776:assembly_test.c **** 	txbuf[7] = (result[2] >> 16) & 0xFF;
 777:assembly_test.c **** 	txbuf[8] = (result[2] >> 8) & 0xFF;
 778:assembly_test.c **** 	txbuf[9] = result[2] & 0xFF;
 779:assembly_test.c **** 	txbuf[10] = (result[3] >> 24) & 0xFF;
 780:assembly_test.c **** 	txbuf[11] = (result[3] >> 16) & 0xFF;
 781:assembly_test.c **** 	txbuf[12] = (result[3] >> 8) & 0xFF;
 782:assembly_test.c **** 	txbuf[13] = result[3] & 0xFF;
 783:assembly_test.c **** 	txbuf[14] = (result[4] >> 24) & 0xFF;
 784:assembly_test.c **** 	txbuf[15] = (result[4] >> 16) & 0xFF;
 785:assembly_test.c **** 	txbuf[16] = (result[4] >> 8) & 0xFF;
 786:assembly_test.c **** 	txbuf[17] = result[4] & 0xFF;
 787:assembly_test.c **** 
 788:assembly_test.c **** 	txbuf[18] = pa; // request pa
 789:assembly_test.c **** 	txbuf[19] = 0; // request number
 790:assembly_test.c **** 	txbuf[20] = 0xff; // reply pa
 791:assembly_test.c **** 	txbuf[21] = 0xff; // reply number
 792:assembly_test.c **** 
 793:assembly_test.c **** 	// Bluetooth-like modulation
 794:assembly_test.c **** 	cc2400_set(MANAND,  0x7fff);
 1381              		.loc 1 794 0
 1382 003c 0D20     		movs	r0, #13
 771:assembly_test.c **** 	txbuf[3] = (result[1] >> 16) & 0xFF;
 1383              		.loc 1 771 0
 1384 003e 190E     		lsrs	r1, r3, #24
 1385 0040 87F84210 		strb	r1, [r7, #66]
 772:assembly_test.c **** 	txbuf[3] = (result[1] >> 16) & 0xFF;
 1386              		.loc 1 772 0
ARM GAS  /tmp/ccbDzT8J.s 			page 42


 1387 0044 190C     		lsrs	r1, r3, #16
 1388 0046 87F84310 		strb	r1, [r7, #67]
 774:assembly_test.c **** 	txbuf[6] = (result[2] >> 24) & 0xFF;
 1389              		.loc 1 774 0
 1390 004a 87F84530 		strb	r3, [r7, #69]
 773:assembly_test.c **** 	txbuf[5] = result[1] & 0xFF;
 1391              		.loc 1 773 0
 1392 004e 190A     		lsrs	r1, r3, #8
 775:assembly_test.c **** 	txbuf[7] = (result[2] >> 16) & 0xFF;
 1393              		.loc 1 775 0
 1394 0050 FB69     		ldr	r3, [r7, #28]
 773:assembly_test.c **** 	txbuf[5] = result[1] & 0xFF;
 1395              		.loc 1 773 0
 1396 0052 87F84410 		strb	r1, [r7, #68]
 775:assembly_test.c **** 	txbuf[7] = (result[2] >> 16) & 0xFF;
 1397              		.loc 1 775 0
 1398 0056 190E     		lsrs	r1, r3, #24
 1399 0058 87F84610 		strb	r1, [r7, #70]
 776:assembly_test.c **** 	txbuf[8] = (result[2] >> 8) & 0xFF;
 1400              		.loc 1 776 0
 1401 005c 190C     		lsrs	r1, r3, #16
 1402 005e 87F84710 		strb	r1, [r7, #71]
 778:assembly_test.c **** 	txbuf[10] = (result[3] >> 24) & 0xFF;
 1403              		.loc 1 778 0
 1404 0062 87F84930 		strb	r3, [r7, #73]
 777:assembly_test.c **** 	txbuf[9] = result[2] & 0xFF;
 1405              		.loc 1 777 0
 1406 0066 190A     		lsrs	r1, r3, #8
 779:assembly_test.c **** 	txbuf[11] = (result[3] >> 16) & 0xFF;
 1407              		.loc 1 779 0
 1408 0068 3B6A     		ldr	r3, [r7, #32]
 777:assembly_test.c **** 	txbuf[9] = result[2] & 0xFF;
 1409              		.loc 1 777 0
 1410 006a 87F84810 		strb	r1, [r7, #72]
 779:assembly_test.c **** 	txbuf[11] = (result[3] >> 16) & 0xFF;
 1411              		.loc 1 779 0
 1412 006e 190E     		lsrs	r1, r3, #24
 1413 0070 87F84A10 		strb	r1, [r7, #74]
 780:assembly_test.c **** 	txbuf[12] = (result[3] >> 8) & 0xFF;
 1414              		.loc 1 780 0
 1415 0074 190C     		lsrs	r1, r3, #16
 1416 0076 87F84B10 		strb	r1, [r7, #75]
 782:assembly_test.c **** 	txbuf[14] = (result[4] >> 24) & 0xFF;
 1417              		.loc 1 782 0
 1418 007a 87F84D30 		strb	r3, [r7, #77]
 781:assembly_test.c **** 	txbuf[13] = result[3] & 0xFF;
 1419              		.loc 1 781 0
 1420 007e 190A     		lsrs	r1, r3, #8
 783:assembly_test.c **** 	txbuf[15] = (result[4] >> 16) & 0xFF;
 1421              		.loc 1 783 0
 1422 0080 7B6A     		ldr	r3, [r7, #36]
 781:assembly_test.c **** 	txbuf[13] = result[3] & 0xFF;
 1423              		.loc 1 781 0
 1424 0082 87F84C10 		strb	r1, [r7, #76]
 783:assembly_test.c **** 	txbuf[15] = (result[4] >> 16) & 0xFF;
 1425              		.loc 1 783 0
 1426 0086 190E     		lsrs	r1, r3, #24
ARM GAS  /tmp/ccbDzT8J.s 			page 43


 1427 0088 87F84E10 		strb	r1, [r7, #78]
 784:assembly_test.c **** 	txbuf[16] = (result[4] >> 8) & 0xFF;
 1428              		.loc 1 784 0
 1429 008c 190C     		lsrs	r1, r3, #16
 1430 008e 87F84F10 		strb	r1, [r7, #79]
 785:assembly_test.c **** 	txbuf[17] = result[4] & 0xFF;
 1431              		.loc 1 785 0
 1432 0092 190A     		lsrs	r1, r3, #8
 1433 0094 87F85010 		strb	r1, [r7, #80]
 786:assembly_test.c **** 
 1434              		.loc 1 786 0
 1435 0098 87F85130 		strb	r3, [r7, #81]
 1436              		.loc 1 794 0
 1437 009c 47F6FF71 		movw	r1, #32767
 790:assembly_test.c **** 	txbuf[21] = 0xff; // reply number
 1438              		.loc 1 790 0
 1439 00a0 FF23     		movs	r3, #255
 788:assembly_test.c **** 	txbuf[19] = 0; // request number
 1440              		.loc 1 788 0
 1441 00a2 87F85220 		strb	r2, [r7, #82]
 789:assembly_test.c **** 	txbuf[20] = 0xff; // reply pa
 1442              		.loc 1 789 0
 1443 00a6 87F85320 		strb	r2, [r7, #83]
 790:assembly_test.c **** 	txbuf[21] = 0xff; // reply number
 1444              		.loc 1 790 0
 1445 00aa 87F85430 		strb	r3, [r7, #84]
 791:assembly_test.c **** 
 1446              		.loc 1 791 0
 1447 00ae 87F85530 		strb	r3, [r7, #85]
 795:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 796:assembly_test.c **** 	cc2400_set(MDMTST0, 0x134b);
 797:assembly_test.c **** 	cc2400_set(FSDIV,   channel);
 1448              		.loc 1 797 0
 1449 00b2 764D     		ldr	r5, .L187+8
 794:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 1450              		.loc 1 794 0
 1451 00b4 FFF7FEFF 		bl	cc2400_set
 1452              	.LVL97:
 795:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 1453              		.loc 1 795 0
 1454 00b8 1220     		movs	r0, #18
 1455 00ba 42F62231 		movw	r1, #11042
 1456 00be FFF7FEFF 		bl	cc2400_set
 1457              	.LVL98:
 796:assembly_test.c **** 	cc2400_set(FSDIV,   channel);
 1458              		.loc 1 796 0
 1459 00c2 1420     		movs	r0, #20
 1460 00c4 41F24B31 		movw	r1, #4939
 1461 00c8 FFF7FEFF 		bl	cc2400_set
 1462              	.LVL99:
 1463              		.loc 1 797 0
 1464 00cc 2988     		ldrh	r1, [r5]
 1465 00ce 0220     		movs	r0, #2
 1466 00d0 89B2     		uxth	r1, r1
 1467 00d2 FFF7FEFF 		bl	cc2400_set
 1468              	.LVL100:
 798:assembly_test.c **** 	cc2400_set(SYNCH,   0xf9ae);
ARM GAS  /tmp/ccbDzT8J.s 			page 44


 1469              		.loc 1 798 0
 1470 00d6 2D20     		movs	r0, #45
 1471 00d8 4FF6AE11 		movw	r1, #63918
 1472 00dc FFF7FEFF 		bl	cc2400_set
 1473              	.LVL101:
 799:assembly_test.c **** 	cc2400_set(SYNCL,   0x1584);
 1474              		.loc 1 799 0
 1475 00e0 2C20     		movs	r0, #44
 1476 00e2 41F28451 		movw	r1, #5508
 1477 00e6 FFF7FEFF 		bl	cc2400_set
 1478              	.LVL102:
 800:assembly_test.c **** 	cc2400_set(FREND,   8 | pa);
 1479              		.loc 1 800 0
 1480 00ea 2046     		mov	r0, r4
 1481 00ec 0821     		movs	r1, #8
 1482 00ee FFF7FEFF 		bl	cc2400_set
 1483              	.LVL103:
 801:assembly_test.c **** 	cc2400_set(MDMCTRL, 0x0029);
 1484              		.loc 1 801 0
 1485 00f2 0320     		movs	r0, #3
 1486 00f4 2921     		movs	r1, #41
 1487 00f6 FFF7FEFF 		bl	cc2400_set
 1488              	.LVL104:
 1489 00fa A946     		mov	r9, r5
 1490              	.L148:
 802:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 1491              		.loc 1 802 0 discriminator 1
 1492 00fc FFF7FEFF 		bl	cc2400_status
 1493              	.LVL105:
 1494 0100 4306     		lsls	r3, r0, #25
 1495 0102 FBD5     		bpl	.L148
 803:assembly_test.c **** 	cc2400_strobe(SFSON);
 1496              		.loc 1 803 0
 1497 0104 6120     		movs	r0, #97
 1498 0106 FFF7FEFF 		bl	cc2400_strobe
 1499              	.LVL106:
 1500              	.L150:
 804:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 1501              		.loc 1 804 0 discriminator 1
 1502 010a FFF7FEFF 		bl	cc2400_status
 1503              	.LVL107:
 1504 010e 4607     		lsls	r6, r0, #29
 1505 0110 FBD5     		bpl	.L150
 805:assembly_test.c **** 	TXLED_SET;
 1506              		.loc 1 805 0
 1507 0112 5F4B     		ldr	r3, .L187+12
 1508 0114 4FF48072 		mov	r2, #256
 1509 0118 1A60     		str	r2, [r3]
 806:assembly_test.c **** #ifdef UBERTOOTH_ONE
 807:assembly_test.c **** 	PAEN_SET;
 1510              		.loc 1 807 0
 1511 011a 8022     		movs	r2, #128
 1512 011c 1A62     		str	r2, [r3, #32]
 808:assembly_test.c **** #endif
 809:assembly_test.c **** 	for (pa = 0; pa < 8; pa++) {
 1513              		.loc 1 809 0
 1514 011e 0024     		movs	r4, #0
ARM GAS  /tmp/ccbDzT8J.s 			page 45


 1515              	.LVL108:
 1516              	.L158:
 810:assembly_test.c **** 		cc2400_set(FREND, 8 | pa);
 1517              		.loc 1 810 0
 1518 0120 0520     		movs	r0, #5
 1519 0122 44F00801 		orr	r1, r4, #8
 1520 0126 FFF7FEFF 		bl	cc2400_set
 1521              	.LVL109:
 811:assembly_test.c **** 		txbuf[18] = pa;
 812:assembly_test.c **** 		for (i = 0; i < 16; i++) {
 1522              		.loc 1 812 0
 1523 012a 0025     		movs	r5, #0
 811:assembly_test.c **** 		txbuf[18] = pa;
 1524              		.loc 1 811 0
 1525 012c 87F85240 		strb	r4, [r7, #82]
 1526              	.LVL110:
 1527              	.L156:
 813:assembly_test.c **** 			txbuf[19] = i;
 1528              		.loc 1 813 0
 1529 0130 87F85350 		strb	r5, [r7, #83]
 1530              	.L152:
 814:assembly_test.c **** 			while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1531              		.loc 1 814 0 discriminator 1
 1532 0134 0E20     		movs	r0, #14
 1533 0136 FFF7FEFF 		bl	cc2400_get
 1534              	.LVL111:
 1535 013a 00F01F00 		and	r0, r0, #31
 1536 013e 0F28     		cmp	r0, #15
 1537 0140 F8D1     		bne	.L152
 1538              		.loc 1 814 0 is_stmt 0
 1539 0142 0026     		movs	r6, #0
 1540              	.L154:
 1541              	.LVL112:
 815:assembly_test.c **** 			// transmit a packet
 816:assembly_test.c **** 			for (j = 0; j < len; j++)
 817:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 1542              		.loc 1 817 0 is_stmt 1 discriminator 2
 1543 0144 07F14008 		add	r8, r7, #64
 1544              	.LVL113:
 1545 0148 18F80610 		ldrb	r1, [r8, r6]	@ zero_extendqisi2
 1546 014c 7020     		movs	r0, #112
 816:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 1547              		.loc 1 816 0 discriminator 2
 1548 014e 0136     		adds	r6, r6, #1
 1549              	.LVL114:
 1550              		.loc 1 817 0 discriminator 2
 1551 0150 FFF7FEFF 		bl	cc2400_set8
 1552              	.LVL115:
 816:assembly_test.c **** 				cc2400_set8(FIFOREG, txbuf[j]);
 1553              		.loc 1 816 0 discriminator 2
 1554 0154 162E     		cmp	r6, #22
 1555 0156 F5D1     		bne	.L154
 818:assembly_test.c **** 			cc2400_strobe(STX);
 1556              		.loc 1 818 0
 1557 0158 6320     		movs	r0, #99
 812:assembly_test.c **** 			txbuf[19] = i;
 1558              		.loc 1 812 0
ARM GAS  /tmp/ccbDzT8J.s 			page 46


 1559 015a 0135     		adds	r5, r5, #1
 1560              	.LVL116:
 1561              		.loc 1 818 0
 1562 015c FFF7FEFF 		bl	cc2400_strobe
 1563              	.LVL117:
 812:assembly_test.c **** 			txbuf[19] = i;
 1564              		.loc 1 812 0
 1565 0160 102D     		cmp	r5, #16
 1566 0162 E5D1     		bne	.L156
 809:assembly_test.c **** 		cc2400_set(FREND, 8 | pa);
 1567              		.loc 1 809 0
 1568 0164 0134     		adds	r4, r4, #1
 1569              	.LVL118:
 1570 0166 E4B2     		uxtb	r4, r4
 1571              	.LVL119:
 1572 0168 082C     		cmp	r4, #8
 1573 016a D9D1     		bne	.L158
 1574              	.L160:
 819:assembly_test.c **** 		}
 820:assembly_test.c **** 	}
 821:assembly_test.c **** 	// sent packet, now look for repeated packet
 822:assembly_test.c **** 	while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1575              		.loc 1 822 0
 1576 016c 0E20     		movs	r0, #14
 1577 016e FFF7FEFF 		bl	cc2400_get
 1578              	.LVL120:
 1579 0172 00F01F00 		and	r0, r0, #31
 1580 0176 0F28     		cmp	r0, #15
 1581 0178 F8D1     		bne	.L160
 823:assembly_test.c **** 	TXLED_CLR;
 1582              		.loc 1 823 0
 1583 017a 464B     		ldr	r3, .L187+16
 1584 017c 4FF48072 		mov	r2, #256
 1585 0180 1A60     		str	r2, [r3]
 824:assembly_test.c **** 	cc2400_strobe(SRFOFF);
 1586              		.loc 1 824 0
 1587 0182 6420     		movs	r0, #100
 1588 0184 FFF7FEFF 		bl	cc2400_strobe
 1589              	.LVL121:
 1590              	.L162:
 825:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 1591              		.loc 1 825 0 discriminator 1
 1592 0188 FFF7FEFF 		bl	cc2400_status
 1593              	.LVL122:
 1594 018c 4507     		lsls	r5, r0, #29
 1595 018e FBD4     		bmi	.L162
 826:assembly_test.c **** 	cc2400_set(FSDIV, channel - 1);
 1596              		.loc 1 826 0
 1597 0190 B9F80010 		ldrh	r1, [r9]
 1598 0194 0220     		movs	r0, #2
 1599 0196 89B2     		uxth	r1, r1
 1600 0198 0139     		subs	r1, r1, #1
 1601 019a 89B2     		uxth	r1, r1
 1602 019c FFF7FEFF 		bl	cc2400_set
 1603              	.LVL123:
 1604              	.L164:
 827:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
ARM GAS  /tmp/ccbDzT8J.s 			page 47


 1605              		.loc 1 827 0 discriminator 1
 1606 01a0 FFF7FEFF 		bl	cc2400_status
 1607              	.LVL124:
 1608 01a4 4406     		lsls	r4, r0, #25
 1609 01a6 FBD5     		bpl	.L164
 828:assembly_test.c **** 	cc2400_strobe(SFSON);
 1610              		.loc 1 828 0
 1611 01a8 6120     		movs	r0, #97
 1612 01aa FFF7FEFF 		bl	cc2400_strobe
 1613              	.LVL125:
 1614              	.L166:
 829:assembly_test.c **** 	while (!(cc2400_status() & FS_LOCK));
 1615              		.loc 1 829 0 discriminator 1
 1616 01ae FFF7FEFF 		bl	cc2400_status
 1617              	.LVL126:
 1618 01b2 4007     		lsls	r0, r0, #29
 1619 01b4 FBD5     		bpl	.L166
 830:assembly_test.c **** 	RXLED_SET;
 1620              		.loc 1 830 0
 1621 01b6 364B     		ldr	r3, .L187+12
 1622 01b8 1022     		movs	r2, #16
 1623              	.LVL127:
 1624              	.L186:
 1625 01ba 1A60     		str	r2, [r3]
 1626              	.L168:
 831:assembly_test.c **** 	while (1) {
 832:assembly_test.c **** 		while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1627              		.loc 1 832 0 discriminator 1
 1628 01bc 0E20     		movs	r0, #14
 1629 01be FFF7FEFF 		bl	cc2400_get
 1630              	.LVL128:
 1631 01c2 00F01F00 		and	r0, r0, #31
 1632 01c6 0F28     		cmp	r0, #15
 1633 01c8 F8D1     		bne	.L168
 833:assembly_test.c **** 		cc2400_strobe(SRX);
 1634              		.loc 1 833 0
 1635 01ca 6220     		movs	r0, #98
 1636 01cc FFF7FEFF 		bl	cc2400_strobe
 1637              	.LVL129:
 1638              	.L170:
 834:assembly_test.c **** 		while (!(cc2400_status() & SYNC_RECEIVED));
 1639              		.loc 1 834 0 discriminator 1
 1640 01d0 FFF7FEFF 		bl	cc2400_status
 1641              	.LVL130:
 1642 01d4 C106     		lsls	r1, r0, #27
 1643 01d6 FBD5     		bpl	.L170
 835:assembly_test.c **** 		USRLED_SET;
 1644              		.loc 1 835 0
 1645 01d8 2D4B     		ldr	r3, .L187+12
 1646 01da 0222     		movs	r2, #2
 1647 01dc 1A60     		str	r2, [r3]
 1648              	.LVL131:
 836:assembly_test.c **** 		for (j = 0; j < len; j++)
 1649              		.loc 1 836 0
 1650 01de 0024     		movs	r4, #0
 1651              	.LVL132:
 1652              	.L172:
ARM GAS  /tmp/ccbDzT8J.s 			page 48


 837:assembly_test.c **** 			rxbuf[j] = cc2400_get8(FIFOREG);
 1653              		.loc 1 837 0 discriminator 2
 1654 01e0 7020     		movs	r0, #112
 1655 01e2 FFF7FEFF 		bl	cc2400_get8
 1656              	.LVL133:
 1657 01e6 07F12805 		add	r5, r7, #40
 1658              	.LVL134:
 1659 01ea 2855     		strb	r0, [r5, r4]
 836:assembly_test.c **** 		for (j = 0; j < len; j++)
 1660              		.loc 1 836 0 discriminator 2
 1661 01ec 0134     		adds	r4, r4, #1
 1662              	.LVL135:
 1663 01ee 162C     		cmp	r4, #22
 1664 01f0 F6D1     		bne	.L172
 838:assembly_test.c **** 		if (cc2400_status() & STATUS_CRC_OK)
 1665              		.loc 1 838 0
 1666 01f2 FFF7FEFF 		bl	cc2400_status
 1667              	.LVL136:
 1668 01f6 0207     		lsls	r2, r0, #28
 1669 01f8 02D4     		bmi	.L176
 839:assembly_test.c **** 			break;
 840:assembly_test.c **** 		USRLED_CLR;
 1670              		.loc 1 840 0
 1671 01fa 0222     		movs	r2, #2
 1672 01fc 254B     		ldr	r3, .L187+16
 1673 01fe DCE7     		b	.L186
 1674              	.L176:
 841:assembly_test.c **** 	}
 842:assembly_test.c **** 
 843:assembly_test.c **** 	// done
 844:assembly_test.c **** 	while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1675              		.loc 1 844 0
 1676 0200 0E20     		movs	r0, #14
 1677 0202 FFF7FEFF 		bl	cc2400_get
 1678              	.LVL137:
 1679 0206 00F01F00 		and	r0, r0, #31
 1680 020a 0F28     		cmp	r0, #15
 1681 020c F8D1     		bne	.L176
 845:assembly_test.c **** 	cc2400_strobe(SRFOFF);
 1682              		.loc 1 845 0
 1683 020e 6420     		movs	r0, #100
 1684 0210 FFF7FEFF 		bl	cc2400_strobe
 1685              	.LVL138:
 1686              	.L178:
 846:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 1687              		.loc 1 846 0 discriminator 1
 1688 0214 FFF7FEFF 		bl	cc2400_status
 1689              	.LVL139:
 1690 0218 00F00400 		and	r0, r0, #4
 1691 021c 00F0FF03 		and	r3, r0, #255
 1692 0220 0028     		cmp	r0, #0
 1693 0222 F7D1     		bne	.L178
 847:assembly_test.c **** #ifdef UBERTOOTH_ONE
 848:assembly_test.c **** 	PAEN_CLR;
 1694              		.loc 1 848 0
 1695 0224 1C4A     		ldr	r2, .L187+20
 1696 0226 8021     		movs	r1, #128
ARM GAS  /tmp/ccbDzT8J.s 			page 49


 1697 0228 1160     		str	r1, [r2]
 849:assembly_test.c **** #endif
 850:assembly_test.c **** 	RXLED_CLR;
 1698              		.loc 1 850 0
 1699 022a 1021     		movs	r1, #16
 1700 022c 42F8201C 		str	r1, [r2, #-32]
 851:assembly_test.c **** 
 852:assembly_test.c **** 	// get test result
 853:assembly_test.c **** 	rr.valid       = 1;
 854:assembly_test.c **** 	rr.request_pa  = rxbuf[18];
 1701              		.loc 1 854 0
 1702 0230 97F83A00 		ldrb	r0, [r7, #58]	@ zero_extendqisi2
 853:assembly_test.c **** 	rr.request_pa  = rxbuf[18];
 1703              		.loc 1 853 0
 1704 0234 194A     		ldr	r2, .L187+24
 1705 0236 0121     		movs	r1, #1
 1706              		.loc 1 854 0
 1707 0238 5070     		strb	r0, [r2, #1]
 855:assembly_test.c **** 	rr.request_num = rxbuf[19];
 1708              		.loc 1 855 0
 1709 023a 97F83B00 		ldrb	r0, [r7, #59]	@ zero_extendqisi2
 856:assembly_test.c **** 	rr.reply_pa    = rxbuf[20];
 857:assembly_test.c **** 	rr.reply_num   = rxbuf[21];
 858:assembly_test.c **** 
 859:assembly_test.c **** 	// make sure rx packet is as expected
 860:assembly_test.c **** 	txbuf[1] = 1; // expected value in rxbuf
 1710              		.loc 1 860 0
 1711 023e 87F84110 		strb	r1, [r7, #65]
 1712              	.LVL140:
 855:assembly_test.c **** 	rr.request_num = rxbuf[19];
 1713              		.loc 1 855 0
 1714 0242 9070     		strb	r0, [r2, #2]
 856:assembly_test.c **** 	rr.reply_pa    = rxbuf[20];
 1715              		.loc 1 856 0
 1716 0244 97F83C00 		ldrb	r0, [r7, #60]	@ zero_extendqisi2
 1717 0248 D070     		strb	r0, [r2, #3]
 857:assembly_test.c **** 
 1718              		.loc 1 857 0
 1719 024a 97F83D00 		ldrb	r0, [r7, #61]	@ zero_extendqisi2
 1720 024e 1071     		strb	r0, [r2, #4]
 1721              	.LVL141:
 1722              	.L181:
 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
 862:assembly_test.c **** 		if (rxbuf[i] != txbuf[i])
 1723              		.loc 1 862 0
 1724 0250 EC5C     		ldrb	r4, [r5, r3]	@ zero_extendqisi2
 1725 0252 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
 1726              		.loc 1 861 0
 1727 0256 0133     		adds	r3, r3, #1
 1728              	.LVL142:
 863:assembly_test.c **** 			rr.valid = 0;
 1729              		.loc 1 863 0
 1730 0258 8442     		cmp	r4, r0
 1731 025a 18BF     		it	ne
 1732 025c 0021     		movne	r1, #0
 861:assembly_test.c **** 	for (i = 0; i < 18; i++)
ARM GAS  /tmp/ccbDzT8J.s 			page 50


 1733              		.loc 1 861 0
 1734 025e 122B     		cmp	r3, #18
 1735 0260 F6D1     		bne	.L181
 864:assembly_test.c **** 
 865:assembly_test.c **** 	USRLED_CLR;
 1736              		.loc 1 865 0
 1737 0262 0C4B     		ldr	r3, .L187+16
 1738              	.LVL143:
 1739 0264 1170     		strb	r1, [r2]
 1740 0266 0222     		movs	r2, #2
 1741 0268 1A60     		str	r2, [r3]
 866:assembly_test.c **** 	mode = MODE_IDLE;
 1742              		.loc 1 866 0
 1743 026a 064B     		ldr	r3, .L187
 1744 026c 0022     		movs	r2, #0
 1745 026e 9A62     		str	r2, [r3, #40]
 867:assembly_test.c **** 	if (requested_mode == MODE_RANGE_TEST)
 1746              		.loc 1 867 0
 1747 0270 5968     		ldr	r1, [r3, #4]
 1748 0272 0529     		cmp	r1, #5
 868:assembly_test.c **** 		requested_mode = MODE_IDLE;
 1749              		.loc 1 868 0
 1750 0274 08BF     		it	eq
 1751 0276 5A60     		streq	r2, [r3, #4]
 1752 0278 D546     		mov	sp, r10
 1753              	.LVL144:
 1754              	.L145:
 869:assembly_test.c **** #endif
 870:assembly_test.c **** }
 1755              		.loc 1 870 0
 1756 027a 5837     		adds	r7, r7, #88
 1757 027c BD46     		mov	sp, r7
 1758              		@ sp needed
 1759 027e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1760              	.LVL145:
 1761              	.L188:
 1762 0282 00BF     		.align	2
 1763              	.L187:
 1764 0284 00000000 		.word	.LANCHOR0
 1765 0288 00000000 		.word	iap_entry
 1766 028c 00000000 		.word	.LANCHOR1
 1767 0290 38C00920 		.word	537509944
 1768 0294 3CC00920 		.word	537509948
 1769 0298 5CC00920 		.word	537509980
 1770 029c 00000000 		.word	rr
 1771              		.cfi_endproc
 1772              	.LFE14:
 1774              		.section	.text.cc2400_repeater,"ax",%progbits
 1775              		.align	1
 1776              		.global	cc2400_repeater
 1777              		.thumb
 1778              		.thumb_func
 1780              	cc2400_repeater:
 1781              	.LFB15:
 871:assembly_test.c **** 
 872:assembly_test.c **** /* This is the repeater implementation to be used with cc2400_rangetest(). */
 873:assembly_test.c **** void cc2400_repeater()
ARM GAS  /tmp/ccbDzT8J.s 			page 51


 874:assembly_test.c **** {
 1782              		.loc 1 874 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 24
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786 0000 70B5     		push	{r4, r5, r6, lr}
 1787              		.cfi_def_cfa_offset 16
 1788              		.cfi_offset 4, -16
 1789              		.cfi_offset 5, -12
 1790              		.cfi_offset 6, -8
 1791              		.cfi_offset 14, -4
 1792 0002 86B0     		sub	sp, sp, #24
 1793              		.cfi_def_cfa_offset 40
 1794              	.LVL146:
 875:assembly_test.c **** #ifdef TX_ENABLE
 876:assembly_test.c **** 	int i;
 877:assembly_test.c **** 	int j;
 878:assembly_test.c **** 	u8 len = 22;
 879:assembly_test.c **** 	u8 pa = 0;
 880:assembly_test.c **** 	u8 buf[len];
 881:assembly_test.c **** 
 882:assembly_test.c **** 	mode = MODE_REPEATER;
 1795              		.loc 1 882 0
 1796 0004 5C4B     		ldr	r3, .L220
 1797 0006 0622     		movs	r2, #6
 1798 0008 9A62     		str	r2, [r3, #40]
 1799              	.LVL147:
 1800              	.L217:
 883:assembly_test.c **** 
 884:assembly_test.c **** 	//FIXME allow to be turned off
 885:assembly_test.c **** 	while (1) {
 886:assembly_test.c **** 		cc2400_set(MANAND,  0x7fff);
 1801              		.loc 1 886 0
 1802 000a 0D20     		movs	r0, #13
 1803 000c 47F6FF71 		movw	r1, #32767
 1804 0010 FFF7FEFF 		bl	cc2400_set
 1805              	.LVL148:
 887:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 888:assembly_test.c **** 		cc2400_set(MDMTST0, 0x134b);
 889:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1);
 1806              		.loc 1 889 0
 1807 0014 594D     		ldr	r5, .L220+4
 887:assembly_test.c **** 		cc2400_set(LMTST,   0x2b22);
 1808              		.loc 1 887 0
 1809 0016 1220     		movs	r0, #18
 1810 0018 42F62231 		movw	r1, #11042
 1811 001c FFF7FEFF 		bl	cc2400_set
 1812              	.LVL149:
 888:assembly_test.c **** 		cc2400_set(FSDIV,   channel - 1);
 1813              		.loc 1 888 0
 1814 0020 1420     		movs	r0, #20
 1815 0022 41F24B31 		movw	r1, #4939
 1816 0026 FFF7FEFF 		bl	cc2400_set
 1817              	.LVL150:
 1818              		.loc 1 889 0
 1819 002a 2988     		ldrh	r1, [r5]
 1820 002c 0220     		movs	r0, #2
ARM GAS  /tmp/ccbDzT8J.s 			page 52


 1821 002e 89B2     		uxth	r1, r1
 1822 0030 0139     		subs	r1, r1, #1
 1823 0032 89B2     		uxth	r1, r1
 1824 0034 FFF7FEFF 		bl	cc2400_set
 1825              	.LVL151:
 890:assembly_test.c **** 		cc2400_set(SYNCH,   0xf9ae);
 1826              		.loc 1 890 0
 1827 0038 2D20     		movs	r0, #45
 1828 003a 4FF6AE11 		movw	r1, #63918
 1829 003e FFF7FEFF 		bl	cc2400_set
 1830              	.LVL152:
 891:assembly_test.c **** 		cc2400_set(SYNCL,   0x1584);
 1831              		.loc 1 891 0
 1832 0042 2C20     		movs	r0, #44
 1833 0044 41F28451 		movw	r1, #5508
 1834 0048 FFF7FEFF 		bl	cc2400_set
 1835              	.LVL153:
 892:assembly_test.c **** 		cc2400_set(FREND,   0x0008); // minimum tx power
 1836              		.loc 1 892 0
 1837 004c 0520     		movs	r0, #5
 1838 004e 0821     		movs	r1, #8
 1839 0050 FFF7FEFF 		bl	cc2400_set
 1840              	.LVL154:
 893:assembly_test.c **** 		cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 1841              		.loc 1 893 0
 1842 0054 0320     		movs	r0, #3
 1843 0056 2921     		movs	r1, #41
 1844 0058 FFF7FEFF 		bl	cc2400_set
 1845              	.LVL155:
 1846              	.L191:
 894:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 1847              		.loc 1 894 0 discriminator 1
 1848 005c FFF7FEFF 		bl	cc2400_status
 1849              	.LVL156:
 1850 0060 4106     		lsls	r1, r0, #25
 1851 0062 FBD5     		bpl	.L191
 895:assembly_test.c **** 		cc2400_strobe(SFSON);
 1852              		.loc 1 895 0
 1853 0064 6120     		movs	r0, #97
 1854 0066 FFF7FEFF 		bl	cc2400_strobe
 1855              	.LVL157:
 1856              	.L193:
 896:assembly_test.c **** 		while (!(cc2400_status() & FS_LOCK));
 1857              		.loc 1 896 0 discriminator 1
 1858 006a FFF7FEFF 		bl	cc2400_status
 1859              	.LVL158:
 1860 006e 4207     		lsls	r2, r0, #29
 1861 0070 FBD5     		bpl	.L193
 897:assembly_test.c **** 		RXLED_SET;
 1862              		.loc 1 897 0
 1863 0072 434B     		ldr	r3, .L220+8
 1864 0074 1022     		movs	r2, #16
 1865 0076 1A60     		str	r2, [r3]
 898:assembly_test.c **** 		TXLED_CLR;
 1866              		.loc 1 898 0
 1867 0078 4FF48072 		mov	r2, #256
 1868 007c 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccbDzT8J.s 			page 53


 899:assembly_test.c **** 		USRLED_CLR;
 1869              		.loc 1 899 0
 1870 007e 0222     		movs	r2, #2
 1871 0080 5A60     		str	r2, [r3, #4]
 900:assembly_test.c **** #ifdef UBERTOOTH_ONE
 901:assembly_test.c **** 		PAEN_SET;
 1872              		.loc 1 901 0
 1873 0082 8022     		movs	r2, #128
 1874 0084 1A62     		str	r2, [r3, #32]
 1875              	.L195:
 902:assembly_test.c **** #endif
 903:assembly_test.c **** 		while (1) {
 904:assembly_test.c **** 			while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1876              		.loc 1 904 0 discriminator 1
 1877 0086 0E20     		movs	r0, #14
 1878 0088 FFF7FEFF 		bl	cc2400_get
 1879              	.LVL159:
 1880 008c 00F01F00 		and	r0, r0, #31
 1881 0090 0F28     		cmp	r0, #15
 1882 0092 F8D1     		bne	.L195
 905:assembly_test.c **** 			USRLED_CLR;
 1883              		.loc 1 905 0
 1884 0094 3B4B     		ldr	r3, .L220+12
 1885 0096 0222     		movs	r2, #2
 1886 0098 1A60     		str	r2, [r3]
 906:assembly_test.c **** 			cc2400_strobe(SRX);
 1887              		.loc 1 906 0
 1888 009a 6220     		movs	r0, #98
 1889 009c FFF7FEFF 		bl	cc2400_strobe
 1890              	.LVL160:
 1891              	.L197:
 907:assembly_test.c **** 			while (!(cc2400_status() & SYNC_RECEIVED));
 1892              		.loc 1 907 0 discriminator 1
 1893 00a0 FFF7FEFF 		bl	cc2400_status
 1894              	.LVL161:
 1895 00a4 C306     		lsls	r3, r0, #27
 1896 00a6 FBD5     		bpl	.L197
 908:assembly_test.c **** 			USRLED_SET;
 1897              		.loc 1 908 0
 1898 00a8 354B     		ldr	r3, .L220+8
 1899 00aa 0222     		movs	r2, #2
 1900 00ac 1A60     		str	r2, [r3]
 1901              	.LVL162:
 909:assembly_test.c **** 			for (i = 0; i < len; i++)
 1902              		.loc 1 909 0
 1903 00ae 0024     		movs	r4, #0
 1904              	.LVL163:
 1905              	.L199:
 910:assembly_test.c **** 				buf[i] = cc2400_get8(FIFOREG);
 1906              		.loc 1 910 0 discriminator 2
 1907 00b0 7020     		movs	r0, #112
 1908 00b2 FFF7FEFF 		bl	cc2400_get8
 1909              	.LVL164:
 1910 00b6 0DF80400 		strb	r0, [sp, r4]
 909:assembly_test.c **** 			for (i = 0; i < len; i++)
 1911              		.loc 1 909 0 discriminator 2
 1912 00ba 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccbDzT8J.s 			page 54


 1913              	.LVL165:
 1914 00bc 162C     		cmp	r4, #22
 1915 00be F7D1     		bne	.L199
 911:assembly_test.c **** 			if (cc2400_status() & STATUS_CRC_OK)
 1916              		.loc 1 911 0
 1917 00c0 FFF7FEFF 		bl	cc2400_status
 1918              	.LVL166:
 1919 00c4 0607     		lsls	r6, r0, #28
 1920 00c6 DED5     		bpl	.L195
 1921              	.LVL167:
 912:assembly_test.c **** 				break;
 913:assembly_test.c **** 		}
 914:assembly_test.c **** 		// got packet, now repeat it
 915:assembly_test.c **** 		i = 2000000; while (--i); // allow time for requester to switch to rx
 916:assembly_test.c **** 		USRLED_CLR;
 1922              		.loc 1 916 0
 1923 00c8 2E4B     		ldr	r3, .L220+12
 1924 00ca 0222     		movs	r2, #2
 1925 00cc 1A60     		str	r2, [r3]
 917:assembly_test.c **** 		RXLED_CLR;
 1926              		.loc 1 917 0
 1927 00ce 1022     		movs	r2, #16
 1928 00d0 1A60     		str	r2, [r3]
 918:assembly_test.c **** 		cc2400_strobe(SRFOFF);
 1929              		.loc 1 918 0
 1930 00d2 6420     		movs	r0, #100
 1931 00d4 FFF7FEFF 		bl	cc2400_strobe
 1932              	.LVL168:
 1933              	.L203:
 919:assembly_test.c **** 		while ((cc2400_status() & FS_LOCK));
 1934              		.loc 1 919 0 discriminator 1
 1935 00d8 FFF7FEFF 		bl	cc2400_status
 1936              	.LVL169:
 1937 00dc 4407     		lsls	r4, r0, #29
 1938 00de FBD4     		bmi	.L203
 1939              	.L205:
 920:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 1940              		.loc 1 920 0
 1941 00e0 FFF7FEFF 		bl	cc2400_status
 1942              	.LVL170:
 1943 00e4 4006     		lsls	r0, r0, #25
 1944 00e6 FBD5     		bpl	.L205
 921:assembly_test.c **** 		cc2400_set(FSDIV, channel);
 1945              		.loc 1 921 0
 1946 00e8 2988     		ldrh	r1, [r5]
 1947 00ea 0220     		movs	r0, #2
 1948 00ec 89B2     		uxth	r1, r1
 1949 00ee FFF7FEFF 		bl	cc2400_set
 1950              	.LVL171:
 1951              	.L207:
 922:assembly_test.c **** 		while (!(cc2400_status() & XOSC16M_STABLE));
 1952              		.loc 1 922 0 discriminator 1
 1953 00f2 FFF7FEFF 		bl	cc2400_status
 1954              	.LVL172:
 1955 00f6 4106     		lsls	r1, r0, #25
 1956 00f8 FBD5     		bpl	.L207
 923:assembly_test.c **** 		cc2400_strobe(SFSON);
ARM GAS  /tmp/ccbDzT8J.s 			page 55


 1957              		.loc 1 923 0
 1958 00fa 6120     		movs	r0, #97
 1959 00fc FFF7FEFF 		bl	cc2400_strobe
 1960              	.LVL173:
 924:assembly_test.c **** 		TXLED_SET;
 1961              		.loc 1 924 0
 1962 0100 1F4B     		ldr	r3, .L220+8
 1963 0102 4FF48072 		mov	r2, #256
 1964 0106 1A60     		str	r2, [r3]
 925:assembly_test.c **** 		buf[0] = len - 1; // length of data (rest of payload)
 1965              		.loc 1 925 0
 1966 0108 1523     		movs	r3, #21
 1967 010a 8DF80030 		strb	r3, [sp]
 926:assembly_test.c **** 		buf[1] = 1; // reply
 1968              		.loc 1 926 0
 1969 010e 0123     		movs	r3, #1
 1970 0110 8DF80130 		strb	r3, [sp, #1]
 1971              	.LVL174:
 927:assembly_test.c **** 		for (pa = 0; pa < 8; pa++) {
 1972              		.loc 1 927 0
 1973 0114 0024     		movs	r4, #0
 1974              	.LVL175:
 1975              	.L215:
 928:assembly_test.c **** 			cc2400_set(FREND, 8 | pa);
 1976              		.loc 1 928 0
 1977 0116 0520     		movs	r0, #5
 1978 0118 44F00801 		orr	r1, r4, #8
 1979 011c FFF7FEFF 		bl	cc2400_set
 1980              	.LVL176:
 929:assembly_test.c **** 			buf[20] = pa;
 930:assembly_test.c **** 			for (i = 0; i < 16; i++) {
 1981              		.loc 1 930 0
 1982 0120 0025     		movs	r5, #0
 929:assembly_test.c **** 			buf[20] = pa;
 1983              		.loc 1 929 0
 1984 0122 8DF81440 		strb	r4, [sp, #20]
 1985              	.LVL177:
 1986              	.L213:
 931:assembly_test.c **** 				buf[21] = i;
 1987              		.loc 1 931 0
 1988 0126 8DF81550 		strb	r5, [sp, #21]
 1989              	.L209:
 932:assembly_test.c **** 				while ((cc2400_get(FSMSTATE) & 0x1f) != STATE_STROBE_FS_ON);
 1990              		.loc 1 932 0 discriminator 1
 1991 012a 0E20     		movs	r0, #14
 1992 012c FFF7FEFF 		bl	cc2400_get
 1993              	.LVL178:
 1994 0130 00F01F00 		and	r0, r0, #31
 1995 0134 0F28     		cmp	r0, #15
 1996 0136 F8D1     		bne	.L209
 1997              		.loc 1 932 0 is_stmt 0
 1998 0138 0026     		movs	r6, #0
 1999              	.L211:
 2000              	.LVL179:
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 934:assembly_test.c **** 						cc2400_set8(FIFOREG, buf[j]);
 2001              		.loc 1 934 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccbDzT8J.s 			page 56


 2002 013a 1DF80610 		ldrb	r1, [sp, r6]	@ zero_extendqisi2
 2003 013e 7020     		movs	r0, #112
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 2004              		.loc 1 933 0 discriminator 2
 2005 0140 0136     		adds	r6, r6, #1
 2006              	.LVL180:
 2007              		.loc 1 934 0 discriminator 2
 2008 0142 FFF7FEFF 		bl	cc2400_set8
 2009              	.LVL181:
 933:assembly_test.c **** 					for (j = 0; j < len; j++)
 2010              		.loc 1 933 0 discriminator 2
 2011 0146 162E     		cmp	r6, #22
 2012 0148 F7D1     		bne	.L211
 935:assembly_test.c **** 				cc2400_strobe(STX);
 2013              		.loc 1 935 0
 2014 014a 6320     		movs	r0, #99
 930:assembly_test.c **** 				buf[21] = i;
 2015              		.loc 1 930 0
 2016 014c 0135     		adds	r5, r5, #1
 2017              	.LVL182:
 2018              		.loc 1 935 0
 2019 014e FFF7FEFF 		bl	cc2400_strobe
 2020              	.LVL183:
 930:assembly_test.c **** 				buf[21] = i;
 2021              		.loc 1 930 0
 2022 0152 102D     		cmp	r5, #16
 2023 0154 E7D1     		bne	.L213
 927:assembly_test.c **** 			cc2400_set(FREND, 8 | pa);
 2024              		.loc 1 927 0
 2025 0156 0134     		adds	r4, r4, #1
 2026              	.LVL184:
 2027 0158 E4B2     		uxtb	r4, r4
 2028              	.LVL185:
 2029 015a 082C     		cmp	r4, #8
 2030 015c DBD1     		bne	.L215
 936:assembly_test.c **** 			}
 937:assembly_test.c **** 		}
 938:assembly_test.c **** 		TXLED_CLR;
 2031              		.loc 1 938 0
 2032 015e 094B     		ldr	r3, .L220+12
 2033 0160 4FF48072 		mov	r2, #256
 2034 0164 1A60     		str	r2, [r3]
 939:assembly_test.c **** 		cc2400_strobe(SRFOFF);
 2035              		.loc 1 939 0
 2036 0166 6420     		movs	r0, #100
 2037 0168 FFF7FEFF 		bl	cc2400_strobe
 2038              	.LVL186:
 2039              	.L218:
 940:assembly_test.c **** 		while ((cc2400_status() & FS_LOCK));
 2040              		.loc 1 940 0 discriminator 1
 2041 016c FFF7FEFF 		bl	cc2400_status
 2042              	.LVL187:
 2043 0170 4207     		lsls	r2, r0, #29
 2044 0172 FBD4     		bmi	.L218
 2045 0174 49E7     		b	.L217
 2046              	.L221:
 2047 0176 00BF     		.align	2
ARM GAS  /tmp/ccbDzT8J.s 			page 57


 2048              	.L220:
 2049 0178 00000000 		.word	.LANCHOR0
 2050 017c 00000000 		.word	.LANCHOR1
 2051 0180 38C00920 		.word	537509944
 2052 0184 3CC00920 		.word	537509948
 2053              		.cfi_endproc
 2054              	.LFE15:
 2056              		.section	.text.bt_stream_rx,"ax",%progbits
 2057              		.align	1
 2058              		.global	bt_stream_rx
 2059              		.thumb
 2060              		.thumb_func
 2062              	bt_stream_rx:
 2063              	.LFB16:
 941:assembly_test.c **** 	}
 942:assembly_test.c **** #endif
 943:assembly_test.c **** }
 944:assembly_test.c **** 
 945:assembly_test.c **** void bt_stream_rx()
 946:assembly_test.c **** {
 2064              		.loc 1 946 0
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 0
 2067              		@ frame_needed = 0, uses_anonymous_args = 0
 2068 0000 70B5     		push	{r4, r5, r6, lr}
 2069              		.cfi_def_cfa_offset 16
 2070              		.cfi_offset 4, -16
 2071              		.cfi_offset 5, -12
 2072              		.cfi_offset 6, -8
 2073              		.cfi_offset 14, -4
 2074              	.LVL188:
 947:assembly_test.c **** 	u8 *tmp = NULL;
 948:assembly_test.c **** 	u8 epstat;
 949:assembly_test.c **** 	int i;
 950:assembly_test.c **** 
 951:assembly_test.c **** 	RXLED_SET;
 2075              		.loc 1 951 0
 2076 0002 294B     		ldr	r3, .L244
 2077 0004 1022     		movs	r2, #16
 2078 0006 1A60     		str	r2, [r3]
 952:assembly_test.c **** 
 953:assembly_test.c **** 	queue_init();
 2079              		.loc 1 953 0
 2080 0008 FFF7FEFF 		bl	queue_init
 2081              	.LVL189:
 954:assembly_test.c **** 	dio_ssp_init();
 2082              		.loc 1 954 0
 2083 000c FFF7FEFF 		bl	dio_ssp_init
 2084              	.LVL190:
 955:assembly_test.c **** 	dma_init();
 2085              		.loc 1 955 0
 2086 0010 FFF7FEFF 		bl	dma_init
 2087              	.LVL191:
 956:assembly_test.c **** 	dio_ssp_start();
 2088              		.loc 1 956 0
 2089 0014 FFF7FEFF 		bl	dio_ssp_start
 2090              	.LVL192:
ARM GAS  /tmp/ccbDzT8J.s 			page 58


 957:assembly_test.c **** 	cc2400_rx();
 2091              		.loc 1 957 0
 2092 0018 FFF7FEFF 		bl	cc2400_rx
 2093              	.LVL193:
 2094              	.L223:
 958:assembly_test.c **** 
 959:assembly_test.c **** 	while (rx_pkts) {
 2095              		.loc 1 959 0 discriminator 1
 2096 001c 234C     		ldr	r4, .L244+4
 2097 001e 2368     		ldr	r3, [r4]
 2098 0020 002B     		cmp	r3, #0
 2099 0022 3DD0     		beq	.L243
 2100              	.L225:
 960:assembly_test.c **** 		/* wait for DMA transfer */
 961:assembly_test.c **** 		while ((rx_tc == 0) && (rx_err == 0));
 2101              		.loc 1 961 0
 2102 0024 224E     		ldr	r6, .L244+8
 2103 0026 234D     		ldr	r5, .L244+12
 2104 0028 3368     		ldr	r3, [r6]
 2105 002a 13B9     		cbnz	r3, .L224
 2106              		.loc 1 961 0 is_stmt 0 discriminator 2
 2107 002c 2B68     		ldr	r3, [r5]
 2108 002e 002B     		cmp	r3, #0
 2109 0030 F8D0     		beq	.L225
 2110              	.L224:
 962:assembly_test.c **** 		if (rx_tc % 2) {
 2111              		.loc 1 962 0 is_stmt 1
 2112 0032 3368     		ldr	r3, [r6]
 2113 0034 DA07     		lsls	r2, r3, #31
 2114 0036 04D5     		bpl	.L226
 963:assembly_test.c **** 			/* swap buffers */
 964:assembly_test.c **** 			tmp = active_rxbuf;
 2115              		.loc 1 964 0
 2116 0038 1F4B     		ldr	r3, .L244+16
 2117 003a 9968     		ldr	r1, [r3, #8]
 2118              	.LVL194:
 965:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 2119              		.loc 1 965 0
 2120 003c DA68     		ldr	r2, [r3, #12]
 966:assembly_test.c **** 			idle_rxbuf = tmp;
 2121              		.loc 1 966 0
 2122 003e D960     		str	r1, [r3, #12]
 965:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 2123              		.loc 1 965 0
 2124 0040 9A60     		str	r2, [r3, #8]
 2125              	.LVL195:
 2126              	.L226:
 967:assembly_test.c **** 		}
 968:assembly_test.c **** 		if (rx_err)
 2127              		.loc 1 968 0
 2128 0042 2B68     		ldr	r3, [r5]
 2129 0044 1BB1     		cbz	r3, .L227
 969:assembly_test.c **** 			status |= DMA_ERROR;
 2130              		.loc 1 969 0
 2131 0046 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2132 0048 43F00203 		orr	r3, r3, #2
 2133 004c 2375     		strb	r3, [r4, #20]
ARM GAS  /tmp/ccbDzT8J.s 			page 59


 2134              	.L227:
 970:assembly_test.c **** 		if (rx_tc) {
 2135              		.loc 1 970 0
 2136 004e 3368     		ldr	r3, [r6]
 2137 0050 A3B1     		cbz	r3, .L228
 971:assembly_test.c **** 			if (rx_tc > 1)
 2138              		.loc 1 971 0
 2139 0052 174B     		ldr	r3, .L244+8
 2140 0054 1B68     		ldr	r3, [r3]
 2141 0056 012B     		cmp	r3, #1
 2142 0058 03D9     		bls	.L229
 972:assembly_test.c **** 				status |= DMA_OVERFLOW;
 2143              		.loc 1 972 0
 2144 005a 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2145 005c 43F00103 		orr	r3, r3, #1
 2146 0060 2375     		strb	r3, [r4, #20]
 2147              	.L229:
 973:assembly_test.c **** 			if (enqueue(idle_rxbuf))
 2148              		.loc 1 973 0
 2149 0062 154B     		ldr	r3, .L244+16
 2150 0064 D868     		ldr	r0, [r3, #12]
 2151 0066 FFF7FEFF 		bl	enqueue
 2152              	.LVL196:
 2153 006a 18B1     		cbz	r0, .L230
 974:assembly_test.c **** 				--rx_pkts;
 2154              		.loc 1 974 0
 2155 006c 2368     		ldr	r3, [r4]
 2156 006e 013B     		subs	r3, r3, #1
 2157 0070 2360     		str	r3, [r4]
 2158 0072 03E0     		b	.L228
 2159              	.L230:
 975:assembly_test.c **** 			else
 976:assembly_test.c **** 				status |= FIFO_OVERFLOW;
 2160              		.loc 1 976 0
 2161 0074 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 2162 0076 43F00403 		orr	r3, r3, #4
 2163 007a 2375     		strb	r3, [r4, #20]
 2164              	.L228:
 977:assembly_test.c **** 		}
 978:assembly_test.c **** 
 979:assembly_test.c **** 		/* send via USB */
 980:assembly_test.c **** 		epstat = USBHwEPGetStatus(BULK_IN_EP);
 2165              		.loc 1 980 0
 2166 007c 8220     		movs	r0, #130
 2167 007e FFF7FEFF 		bl	USBHwEPGetStatus
 2168              	.LVL197:
 981:assembly_test.c **** 		if (!(epstat & EPSTAT_B1FULL))
 2169              		.loc 1 981 0
 2170 0082 8306     		lsls	r3, r0, #26
 980:assembly_test.c **** 		if (!(epstat & EPSTAT_B1FULL))
 2171              		.loc 1 980 0
 2172 0084 0446     		mov	r4, r0
 2173              	.LVL198:
 2174              		.loc 1 981 0
 2175 0086 01D4     		bmi	.L231
 982:assembly_test.c **** 			dequeue();
 2176              		.loc 1 982 0
ARM GAS  /tmp/ccbDzT8J.s 			page 60


 2177 0088 FFF7FEFF 		bl	dequeue
 2178              	.LVL199:
 2179              	.L231:
 983:assembly_test.c **** 		if (!(epstat & EPSTAT_B2FULL))
 2180              		.loc 1 983 0
 2181 008c 6006     		lsls	r0, r4, #25
 2182 008e 01D4     		bmi	.L232
 984:assembly_test.c **** 			dequeue();
 2183              		.loc 1 984 0
 2184 0090 FFF7FEFF 		bl	dequeue
 2185              	.LVL200:
 2186              	.L232:
 985:assembly_test.c **** 		USBHwISR();
 2187              		.loc 1 985 0
 2188 0094 FFF7FEFF 		bl	USBHwISR
 2189              	.LVL201:
 986:assembly_test.c **** 
 987:assembly_test.c **** 		rx_tc = 0;
 2190              		.loc 1 987 0
 2191 0098 0023     		movs	r3, #0
 2192 009a 3360     		str	r3, [r6]
 988:assembly_test.c **** 		rx_err = 0;
 2193              		.loc 1 988 0
 2194 009c 2B60     		str	r3, [r5]
 2195 009e BDE7     		b	.L223
 2196              	.LVL202:
 2197              	.L243:
 989:assembly_test.c **** 	}
 990:assembly_test.c **** 	//FIXME turn off rx
 991:assembly_test.c **** 	RXLED_CLR;
 2198              		.loc 1 991 0
 2199 00a0 064B     		ldr	r3, .L244+20
 2200 00a2 1022     		movs	r2, #16
 2201 00a4 1A60     		str	r2, [r3]
 2202 00a6 70BD     		pop	{r4, r5, r6, pc}
 2203              	.L245:
 2204              		.align	2
 2205              	.L244:
 2206 00a8 38C00920 		.word	537509944
 2207 00ac 00000000 		.word	.LANCHOR0
 2208 00b0 00000000 		.word	rx_tc
 2209 00b4 00000000 		.word	rx_err
 2210 00b8 00000000 		.word	.LANCHOR1
 2211 00bc 3CC00920 		.word	537509948
 2212              		.cfi_endproc
 2213              	.LFE16:
 2215              		.section	.text.specan,"ax",%progbits
 2216              		.align	1
 2217              		.global	specan
 2218              		.thumb
 2219              		.thumb_func
 2221              	specan:
 2222              	.LFB17:
 992:assembly_test.c **** }
 993:assembly_test.c **** 
 994:assembly_test.c **** /* spectrum analysis */
 995:assembly_test.c **** void specan()
ARM GAS  /tmp/ccbDzT8J.s 			page 61


 996:assembly_test.c **** {
 2223              		.loc 1 996 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 56
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2228              		.cfi_def_cfa_offset 20
 2229              		.cfi_offset 4, -20
 2230              		.cfi_offset 5, -16
 2231              		.cfi_offset 6, -12
 2232              		.cfi_offset 7, -8
 2233              		.cfi_offset 14, -4
 2234 0002 8FB0     		sub	sp, sp, #60
 2235              		.cfi_def_cfa_offset 80
 2236              	.LVL203:
 997:assembly_test.c **** 	u8 epstat;
 998:assembly_test.c **** 	u16 f;
 999:assembly_test.c **** 	u8 i = 0;
1000:assembly_test.c **** 	u8 buf[DMA_SIZE];
1001:assembly_test.c **** 
1002:assembly_test.c **** 	RXLED_SET;
 2237              		.loc 1 1002 0
 2238 0004 3E4B     		ldr	r3, .L263
 2239 0006 1022     		movs	r2, #16
 2240 0008 1A60     		str	r2, [r3]
1003:assembly_test.c **** 
1004:assembly_test.c **** 	queue_init();
 2241              		.loc 1 1004 0
 2242 000a FFF7FEFF 		bl	queue_init
 2243              	.LVL204:
1005:assembly_test.c **** 
1006:assembly_test.c **** #ifdef UBERTOOTH_ONE
1007:assembly_test.c **** 	PAEN_SET;
 2244              		.loc 1 1007 0
 2245 000e 3D4B     		ldr	r3, .L263+4
 2246 0010 8022     		movs	r2, #128
 2247 0012 1A60     		str	r2, [r3]
1008:assembly_test.c **** 	//HGM_SET;
1009:assembly_test.c **** #endif
1010:assembly_test.c **** 	cc2400_set(MANAND,  0x7fff);
 2248              		.loc 1 1010 0
 2249 0014 0D20     		movs	r0, #13
 2250 0016 47F6FF71 		movw	r1, #32767
 2251 001a FFF7FEFF 		bl	cc2400_set
 2252              	.LVL205:
1011:assembly_test.c **** 	cc2400_set(LMTST,   0x2b22);
 2253              		.loc 1 1011 0
 2254 001e 1220     		movs	r0, #18
 2255 0020 42F62231 		movw	r1, #11042
 2256 0024 FFF7FEFF 		bl	cc2400_set
 2257              	.LVL206:
1012:assembly_test.c **** 	cc2400_set(MDMTST0, 0x134b); // without PRNG
 2258              		.loc 1 1012 0
 2259 0028 1420     		movs	r0, #20
 2260 002a 41F24B31 		movw	r1, #4939
 2261 002e FFF7FEFF 		bl	cc2400_set
 2262              	.LVL207:
ARM GAS  /tmp/ccbDzT8J.s 			page 62


1013:assembly_test.c **** 	cc2400_set(GRMDM,   0x0101); // un-buffered mode, GFSK
 2263              		.loc 1 1013 0
 2264 0032 2020     		movs	r0, #32
 2265 0034 40F20111 		movw	r1, #257
 2266 0038 FFF7FEFF 		bl	cc2400_set
 2267              	.LVL208:
1014:assembly_test.c **** 	cc2400_set(MDMCTRL, 0x0029); // 160 kHz frequency deviation
 2268              		.loc 1 1014 0
 2269 003c 0320     		movs	r0, #3
 2270 003e 2921     		movs	r1, #41
 2271 0040 FFF7FEFF 		bl	cc2400_set
 2272              	.LVL209:
 2273              	.L248:
1015:assembly_test.c **** 	//FIXME maybe set RSSI.RSSI_FILT
1016:assembly_test.c **** 	while (!(cc2400_status() & XOSC16M_STABLE));
 2274              		.loc 1 1016 0 discriminator 1
 2275 0044 FFF7FEFF 		bl	cc2400_status
 2276              	.LVL210:
 2277 0048 4206     		lsls	r2, r0, #25
 2278 004a FBD5     		bpl	.L248
 2279              	.L250:
1017:assembly_test.c **** 	while ((cc2400_status() & FS_LOCK));
 2280              		.loc 1 1017 0
 2281 004c FFF7FEFF 		bl	cc2400_status
 2282              	.LVL211:
 2283 0050 00F00400 		and	r0, r0, #4
 2284 0054 00F0FF05 		and	r5, r0, #255
 2285 0058 0028     		cmp	r0, #0
 2286 005a F7D1     		bne	.L250
 2287              	.LVL212:
 2288              	.L251:
1018:assembly_test.c **** 
1019:assembly_test.c **** 	while (requested_mode == MODE_SPECAN) {
 2289              		.loc 1 1019 0 discriminator 1
 2290 005c 2A4B     		ldr	r3, .L263+8
 2291 005e 5A68     		ldr	r2, [r3, #4]
 2292 0060 042A     		cmp	r2, #4
 2293 0062 45D1     		bne	.L262
1020:assembly_test.c **** 		for (f = low_freq; f < high_freq + 1; f++) {
 2294              		.loc 1 1020 0
 2295 0064 294B     		ldr	r3, .L263+12
 2296 0066 5C88     		ldrh	r4, [r3, #2]
 2297 0068 1F46     		mov	r7, r3
 2298 006a A4B2     		uxth	r4, r4
 2299              	.LVL213:
 2300              	.L252:
 2301              		.loc 1 1020 0 is_stmt 0 discriminator 1
 2302 006c BB88     		ldrh	r3, [r7, #4]
 2303 006e 9BB2     		uxth	r3, r3
 2304 0070 A342     		cmp	r3, r4
 2305 0072 F3DB     		blt	.L251
 2306 0074 611E     		subs	r1, r4, #1
1021:assembly_test.c **** 			cc2400_set(FSDIV, f - 1);
 2307              		.loc 1 1021 0 is_stmt 1
 2308 0076 0220     		movs	r0, #2
 2309 0078 89B2     		uxth	r1, r1
 2310 007a FFF7FEFF 		bl	cc2400_set
ARM GAS  /tmp/ccbDzT8J.s 			page 63


 2311              	.LVL214:
1022:assembly_test.c **** 			cc2400_strobe(SFSON);
 2312              		.loc 1 1022 0
 2313 007e 6120     		movs	r0, #97
 2314 0080 FFF7FEFF 		bl	cc2400_strobe
 2315              	.LVL215:
 2316              	.L254:
1023:assembly_test.c **** 			while (!(cc2400_status() & FS_LOCK));
 2317              		.loc 1 1023 0 discriminator 1
 2318 0084 FFF7FEFF 		bl	cc2400_status
 2319              	.LVL216:
 2320 0088 4307     		lsls	r3, r0, #29
 2321 008a FBD5     		bpl	.L254
1024:assembly_test.c **** 			cc2400_strobe(SRX);
 2322              		.loc 1 1024 0
 2323 008c 6220     		movs	r0, #98
 2324 008e FFF7FEFF 		bl	cc2400_strobe
 2325              	.LVL217:
1025:assembly_test.c **** 
1026:assembly_test.c **** 			//u32 j = 100; while (--j); //FIXME crude delay
1027:assembly_test.c **** 			buf[3 * i] = (f >> 8) & 0xFF;
 2326              		.loc 1 1027 0
 2327 0092 0326     		movs	r6, #3
 2328 0094 0EAB     		add	r3, sp, #56
 2329 0096 06FB0536 		mla	r6, r6, r5, r3
1028:assembly_test.c **** 			buf[(3 * i) + 1] = f  & 0xFF;
1029:assembly_test.c **** 			buf[(3 * i) + 2] = cc2400_get(RSSI) >> 8;
 2330              		.loc 1 1029 0
 2331 009a 0620     		movs	r0, #6
1027:assembly_test.c **** 			buf[(3 * i) + 1] = f  & 0xFF;
 2332              		.loc 1 1027 0
 2333 009c 230A     		lsrs	r3, r4, #8
 2334 009e 06F8343C 		strb	r3, [r6, #-52]
1028:assembly_test.c **** 			buf[(3 * i) + 1] = f  & 0xFF;
 2335              		.loc 1 1028 0
 2336 00a2 06F8334C 		strb	r4, [r6, #-51]
 2337              		.loc 1 1029 0
 2338 00a6 FFF7FEFF 		bl	cc2400_get
 2339              	.LVL218:
1030:assembly_test.c **** 			i++;
 2340              		.loc 1 1030 0
 2341 00aa 0135     		adds	r5, r5, #1
 2342              	.LVL219:
 2343 00ac EDB2     		uxtb	r5, r5
 2344              	.LVL220:
1029:assembly_test.c **** 			i++;
 2345              		.loc 1 1029 0
 2346 00ae 000A     		lsrs	r0, r0, #8
1031:assembly_test.c **** 			if (i == 16) {
 2347              		.loc 1 1031 0
 2348 00b0 102D     		cmp	r5, #16
1029:assembly_test.c **** 			i++;
 2349              		.loc 1 1029 0
 2350 00b2 06F8320C 		strb	r0, [r6, #-50]
 2351              		.loc 1 1031 0
 2352 00b6 11D1     		bne	.L255
1032:assembly_test.c **** 				//FIXME ought to use different packet type
ARM GAS  /tmp/ccbDzT8J.s 			page 64


1033:assembly_test.c **** 				enqueue(buf);
 2353              		.loc 1 1033 0
 2354 00b8 01A8     		add	r0, sp, #4
 2355 00ba FFF7FEFF 		bl	enqueue
 2356              	.LVL221:
1034:assembly_test.c **** 				i = 0;
1035:assembly_test.c **** 				/* send via USB */
1036:assembly_test.c **** 				epstat = USBHwEPGetStatus(BULK_IN_EP);
 2357              		.loc 1 1036 0
 2358 00be 8220     		movs	r0, #130
 2359 00c0 FFF7FEFF 		bl	USBHwEPGetStatus
 2360              	.LVL222:
1037:assembly_test.c **** 				if (!(epstat & EPSTAT_B1FULL))
 2361              		.loc 1 1037 0
 2362 00c4 8606     		lsls	r6, r0, #26
1036:assembly_test.c **** 				if (!(epstat & EPSTAT_B1FULL))
 2363              		.loc 1 1036 0
 2364 00c6 0546     		mov	r5, r0
 2365              	.LVL223:
 2366              		.loc 1 1037 0
 2367 00c8 01D4     		bmi	.L256
1038:assembly_test.c **** 					dequeue();
 2368              		.loc 1 1038 0
 2369 00ca FFF7FEFF 		bl	dequeue
 2370              	.LVL224:
 2371              	.L256:
1039:assembly_test.c **** 				if (!(epstat & EPSTAT_B2FULL))
 2372              		.loc 1 1039 0
 2373 00ce 6806     		lsls	r0, r5, #25
 2374 00d0 01D4     		bmi	.L257
1040:assembly_test.c **** 					dequeue();
 2375              		.loc 1 1040 0
 2376 00d2 FFF7FEFF 		bl	dequeue
 2377              	.LVL225:
 2378              	.L257:
1041:assembly_test.c **** 				USBHwISR();
 2379              		.loc 1 1041 0
 2380 00d6 FFF7FEFF 		bl	USBHwISR
 2381              	.LVL226:
1034:assembly_test.c **** 				/* send via USB */
 2382              		.loc 1 1034 0
 2383 00da 0025     		movs	r5, #0
 2384              	.LVL227:
 2385              	.L255:
1042:assembly_test.c **** 			}
1043:assembly_test.c **** 
1044:assembly_test.c **** 			cc2400_strobe(SRFOFF);
 2386              		.loc 1 1044 0
 2387 00dc 6420     		movs	r0, #100
 2388 00de FFF7FEFF 		bl	cc2400_strobe
 2389              	.LVL228:
 2390              	.L259:
1045:assembly_test.c **** 			while ((cc2400_status() & FS_LOCK));
 2391              		.loc 1 1045 0 discriminator 1
 2392 00e2 FFF7FEFF 		bl	cc2400_status
 2393              	.LVL229:
 2394 00e6 4107     		lsls	r1, r0, #29
ARM GAS  /tmp/ccbDzT8J.s 			page 65


 2395 00e8 FBD4     		bmi	.L259
1020:assembly_test.c **** 			cc2400_set(FSDIV, f - 1);
 2396              		.loc 1 1020 0
 2397 00ea 0134     		adds	r4, r4, #1
 2398              	.LVL230:
 2399 00ec A4B2     		uxth	r4, r4
 2400              	.LVL231:
 2401 00ee BDE7     		b	.L252
 2402              	.LVL232:
 2403              	.L262:
1046:assembly_test.c **** 		}
1047:assembly_test.c **** 	}
1048:assembly_test.c **** 	mode = MODE_IDLE;
 2404              		.loc 1 1048 0
 2405 00f0 0022     		movs	r2, #0
 2406 00f2 9A62     		str	r2, [r3, #40]
1049:assembly_test.c **** 	RXLED_CLR;
 2407              		.loc 1 1049 0
 2408 00f4 064B     		ldr	r3, .L263+16
 2409 00f6 1022     		movs	r2, #16
 2410 00f8 1A60     		str	r2, [r3]
1050:assembly_test.c **** }
 2411              		.loc 1 1050 0
 2412 00fa 0FB0     		add	sp, sp, #60
 2413              		@ sp needed
 2414 00fc F0BD     		pop	{r4, r5, r6, r7, pc}
 2415              	.LVL233:
 2416              	.L264:
 2417 00fe 00BF     		.align	2
 2418              	.L263:
 2419 0100 38C00920 		.word	537509944
 2420 0104 58C00920 		.word	537509976
 2421 0108 00000000 		.word	.LANCHOR0
 2422 010c 00000000 		.word	.LANCHOR1
 2423 0110 3CC00920 		.word	537509948
 2424              		.cfi_endproc
 2425              	.LFE17:
 2427              		.section	.text.find_giac,"ax",%progbits
 2428              		.align	1
 2429              		.global	find_giac
 2430              		.thumb
 2431              		.thumb_func
 2433              	find_giac:
 2434              	.LFB18:
1051:assembly_test.c **** 
1052:assembly_test.c **** /* an ugly but effective way to identify a GIAC (inquiry packet) */
1053:assembly_test.c **** int find_giac(u8 *buf)
1054:assembly_test.c **** {
 2435              		.loc 1 1054 0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 56
 2438              		@ frame_needed = 0, uses_anonymous_args = 0
 2439              	.LVL234:
 2440 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2441              		.cfi_def_cfa_offset 20
 2442              		.cfi_offset 4, -20
 2443              		.cfi_offset 5, -16
ARM GAS  /tmp/ccbDzT8J.s 			page 66


 2444              		.cfi_offset 6, -12
 2445              		.cfi_offset 7, -8
 2446              		.cfi_offset 14, -4
 2447 0002 8FB0     		sub	sp, sp, #60
 2448              		.cfi_def_cfa_offset 80
1055:assembly_test.c **** 	int i, j;
1056:assembly_test.c **** 	const uint8_t giac[8][7] = {
 2449              		.loc 1 1056 0
 2450 0004 1B4B     		ldr	r3, .L276
1054:assembly_test.c **** 	int i, j;
 2451              		.loc 1 1054 0
 2452 0006 0546     		mov	r5, r0
 2453              		.loc 1 1056 0
 2454 0008 6A46     		mov	r2, sp
 2455 000a 03F13807 		add	r7, r3, #56
 2456              	.LVL235:
 2457              	.L266:
 2458 000e 1868     		ldr	r0, [r3]	@ unaligned
 2459 0010 5968     		ldr	r1, [r3, #4]	@ unaligned
 2460 0012 1446     		mov	r4, r2
 2461 0014 03C4     		stmia	r4!, {r0, r1}
 2462 0016 0833     		adds	r3, r3, #8
 2463 0018 BB42     		cmp	r3, r7
 2464 001a 2246     		mov	r2, r4
 2465 001c F7D1     		bne	.L266
 2466              	.LVL236:
 2467 001e 6A1E     		subs	r2, r5, #1
 2468 0020 2B35     		adds	r5, r5, #43
 2469              	.LVL237:
 2470              	.L267:
1057:assembly_test.c **** 			{0x47, 0x5c, 0x58, 0xcc, 0x73, 0x34, 0x5e},
1058:assembly_test.c **** 			{0x8e, 0xb8, 0xb1, 0x98, 0xe6, 0x68, 0xbc},
1059:assembly_test.c **** 			{0x11, 0xd7, 0x16, 0x33, 0x1c, 0xcd, 0x17},
1060:assembly_test.c **** 			{0x23, 0xae, 0x2c, 0x66, 0x39, 0x9a, 0x2f},
1061:assembly_test.c **** 			{0x75, 0xc5, 0x8c, 0xc7, 0x33, 0x45, 0xe7},
1062:assembly_test.c **** 			{0xeb, 0x8b, 0x19, 0x8e, 0x66, 0x8b, 0xce},
1063:assembly_test.c **** 			{0x1d, 0x71, 0x63, 0x31, 0xcc, 0xd1, 0x79},
1064:assembly_test.c **** 			{0x3a, 0xe2, 0xc6, 0x63, 0x99, 0xa2, 0xf3}};
1065:assembly_test.c **** 
1066:assembly_test.c ****     for (i = 0; i < (DMA_SIZE - 6); i++)
1067:assembly_test.c **** 			for (j = 0; j < 8; j++)
1068:assembly_test.c **** 	        	if (buf[i] == giac[j][0]
 2471              		.loc 1 1068 0 discriminator 1
 2472 0022 12F8010F 		ldrb	r0, [r2, #1]!	@ zero_extendqisi2
 2473              	.LVL238:
 2474 0026 6B46     		mov	r3, sp
 2475 0028 0EA9     		add	r1, sp, #56
 2476              	.LVL239:
 2477              	.L271:
 2478              		.loc 1 1068 0 is_stmt 0
 2479 002a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 2480 002c 8442     		cmp	r4, r0
 2481 002e 17D1     		bne	.L268
1069:assembly_test.c **** 						&& buf[i + 1] == giac[j][1]
 2482              		.loc 1 1069 0 is_stmt 1
 2483 0030 5778     		ldrb	r7, [r2, #1]	@ zero_extendqisi2
 2484 0032 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccbDzT8J.s 			page 67


 2485 0034 A742     		cmp	r7, r4
 2486 0036 13D1     		bne	.L268
1070:assembly_test.c **** 						&& buf[i + 2] == giac[j][2]
 2487              		.loc 1 1070 0
 2488 0038 9778     		ldrb	r7, [r2, #2]	@ zero_extendqisi2
 2489 003a 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 2490 003c A742     		cmp	r7, r4
 2491 003e 0FD1     		bne	.L268
1071:assembly_test.c **** 						&& buf[i + 3] == giac[j][3]
 2492              		.loc 1 1071 0
 2493 0040 D778     		ldrb	r7, [r2, #3]	@ zero_extendqisi2
 2494 0042 DC78     		ldrb	r4, [r3, #3]	@ zero_extendqisi2
 2495 0044 A742     		cmp	r7, r4
 2496 0046 0BD1     		bne	.L268
1072:assembly_test.c **** 						&& buf[i + 4] == giac[j][4]
 2497              		.loc 1 1072 0
 2498 0048 1779     		ldrb	r7, [r2, #4]	@ zero_extendqisi2
 2499 004a 1C79     		ldrb	r4, [r3, #4]	@ zero_extendqisi2
 2500 004c A742     		cmp	r7, r4
 2501 004e 07D1     		bne	.L268
1073:assembly_test.c **** 						&& buf[i + 5] == giac[j][5]
 2502              		.loc 1 1073 0
 2503 0050 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
 2504 0052 5C79     		ldrb	r4, [r3, #5]	@ zero_extendqisi2
 2505 0054 A742     		cmp	r7, r4
 2506 0056 03D1     		bne	.L268
1074:assembly_test.c **** 						&& buf[i + 6] == giac[j][6])
 2507              		.loc 1 1074 0
 2508 0058 9779     		ldrb	r7, [r2, #6]	@ zero_extendqisi2
 2509 005a 9C79     		ldrb	r4, [r3, #6]	@ zero_extendqisi2
 2510 005c A742     		cmp	r7, r4
 2511 005e 06D0     		beq	.L272
 2512              	.L268:
 2513 0060 0733     		adds	r3, r3, #7
1067:assembly_test.c **** 	        	if (buf[i] == giac[j][0]
 2514              		.loc 1 1067 0
 2515 0062 8B42     		cmp	r3, r1
 2516 0064 E1D1     		bne	.L271
 2517              	.LVL240:
1066:assembly_test.c **** 			for (j = 0; j < 8; j++)
 2518              		.loc 1 1066 0
 2519 0066 AA42     		cmp	r2, r5
 2520 0068 DBD1     		bne	.L267
1075:assembly_test.c **** 					return 1;
1076:assembly_test.c **** 
1077:assembly_test.c **** 	return 0;
 2521              		.loc 1 1077 0
 2522 006a 0020     		movs	r0, #0
 2523 006c 00E0     		b	.L269
 2524              	.LVL241:
 2525              	.L272:
1075:assembly_test.c **** 					return 1;
 2526              		.loc 1 1075 0
 2527 006e 0120     		movs	r0, #1
 2528              	.LVL242:
 2529              	.L269:
1078:assembly_test.c **** }
ARM GAS  /tmp/ccbDzT8J.s 			page 68


 2530              		.loc 1 1078 0
 2531 0070 0FB0     		add	sp, sp, #60
 2532              		@ sp needed
 2533 0072 F0BD     		pop	{r4, r5, r6, r7, pc}
 2534              	.LVL243:
 2535              	.L277:
 2536              		.align	2
 2537              	.L276:
 2538 0074 BD000000 		.word	.LANCHOR2+189
 2539              		.cfi_endproc
 2540              	.LFE18:
 2542              		.section	.text.bt_test_rx,"ax",%progbits
 2543              		.align	1
 2544              		.global	bt_test_rx
 2545              		.thumb
 2546              		.thumb_func
 2548              	bt_test_rx:
 2549              	.LFB19:
1079:assembly_test.c **** 
1080:assembly_test.c **** void bt_test_rx()
1081:assembly_test.c **** {
 2550              		.loc 1 1081 0
 2551              		.cfi_startproc
 2552              		@ args = 0, pretend = 0, frame = 0
 2553              		@ frame_needed = 0, uses_anonymous_args = 0
 2554 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2555              		.cfi_def_cfa_offset 24
 2556              		.cfi_offset 3, -24
 2557              		.cfi_offset 4, -20
 2558              		.cfi_offset 5, -16
 2559              		.cfi_offset 6, -12
 2560              		.cfi_offset 7, -8
 2561              		.cfi_offset 14, -4
 2562              	.LVL244:
1082:assembly_test.c **** 	u8 *tmp = NULL;
1083:assembly_test.c **** 	int i;
1084:assembly_test.c **** 	int countdown = 0;
1085:assembly_test.c **** 	int num_giacs = 0;
1086:assembly_test.c **** 
1087:assembly_test.c **** 	dio_ssp_init();
 2563              		.loc 1 1087 0
 2564 0002 FFF7FEFF 		bl	dio_ssp_init
 2565              	.LVL245:
1088:assembly_test.c **** 	dma_init();
 2566              		.loc 1 1088 0
 2567 0006 FFF7FEFF 		bl	dma_init
 2568              	.LVL246:
1089:assembly_test.c **** 	dio_ssp_start();
 2569              		.loc 1 1089 0
 2570 000a FFF7FEFF 		bl	dio_ssp_start
 2571              	.LVL247:
1090:assembly_test.c **** 	cc2400_rx();
 2572              		.loc 1 1090 0
 2573 000e FFF7FEFF 		bl	cc2400_rx
 2574              	.LVL248:
1085:assembly_test.c **** 
 2575              		.loc 1 1085 0
ARM GAS  /tmp/ccbDzT8J.s 			page 69


 2576 0012 0024     		movs	r4, #0
1084:assembly_test.c **** 	int num_giacs = 0;
 2577              		.loc 1 1084 0
 2578 0014 2546     		mov	r5, r4
 2579              	.LVL249:
 2580              	.L279:
1091:assembly_test.c **** 
1092:assembly_test.c **** 	while (num_giacs < 20) {
1093:assembly_test.c **** 		/* wait for DMA transfer */
1094:assembly_test.c **** 		while ((rx_tc == 0) && (rx_err == 0));
 2581              		.loc 1 1094 0 discriminator 1
 2582 0016 1B4E     		ldr	r6, .L300
 2583 0018 1B4F     		ldr	r7, .L300+4
 2584 001a 3368     		ldr	r3, [r6]
 2585 001c 13B9     		cbnz	r3, .L280
 2586              		.loc 1 1094 0 is_stmt 0 discriminator 2
 2587 001e 3B68     		ldr	r3, [r7]
 2588 0020 002B     		cmp	r3, #0
 2589 0022 F8D0     		beq	.L279
 2590              	.L280:
1095:assembly_test.c **** 		if (rx_tc % 2) {
 2591              		.loc 1 1095 0 is_stmt 1
 2592 0024 3368     		ldr	r3, [r6]
 2593 0026 D907     		lsls	r1, r3, #31
 2594 0028 04D5     		bpl	.L282
1096:assembly_test.c **** 			/* swap buffers */
1097:assembly_test.c **** 			tmp = active_rxbuf;
 2595              		.loc 1 1097 0
 2596 002a 184B     		ldr	r3, .L300+8
 2597 002c 9968     		ldr	r1, [r3, #8]
 2598              	.LVL250:
1098:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 2599              		.loc 1 1098 0
 2600 002e DA68     		ldr	r2, [r3, #12]
1099:assembly_test.c **** 			idle_rxbuf = tmp;
 2601              		.loc 1 1099 0
 2602 0030 D960     		str	r1, [r3, #12]
1098:assembly_test.c **** 			active_rxbuf = idle_rxbuf;
 2603              		.loc 1 1098 0
 2604 0032 9A60     		str	r2, [r3, #8]
 2605              	.LVL251:
 2606              	.L282:
1100:assembly_test.c **** 		}
1101:assembly_test.c **** 		if (rx_err)
 2607              		.loc 1 1101 0
 2608 0034 3B68     		ldr	r3, [r7]
 2609 0036 13B1     		cbz	r3, .L283
1102:assembly_test.c **** 			RXLED_CLR;
 2610              		.loc 1 1102 0
 2611 0038 154B     		ldr	r3, .L300+12
 2612 003a 1022     		movs	r2, #16
 2613 003c 1A60     		str	r2, [r3]
 2614              	.L283:
1103:assembly_test.c **** 		if (rx_tc) {
 2615              		.loc 1 1103 0
 2616 003e 3368     		ldr	r3, [r6]
 2617 0040 CBB1     		cbz	r3, .L284
ARM GAS  /tmp/ccbDzT8J.s 			page 70


1104:assembly_test.c **** 			if (rx_tc > 1)
 2618              		.loc 1 1104 0
 2619 0042 104B     		ldr	r3, .L300
 2620 0044 1B68     		ldr	r3, [r3]
 2621 0046 012B     		cmp	r3, #1
 2622 0048 03D9     		bls	.L285
1105:assembly_test.c **** 				TXLED_CLR;
 2623              		.loc 1 1105 0
 2624 004a 114B     		ldr	r3, .L300+12
 2625 004c 4FF48072 		mov	r2, #256
 2626 0050 1A60     		str	r2, [r3]
 2627              	.L285:
1106:assembly_test.c **** 			if (find_giac(idle_rxbuf)) {
 2628              		.loc 1 1106 0
 2629 0052 0E4B     		ldr	r3, .L300+8
 2630 0054 D868     		ldr	r0, [r3, #12]
 2631 0056 FFF7FEFF 		bl	find_giac
 2632              	.LVL252:
 2633 005a 28B1     		cbz	r0, .L286
1107:assembly_test.c **** 				USRLED_SET;
 2634              		.loc 1 1107 0
 2635 005c 0D4B     		ldr	r3, .L300+16
 2636 005e 0222     		movs	r2, #2
 2637 0060 1A60     		str	r2, [r3]
 2638              	.LVL253:
1108:assembly_test.c **** 				countdown = 100;
1109:assembly_test.c **** 				num_giacs++;
 2639              		.loc 1 1109 0
 2640 0062 0134     		adds	r4, r4, #1
 2641              	.LVL254:
1108:assembly_test.c **** 				countdown = 100;
 2642              		.loc 1 1108 0
 2643 0064 6425     		movs	r5, #100
 2644 0066 06E0     		b	.L284
 2645              	.LVL255:
 2646              	.L286:
1110:assembly_test.c **** 			} else {
1111:assembly_test.c **** 				if (countdown == 0) {
 2647              		.loc 1 1111 0
 2648 0068 25B9     		cbnz	r5, .L287
1112:assembly_test.c **** 					/* win if more than 32 GIACs seen during this countdown */
1113:assembly_test.c **** 					//if (num_giacs > 32)
1114:assembly_test.c **** 						//break;
1115:assembly_test.c **** 					USRLED_CLR;
 2649              		.loc 1 1115 0
 2650 006a 094B     		ldr	r3, .L300+12
 2651 006c 0222     		movs	r2, #2
 2652 006e 1A60     		str	r2, [r3]
 2653              	.LVL256:
1116:assembly_test.c **** 					num_giacs = 0;
 2654              		.loc 1 1116 0
 2655 0070 2C46     		mov	r4, r5
 2656 0072 00E0     		b	.L284
 2657              	.LVL257:
 2658              	.L287:
1117:assembly_test.c **** 				} else {
1118:assembly_test.c **** 					--countdown;
ARM GAS  /tmp/ccbDzT8J.s 			page 71


 2659              		.loc 1 1118 0
 2660 0074 013D     		subs	r5, r5, #1
 2661              	.LVL258:
 2662              	.L284:
1119:assembly_test.c **** 				}
1120:assembly_test.c **** 			}
1121:assembly_test.c **** 		}
1122:assembly_test.c **** 
1123:assembly_test.c **** 		rx_tc = 0;
 2663              		.loc 1 1123 0
 2664 0076 0023     		movs	r3, #0
1092:assembly_test.c **** 		/* wait for DMA transfer */
 2665              		.loc 1 1092 0
 2666 0078 132C     		cmp	r4, #19
 2667              		.loc 1 1123 0
 2668 007a 3360     		str	r3, [r6]
1124:assembly_test.c **** 		rx_err = 0;
 2669              		.loc 1 1124 0
 2670 007c 3B60     		str	r3, [r7]
1092:assembly_test.c **** 		/* wait for DMA transfer */
 2671              		.loc 1 1092 0
 2672 007e CADD     		ble	.L279
1125:assembly_test.c **** 	}
1126:assembly_test.c **** 	//FIXME turn off rx
1127:assembly_test.c **** }
 2673              		.loc 1 1127 0
 2674 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2675              	.LVL259:
 2676              	.L301:
 2677 0082 00BF     		.align	2
 2678              	.L300:
 2679 0084 00000000 		.word	rx_tc
 2680 0088 00000000 		.word	rx_err
 2681 008c 00000000 		.word	.LANCHOR1
 2682 0090 3CC00920 		.word	537509948
 2683 0094 38C00920 		.word	537509944
 2684              		.cfi_endproc
 2685              	.LFE19:
 2687              		.section	.text.waitms,"ax",%progbits
 2688              		.align	1
 2689              		.global	waitms
 2690              		.thumb
 2691              		.thumb_func
 2693              	waitms:
 2694              	.LFB20:
1128:assembly_test.c **** 
1129:assembly_test.c **** /* delay a number of milliseconds while on internal oscillator (4 MHz) */
1130:assembly_test.c **** void waitms(u8 ms)
1131:assembly_test.c **** {
 2695              		.loc 1 1131 0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 0
 2698              		@ frame_needed = 0, uses_anonymous_args = 0
 2699              		@ link register save eliminated.
 2700              	.LVL260:
 2701 0000 7047     		bx	lr
 2702              		.cfi_endproc
ARM GAS  /tmp/ccbDzT8J.s 			page 72


 2703              	.LFE20:
 2705              		.section	.text.startup.main,"ax",%progbits
 2706              		.align	1
 2707              		.global	main
 2708              		.thumb
 2709              		.thumb_func
 2711              	main:
 2712              	.LFB21:
1132:assembly_test.c **** 	u32 i = 400 * ms;
1133:assembly_test.c **** 	while (--i);
1134:assembly_test.c **** }
1135:assembly_test.c **** 
1136:assembly_test.c **** int main()
1137:assembly_test.c **** {
 2713              		.loc 1 1137 0
 2714              		.cfi_startproc
 2715              		@ args = 0, pretend = 0, frame = 0
 2716              		@ frame_needed = 0, uses_anonymous_args = 0
 2717              		.loc 1 1137 0
 2718 0000 70B5     		push	{r4, r5, r6, lr}
 2719              		.cfi_def_cfa_offset 16
 2720              		.cfi_offset 4, -16
 2721              		.cfi_offset 5, -12
 2722              		.cfi_offset 6, -8
 2723              		.cfi_offset 14, -4
1138:assembly_test.c **** 	int i;
1139:assembly_test.c **** 
1140:assembly_test.c **** 	gpio_init();
1141:assembly_test.c **** 
1142:assembly_test.c **** 	/* blinky */
1143:assembly_test.c **** 	for (i = 0; i < 2; i++) {
1144:assembly_test.c **** 		TXLED_SET;
 2724              		.loc 1 1144 0
 2725 0002 3D4C     		ldr	r4, .L326
1145:assembly_test.c **** 		RXLED_SET;
1146:assembly_test.c **** 		USRLED_SET;
1147:assembly_test.c **** 		waitms(200);
1148:assembly_test.c **** 		TXLED_CLR;
 2726              		.loc 1 1148 0
 2727 0004 3D4E     		ldr	r6, .L326+4
1140:assembly_test.c **** 
 2728              		.loc 1 1140 0
 2729 0006 FFF7FEFF 		bl	gpio_init
 2730              	.LVL261:
1144:assembly_test.c **** 		RXLED_SET;
 2731              		.loc 1 1144 0
 2732 000a 4FF48075 		mov	r5, #256
1145:assembly_test.c **** 		RXLED_SET;
 2733              		.loc 1 1145 0
 2734 000e 1022     		movs	r2, #16
1146:assembly_test.c **** 		waitms(200);
 2735              		.loc 1 1146 0
 2736 0010 0223     		movs	r3, #2
1144:assembly_test.c **** 		RXLED_SET;
 2737              		.loc 1 1144 0
 2738 0012 2560     		str	r5, [r4]
1145:assembly_test.c **** 		USRLED_SET;
ARM GAS  /tmp/ccbDzT8J.s 			page 73


 2739              		.loc 1 1145 0
 2740 0014 2260     		str	r2, [r4]
1146:assembly_test.c **** 		waitms(200);
 2741              		.loc 1 1146 0
 2742 0016 2360     		str	r3, [r4]
 2743              	.LVL262:
 2744              		.loc 1 1148 0
 2745 0018 3560     		str	r5, [r6]
1149:assembly_test.c **** 		RXLED_CLR;
 2746              		.loc 1 1149 0
 2747 001a 3260     		str	r2, [r6]
1150:assembly_test.c **** 		USRLED_CLR;
 2748              		.loc 1 1150 0
 2749 001c 3360     		str	r3, [r6]
 2750              	.LVL263:
1144:assembly_test.c **** 		RXLED_SET;
 2751              		.loc 1 1144 0
 2752 001e 2560     		str	r5, [r4]
1145:assembly_test.c **** 		USRLED_SET;
 2753              		.loc 1 1145 0
 2754 0020 2260     		str	r2, [r4]
1146:assembly_test.c **** 		waitms(200);
 2755              		.loc 1 1146 0
 2756 0022 2360     		str	r3, [r4]
1148:assembly_test.c **** 		RXLED_CLR;
 2757              		.loc 1 1148 0
 2758 0024 3560     		str	r5, [r6]
1149:assembly_test.c **** 		USRLED_CLR;
 2759              		.loc 1 1149 0
 2760 0026 3260     		str	r2, [r6]
 2761              		.loc 1 1150 0
 2762 0028 3360     		str	r3, [r6]
 2763              	.LVL264:
1151:assembly_test.c **** 		waitms(200);
1152:assembly_test.c **** 	}
1153:assembly_test.c **** 
1154:assembly_test.c **** 	/* cc2400_test */
1155:assembly_test.c **** 	cc2400_init();
 2764              		.loc 1 1155 0
 2765 002a FFF7FEFF 		bl	cc2400_init
 2766              	.LVL265:
1156:assembly_test.c **** 	TXLED_SET;
 2767              		.loc 1 1156 0
 2768 002e 2560     		str	r5, [r4]
 2769              	.LVL266:
1157:assembly_test.c **** 	waitms(200);
1158:assembly_test.c **** 	TXLED_CLR;
 2770              		.loc 1 1158 0
 2771 0030 3560     		str	r5, [r6]
 2772              	.LVL267:
1159:assembly_test.c **** 	waitms(200);
1160:assembly_test.c **** 	cc2400_reset();
 2773              		.loc 1 1160 0
 2774 0032 FFF7FEFF 		bl	cc2400_reset
 2775              	.LVL268:
1161:assembly_test.c **** 	TXLED_SET;
 2776              		.loc 1 1161 0
ARM GAS  /tmp/ccbDzT8J.s 			page 74


 2777 0036 2560     		str	r5, [r4]
 2778              	.LVL269:
1162:assembly_test.c **** 	waitms(200);
1163:assembly_test.c **** 	TXLED_CLR;
1164:assembly_test.c **** 	waitms(200);
1165:assembly_test.c **** 	if (cc2400_get(AGCCTRL) != 0xf700)
 2779              		.loc 1 1165 0
 2780 0038 0420     		movs	r0, #4
1163:assembly_test.c **** 	waitms(200);
 2781              		.loc 1 1163 0
 2782 003a 3560     		str	r5, [r6]
 2783              	.LVL270:
 2784              		.loc 1 1165 0
 2785 003c FFF7FEFF 		bl	cc2400_get
 2786              	.LVL271:
 2787 0040 B0F5774F 		cmp	r0, #63232
 2788 0044 00D0     		beq	.L304
 2789              	.L305:
 2790 0046 FEE7     		b	.L305
 2791              	.L304:
1166:assembly_test.c **** 		while(1);
1167:assembly_test.c **** 	TXLED_SET;
 2792              		.loc 1 1167 0
 2793 0048 2560     		str	r5, [r4]
 2794              	.LVL272:
1168:assembly_test.c **** 	waitms(200);
1169:assembly_test.c **** 
1170:assembly_test.c **** 	/* clock_test */
1171:assembly_test.c **** 	clock_start();
 2795              		.loc 1 1171 0
 2796 004a FFF7FEFF 		bl	clock_start
 2797              	.LVL273:
 2798 004e 0424     		movs	r4, #4
 2799              	.LVL274:
 2800              	.L307:
1172:assembly_test.c **** 	for (i = 0; i < 4; i++) {
1173:assembly_test.c **** 		RXLED_SET;
 2801              		.loc 1 1173 0 discriminator 2
 2802 0050 294D     		ldr	r5, .L326
 2803 0052 1026     		movs	r6, #16
1174:assembly_test.c **** 		wait(2);
 2804              		.loc 1 1174 0 discriminator 2
 2805 0054 0220     		movs	r0, #2
1173:assembly_test.c **** 		wait(2);
 2806              		.loc 1 1173 0 discriminator 2
 2807 0056 2E60     		str	r6, [r5]
 2808              		.loc 1 1174 0 discriminator 2
 2809 0058 FFF7FEFF 		bl	wait
 2810              	.LVL275:
1175:assembly_test.c **** 		RXLED_CLR;
 2811              		.loc 1 1175 0 discriminator 2
 2812 005c 274B     		ldr	r3, .L326+4
1176:assembly_test.c **** 		wait(2);
 2813              		.loc 1 1176 0 discriminator 2
 2814 005e 0220     		movs	r0, #2
1175:assembly_test.c **** 		RXLED_CLR;
 2815              		.loc 1 1175 0 discriminator 2
ARM GAS  /tmp/ccbDzT8J.s 			page 75


 2816 0060 1E60     		str	r6, [r3]
 2817              		.loc 1 1176 0 discriminator 2
 2818 0062 FFF7FEFF 		bl	wait
 2819              	.LVL276:
1172:assembly_test.c **** 		RXLED_SET;
 2820              		.loc 1 1172 0 discriminator 2
 2821 0066 013C     		subs	r4, r4, #1
 2822              	.LVL277:
 2823 0068 F2D1     		bne	.L307
 2824              	.LBB18:
 2825              	.LBB19:
 541:assembly_test.c **** 	clkn_high = 0;
 2826              		.loc 1 541 0
 2827 006a 254B     		ldr	r3, .L326+8
 542:assembly_test.c **** 
 2828              		.loc 1 542 0
 2829 006c 254A     		ldr	r2, .L326+12
 2830              	.LBE19:
 2831              	.LBE18:
1177:assembly_test.c **** 	}
1178:assembly_test.c **** 	RXLED_SET;
 2832              		.loc 1 1178 0
 2833 006e 2E60     		str	r6, [r5]
 2834              	.LBB21:
 2835              	.LBB20:
 541:assembly_test.c **** 	clkn_high = 0;
 2836              		.loc 1 541 0
 2837 0070 0226     		movs	r6, #2
 2838 0072 1E60     		str	r6, [r3]
 542:assembly_test.c **** 
 2839              		.loc 1 542 0
 2840 0074 1470     		strb	r4, [r2]
 549:assembly_test.c **** 	T0MR0 = 3276799999;
 2841              		.loc 1 549 0
 2842 0076 244A     		ldr	r2, .L326+16
 2843 0078 0421     		movs	r1, #4
 2844 007a 1160     		str	r1, [r2]
 550:assembly_test.c **** 	T0MCR = TMCR_MR0R | TMCR_MR0I;
 2845              		.loc 1 550 0
 2846 007c 2349     		ldr	r1, .L326+20
 2847 007e D160     		str	r1, [r2, #12]
 551:assembly_test.c **** 	ISER0 |= ISER0_ISE_TIMER0;
 2848              		.loc 1 551 0
 2849 0080 0321     		movs	r1, #3
 2850 0082 9160     		str	r1, [r2, #8]
 552:assembly_test.c **** 
 2851              		.loc 1 552 0
 2852 0084 224A     		ldr	r2, .L326+24
 2853 0086 1168     		ldr	r1, [r2]
 2854 0088 3143     		orrs	r1, r1, r6
 2855 008a 1160     		str	r1, [r2]
 555:assembly_test.c **** }
 2856              		.loc 1 555 0
 2857 008c 0122     		movs	r2, #1
 2858 008e 1A60     		str	r2, [r3]
 2859              	.LBE20:
 2860              	.LBE21:
ARM GAS  /tmp/ccbDzT8J.s 			page 76


1179:assembly_test.c **** 
1180:assembly_test.c **** 	clkn_init();
1181:assembly_test.c **** 	bt_test_rx();
 2861              		.loc 1 1181 0
 2862 0090 FFF7FEFF 		bl	bt_test_rx
 2863              	.LVL278:
1182:assembly_test.c **** 	USRLED_SET;
 2864              		.loc 1 1182 0
 2865 0094 2E60     		str	r6, [r5]
1183:assembly_test.c **** 
1184:assembly_test.c **** 	/*
1185:assembly_test.c **** 	 * Now we function like bluetooth_rxtx so that the USB interface can be
1186:assembly_test.c **** 	 * tested.
1187:assembly_test.c **** 	 */
1188:assembly_test.c **** 	ubertooth_usb_init();
 2866              		.loc 1 1188 0
 2867 0096 FFF7FEFF 		bl	ubertooth_usb_init
 2868              	.LVL279:
 2869              	.L308:
1189:assembly_test.c **** 
1190:assembly_test.c **** 	while (1) {
1191:assembly_test.c **** 		USBHwISR();
 2870              		.loc 1 1191 0
 2871 009a FFF7FEFF 		bl	USBHwISR
 2872              	.LVL280:
1192:assembly_test.c **** 		if (rx_pkts)
 2873              		.loc 1 1192 0
 2874 009e 1D4B     		ldr	r3, .L326+28
 2875 00a0 1A68     		ldr	r2, [r3]
 2876 00a2 12B1     		cbz	r2, .L309
1193:assembly_test.c **** 			bt_stream_rx();
 2877              		.loc 1 1193 0
 2878 00a4 FFF7FEFF 		bl	bt_stream_rx
 2879              	.LVL281:
 2880 00a8 F7E7     		b	.L308
 2881              	.L309:
1194:assembly_test.c **** 		else if (requested_mode == MODE_TX_TEST && mode != MODE_TX_TEST)
 2882              		.loc 1 1194 0
 2883 00aa 5A68     		ldr	r2, [r3, #4]
 2884 00ac 032A     		cmp	r2, #3
 2885 00ae 05D1     		bne	.L311
 2886              		.loc 1 1194 0 is_stmt 0 discriminator 1
 2887 00b0 9A6A     		ldr	r2, [r3, #40]
 2888 00b2 032A     		cmp	r2, #3
 2889 00b4 02D0     		beq	.L311
1195:assembly_test.c **** 			cc2400_txtest();
 2890              		.loc 1 1195 0 is_stmt 1
 2891 00b6 FFF7FEFF 		bl	cc2400_txtest
 2892              	.LVL282:
 2893 00ba EEE7     		b	.L308
 2894              	.L311:
1196:assembly_test.c **** 		else if (requested_mode == MODE_RANGE_TEST && mode != MODE_RANGE_TEST)
 2895              		.loc 1 1196 0
 2896 00bc 5A68     		ldr	r2, [r3, #4]
 2897 00be 052A     		cmp	r2, #5
 2898 00c0 06D1     		bne	.L312
 2899              		.loc 1 1196 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccbDzT8J.s 			page 77


 2900 00c2 144A     		ldr	r2, .L326+28
 2901 00c4 926A     		ldr	r2, [r2, #40]
 2902 00c6 052A     		cmp	r2, #5
 2903 00c8 02D0     		beq	.L312
1197:assembly_test.c **** 			cc2400_rangetest();
 2904              		.loc 1 1197 0 is_stmt 1
 2905 00ca FFF7FEFF 		bl	cc2400_rangetest
 2906              	.LVL283:
 2907 00ce E4E7     		b	.L308
 2908              	.L312:
1198:assembly_test.c **** 		else if (requested_mode == MODE_REPEATER && mode != MODE_REPEATER)
 2909              		.loc 1 1198 0
 2910 00d0 5A68     		ldr	r2, [r3, #4]
 2911 00d2 062A     		cmp	r2, #6
 2912 00d4 05D1     		bne	.L313
 2913              		.loc 1 1198 0 is_stmt 0 discriminator 1
 2914 00d6 0F4A     		ldr	r2, .L326+28
 2915 00d8 926A     		ldr	r2, [r2, #40]
 2916 00da 062A     		cmp	r2, #6
 2917 00dc 01D0     		beq	.L313
1199:assembly_test.c **** 			cc2400_repeater();
 2918              		.loc 1 1199 0 is_stmt 1
 2919 00de FFF7FEFF 		bl	cc2400_repeater
 2920              	.LVL284:
 2921              	.L313:
1200:assembly_test.c **** 		else if (requested_mode == MODE_SPECAN && mode != MODE_SPECAN)
 2922              		.loc 1 1200 0
 2923 00e2 5B68     		ldr	r3, [r3, #4]
 2924 00e4 042B     		cmp	r3, #4
 2925 00e6 D8D1     		bne	.L308
 2926              		.loc 1 1200 0 is_stmt 0 discriminator 1
 2927 00e8 0A4B     		ldr	r3, .L326+28
 2928 00ea 9B6A     		ldr	r3, [r3, #40]
 2929 00ec 042B     		cmp	r3, #4
 2930 00ee D4D0     		beq	.L308
1201:assembly_test.c **** 			specan();
 2931              		.loc 1 1201 0 is_stmt 1
 2932 00f0 FFF7FEFF 		bl	specan
 2933              	.LVL285:
 2934 00f4 D1E7     		b	.L308
 2935              	.L327:
 2936 00f6 00BF     		.align	2
 2937              	.L326:
 2938 00f8 38C00920 		.word	537509944
 2939 00fc 3CC00920 		.word	537509948
 2940 0100 04400040 		.word	1073758212
 2941 0104 00000000 		.word	clkn_high
 2942 0108 0C400040 		.word	1073758220
 2943 010c FFFF4FC3 		.word	-1018167297
 2944 0110 00E100E0 		.word	-536813312
 2945 0114 00000000 		.word	.LANCHOR0
 2946              		.cfi_endproc
 2947              	.LFE21:
 2949              		.global	tail
 2950              		.global	head
 2951              		.comm	fifo,8192,4
 2952              		.global	status
ARM GAS  /tmp/ccbDzT8J.s 			page 78


 2953              		.global	rx_pkts
 2954              		.comm	rx_err,4,4
 2955              		.comm	rx_tc,4,4
 2956              		.comm	rx_dma_lli2,16,4
 2957              		.comm	rx_dma_lli1,16,4
 2958              		.global	high_freq
 2959              		.global	low_freq
 2960              		.global	channel
 2961              		.global	modulation
 2962              		.global	requested_mode
 2963              		.global	mode
 2964              		.comm	rr,5,1
 2965              		.global	idle_rxbuf
 2966              		.global	active_rxbuf
 2967              		.comm	rxbuf2,50,1
 2968              		.comm	rxbuf1,50,1
 2969              		.comm	clkn_high,1,1
 2970              		.section	.rodata
 2971              		.set	.LANCHOR2,. + 0
 2974              	abDescriptors:
 2975 0000 12       		.byte	18
 2976 0001 01       		.byte	1
 2977 0002 00       		.byte	0
 2978 0003 02       		.byte	2
 2979 0004 FF       		.byte	-1
 2980 0005 00       		.byte	0
 2981 0006 00       		.byte	0
 2982 0007 40       		.byte	64
 2983 0008 FF       		.byte	-1
 2984 0009 FF       		.byte	-1
 2985 000a 04       		.byte	4
 2986 000b 00       		.byte	0
 2987 000c 00       		.byte	0
 2988 000d 01       		.byte	1
 2989 000e 01       		.byte	1
 2990 000f 02       		.byte	2
 2991 0010 03       		.byte	3
 2992 0011 01       		.byte	1
 2993 0012 09       		.byte	9
 2994 0013 02       		.byte	2
 2995 0014 20       		.byte	32
 2996 0015 00       		.byte	0
 2997 0016 01       		.byte	1
 2998 0017 01       		.byte	1
 2999 0018 00       		.byte	0
 3000 0019 80       		.byte	-128
 3001 001a 32       		.byte	50
 3002 001b 09       		.byte	9
 3003 001c 04       		.byte	4
 3004 001d 00       		.byte	0
 3005 001e 00       		.byte	0
 3006 001f 02       		.byte	2
 3007 0020 FF       		.byte	-1
 3008 0021 00       		.byte	0
 3009 0022 00       		.byte	0
 3010 0023 00       		.byte	0
 3011 0024 07       		.byte	7
ARM GAS  /tmp/ccbDzT8J.s 			page 79


 3012 0025 05       		.byte	5
 3013 0026 82       		.byte	-126
 3014 0027 02       		.byte	2
 3015 0028 40       		.byte	64
 3016 0029 00       		.byte	0
 3017 002a 00       		.byte	0
 3018 002b 07       		.byte	7
 3019 002c 05       		.byte	5
 3020 002d 05       		.byte	5
 3021 002e 02       		.byte	2
 3022 002f 40       		.byte	64
 3023 0030 00       		.byte	0
 3024 0031 00       		.byte	0
 3025 0032 04       		.byte	4
 3026 0033 03       		.byte	3
 3027 0034 09       		.byte	9
 3028 0035 04       		.byte	4
 3029 0036 44       		.byte	68
 3030 0037 03       		.byte	3
 3031 0038 68       		.byte	104
 3032 0039 00       		.byte	0
 3033 003a 74       		.byte	116
 3034 003b 00       		.byte	0
 3035 003c 74       		.byte	116
 3036 003d 00       		.byte	0
 3037 003e 70       		.byte	112
 3038 003f 00       		.byte	0
 3039 0040 3A       		.byte	58
 3040 0041 00       		.byte	0
 3041 0042 2F       		.byte	47
 3042 0043 00       		.byte	0
 3043 0044 2F       		.byte	47
 3044 0045 00       		.byte	0
 3045 0046 75       		.byte	117
 3046 0047 00       		.byte	0
 3047 0048 62       		.byte	98
 3048 0049 00       		.byte	0
 3049 004a 65       		.byte	101
 3050 004b 00       		.byte	0
 3051 004c 72       		.byte	114
 3052 004d 00       		.byte	0
 3053 004e 74       		.byte	116
 3054 004f 00       		.byte	0
 3055 0050 6F       		.byte	111
 3056 0051 00       		.byte	0
 3057 0052 6F       		.byte	111
 3058 0053 00       		.byte	0
 3059 0054 74       		.byte	116
 3060 0055 00       		.byte	0
 3061 0056 68       		.byte	104
 3062 0057 00       		.byte	0
 3063 0058 2E       		.byte	46
 3064 0059 00       		.byte	0
 3065 005a 73       		.byte	115
 3066 005b 00       		.byte	0
 3067 005c 6F       		.byte	111
 3068 005d 00       		.byte	0
ARM GAS  /tmp/ccbDzT8J.s 			page 80


 3069 005e 75       		.byte	117
 3070 005f 00       		.byte	0
 3071 0060 72       		.byte	114
 3072 0061 00       		.byte	0
 3073 0062 63       		.byte	99
 3074 0063 00       		.byte	0
 3075 0064 65       		.byte	101
 3076 0065 00       		.byte	0
 3077 0066 66       		.byte	102
 3078 0067 00       		.byte	0
 3079 0068 6F       		.byte	111
 3080 0069 00       		.byte	0
 3081 006a 72       		.byte	114
 3082 006b 00       		.byte	0
 3083 006c 67       		.byte	103
 3084 006d 00       		.byte	0
 3085 006e 65       		.byte	101
 3086 006f 00       		.byte	0
 3087 0070 2E       		.byte	46
 3088 0071 00       		.byte	0
 3089 0072 6E       		.byte	110
 3090 0073 00       		.byte	0
 3091 0074 65       		.byte	101
 3092 0075 00       		.byte	0
 3093 0076 74       		.byte	116
 3094 0077 00       		.byte	0
 3095 0078 2F       		.byte	47
 3096 0079 00       		.byte	0
 3097 007a 30       		.byte	48
 3098 007b 03       		.byte	3
 3099 007c 75       		.byte	117
 3100 007d 00       		.byte	0
 3101 007e 62       		.byte	98
 3102 007f 00       		.byte	0
 3103 0080 65       		.byte	101
 3104 0081 00       		.byte	0
 3105 0082 72       		.byte	114
 3106 0083 00       		.byte	0
 3107 0084 74       		.byte	116
 3108 0085 00       		.byte	0
 3109 0086 6F       		.byte	111
 3110 0087 00       		.byte	0
 3111 0088 6F       		.byte	111
 3112 0089 00       		.byte	0
 3113 008a 74       		.byte	116
 3114 008b 00       		.byte	0
 3115 008c 68       		.byte	104
 3116 008d 00       		.byte	0
 3117 008e 20       		.byte	32
 3118 008f 00       		.byte	0
 3119 0090 61       		.byte	97
 3120 0091 00       		.byte	0
 3121 0092 73       		.byte	115
 3122 0093 00       		.byte	0
 3123 0094 73       		.byte	115
 3124 0095 00       		.byte	0
 3125 0096 65       		.byte	101
ARM GAS  /tmp/ccbDzT8J.s 			page 81


 3126 0097 00       		.byte	0
 3127 0098 6D       		.byte	109
 3128 0099 00       		.byte	0
 3129 009a 62       		.byte	98
 3130 009b 00       		.byte	0
 3131 009c 6C       		.byte	108
 3132 009d 00       		.byte	0
 3133 009e 79       		.byte	121
 3134 009f 00       		.byte	0
 3135 00a0 5F       		.byte	95
 3136 00a1 00       		.byte	0
 3137 00a2 74       		.byte	116
 3138 00a3 00       		.byte	0
 3139 00a4 65       		.byte	101
 3140 00a5 00       		.byte	0
 3141 00a6 73       		.byte	115
 3142 00a7 00       		.byte	0
 3143 00a8 74       		.byte	116
 3144 00a9 00       		.byte	0
 3145 00aa 12       		.byte	18
 3146 00ab 03       		.byte	3
 3147 00ac 30       		.byte	48
 3148 00ad 00       		.byte	0
 3149 00ae 30       		.byte	48
 3150 00af 00       		.byte	0
 3151 00b0 30       		.byte	48
 3152 00b1 00       		.byte	0
 3153 00b2 30       		.byte	48
 3154 00b3 00       		.byte	0
 3155 00b4 30       		.byte	48
 3156 00b5 00       		.byte	0
 3157 00b6 30       		.byte	48
 3158 00b7 00       		.byte	0
 3159 00b8 30       		.byte	48
 3160 00b9 00       		.byte	0
 3161 00ba 31       		.byte	49
 3162 00bb 00       		.byte	0
 3163 00bc 00       		.byte	0
 3164              	.LC0:
 3165 00bd 47       		.byte	71
 3166 00be 5C       		.byte	92
 3167 00bf 58       		.byte	88
 3168 00c0 CC       		.byte	-52
 3169 00c1 73       		.byte	115
 3170 00c2 34       		.byte	52
 3171 00c3 5E       		.byte	94
 3172 00c4 8E       		.byte	-114
 3173 00c5 B8       		.byte	-72
 3174 00c6 B1       		.byte	-79
 3175 00c7 98       		.byte	-104
 3176 00c8 E6       		.byte	-26
 3177 00c9 68       		.byte	104
 3178 00ca BC       		.byte	-68
 3179 00cb 11       		.byte	17
 3180 00cc D7       		.byte	-41
 3181 00cd 16       		.byte	22
 3182 00ce 33       		.byte	51
ARM GAS  /tmp/ccbDzT8J.s 			page 82


 3183 00cf 1C       		.byte	28
 3184 00d0 CD       		.byte	-51
 3185 00d1 17       		.byte	23
 3186 00d2 23       		.byte	35
 3187 00d3 AE       		.byte	-82
 3188 00d4 2C       		.byte	44
 3189 00d5 66       		.byte	102
 3190 00d6 39       		.byte	57
 3191 00d7 9A       		.byte	-102
 3192 00d8 2F       		.byte	47
 3193 00d9 75       		.byte	117
 3194 00da C5       		.byte	-59
 3195 00db 8C       		.byte	-116
 3196 00dc C7       		.byte	-57
 3197 00dd 33       		.byte	51
 3198 00de 45       		.byte	69
 3199 00df E7       		.byte	-25
 3200 00e0 EB       		.byte	-21
 3201 00e1 8B       		.byte	-117
 3202 00e2 19       		.byte	25
 3203 00e3 8E       		.byte	-114
 3204 00e4 66       		.byte	102
 3205 00e5 8B       		.byte	-117
 3206 00e6 CE       		.byte	-50
 3207 00e7 1D       		.byte	29
 3208 00e8 71       		.byte	113
 3209 00e9 63       		.byte	99
 3210 00ea 31       		.byte	49
 3211 00eb CC       		.byte	-52
 3212 00ec D1       		.byte	-47
 3213 00ed 79       		.byte	121
 3214 00ee 3A       		.byte	58
 3215 00ef E2       		.byte	-30
 3216 00f0 C6       		.byte	-58
 3217 00f1 63       		.byte	99
 3218 00f2 99       		.byte	-103
 3219 00f3 A2       		.byte	-94
 3220 00f4 F3       		.byte	-13
 3221              		.section	.rodata.str1.1,"aMS",%progbits,1
 3222              	.LC1:
 3223 0000 32303137 		.ascii	"2017-03-R2\000"
 3223      2D30332D 
 3223      523200
 3224              		.data
 3225              		.align	2
 3226              		.set	.LANCHOR1,. + 0
 3229              	channel:
 3230 0000 8909     		.short	2441
 3233              	low_freq:
 3234 0002 6009     		.short	2400
 3237              	high_freq:
 3238 0004 B309     		.short	2483
 3239 0006 0000     		.space	2
 3242              	active_rxbuf:
 3243 0008 00000000 		.word	rxbuf1
 3246              	idle_rxbuf:
 3247 000c 00000000 		.word	rxbuf2
ARM GAS  /tmp/ccbDzT8J.s 			page 83


 3248              		.bss
 3249              		.align	2
 3250              		.set	.LANCHOR0,. + 0
 3253              	rx_pkts:
 3254 0000 00000000 		.space	4
 3257              	requested_mode:
 3258 0004 00000000 		.space	4
 3261              	modulation:
 3262 0008 00000000 		.space	4
 3265              	head:
 3266 000c 00000000 		.space	4
 3269              	tail:
 3270 0010 00000000 		.space	4
 3273              	status:
 3274 0014 00       		.space	1
 3277              	abVendorReqData:
 3278 0015 00000000 		.space	17
 3278      00000000 
 3278      00000000 
 3278      00000000 
 3278      00
 3279 0026 0000     		.space	2
 3282              	mode:
 3283 0028 00000000 		.space	4
 3284              		.text
 3285              	.Letext0:
 3286              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.8.2/include/stddef.h"
 3287              		.file 3 "/usr/lib/gcc/arm-none-eabi/4.8.2/include/stdint-gcc.h"
 3288              		.file 4 "../../host/libubertooth/src/ubertooth_interface.h"
 3289              		.file 5 "../common/ubertooth.h"
 3290              		.file 6 "../common/lpcusb/target/type.h"
 3291              		.file 7 "../common/lpcusb/target/usbstruct.h"
 3292              		.file 8 "../common/lpcusb/target/usbapi.h"
 3293              		.file 9 "/usr/include/newlib/string.h"
 3294              		.file 10 "../common/lpcusb/target/usbhw_lpc.h"
ARM GAS  /tmp/ccbDzT8J.s 			page 84


DEFINED SYMBOLS
                            *ABS*:0000000000000000 assembly_test.c
     /tmp/ccbDzT8J.s:19     .text.dma_init:0000000000000000 $t
     /tmp/ccbDzT8J.s:23     .text.dma_init:0000000000000000 dma_init
     /tmp/ccbDzT8J.s:132    .text.dma_init:0000000000000088 $d
                            *COM*:0000000000000010 rx_dma_lli1
                            *COM*:0000000000000032 rxbuf1
                            *COM*:0000000000000010 rx_dma_lli2
                            *COM*:0000000000000032 rxbuf2
                            *COM*:0000000000000004 rx_tc
                            *COM*:0000000000000004 rx_err
     /tmp/ccbDzT8J.s:150    .text.dio_ssp_start:0000000000000000 $t
     /tmp/ccbDzT8J.s:154    .text.dio_ssp_start:0000000000000000 dio_ssp_start
     /tmp/ccbDzT8J.s:191    .text.dio_ssp_start:0000000000000038 $d
     /tmp/ccbDzT8J.s:200    .text.usb_vendor_request_handler:0000000000000000 $t
     /tmp/ccbDzT8J.s:204    .text.usb_vendor_request_handler:0000000000000000 usb_vendor_request_handler
     /tmp/ccbDzT8J.s:232    .text.usb_vendor_request_handler:0000000000000014 $d
     /tmp/ccbDzT8J.s:268    .text.usb_vendor_request_handler:0000000000000058 $t
     /tmp/ccbDzT8J.s:709    .text.usb_vendor_request_handler:00000000000002a8 $d
                            *COM*:0000000000000005 rr
     /tmp/ccbDzT8J.s:726    .text.queue_init:0000000000000000 $t
     /tmp/ccbDzT8J.s:731    .text.queue_init:0000000000000000 queue_init
     /tmp/ccbDzT8J.s:748    .text.queue_init:000000000000000c $d
     /tmp/ccbDzT8J.s:753    .text.enqueue:0000000000000000 $t
     /tmp/ccbDzT8J.s:758    .text.enqueue:0000000000000000 enqueue
     /tmp/ccbDzT8J.s:853    .text.enqueue:0000000000000058 $d
                            *COM*:0000000000000001 clkn_high
                            *COM*:0000000000002000 fifo
     /tmp/ccbDzT8J.s:862    .text.dequeue:0000000000000000 $t
     /tmp/ccbDzT8J.s:867    .text.dequeue:0000000000000000 dequeue
     /tmp/ccbDzT8J.s:919    .text.dequeue:0000000000000038 $d
     /tmp/ccbDzT8J.s:926    .text.ubertooth_usb_init:0000000000000000 $t
     /tmp/ccbDzT8J.s:931    .text.ubertooth_usb_init:0000000000000000 ubertooth_usb_init
     /tmp/ccbDzT8J.s:964    .text.ubertooth_usb_init:0000000000000020 $d
     /tmp/ccbDzT8J.s:971    .text.TIMER0_IRQHandler:0000000000000000 $t
     /tmp/ccbDzT8J.s:976    .text.TIMER0_IRQHandler:0000000000000000 TIMER0_IRQHandler
     /tmp/ccbDzT8J.s:1003   .text.TIMER0_IRQHandler:0000000000000020 $d
     /tmp/ccbDzT8J.s:1008   .text.DMA_IRQHandler:0000000000000000 $t
     /tmp/ccbDzT8J.s:1013   .text.DMA_IRQHandler:0000000000000000 DMA_IRQHandler
     /tmp/ccbDzT8J.s:1061   .text.DMA_IRQHandler:0000000000000040 $d
     /tmp/ccbDzT8J.s:1072   .text.cc2400_rx:0000000000000000 $t
     /tmp/ccbDzT8J.s:1077   .text.cc2400_rx:0000000000000000 cc2400_rx
     /tmp/ccbDzT8J.s:1196   .text.cc2400_rx:00000000000000b8 $d
     /tmp/ccbDzT8J.s:1203   .text.cc2400_txtest:0000000000000000 $t
     /tmp/ccbDzT8J.s:1208   .text.cc2400_txtest:0000000000000000 cc2400_txtest
     /tmp/ccbDzT8J.s:1317   .text.cc2400_txtest:00000000000000a0 $d
     /tmp/ccbDzT8J.s:1325   .text.cc2400_rangetest:0000000000000000 $t
     /tmp/ccbDzT8J.s:1330   .text.cc2400_rangetest:0000000000000000 cc2400_rangetest
     /tmp/ccbDzT8J.s:1764   .text.cc2400_rangetest:0000000000000284 $d
     /tmp/ccbDzT8J.s:1775   .text.cc2400_repeater:0000000000000000 $t
     /tmp/ccbDzT8J.s:1780   .text.cc2400_repeater:0000000000000000 cc2400_repeater
     /tmp/ccbDzT8J.s:2049   .text.cc2400_repeater:0000000000000178 $d
     /tmp/ccbDzT8J.s:2057   .text.bt_stream_rx:0000000000000000 $t
     /tmp/ccbDzT8J.s:2062   .text.bt_stream_rx:0000000000000000 bt_stream_rx
     /tmp/ccbDzT8J.s:2206   .text.bt_stream_rx:00000000000000a8 $d
     /tmp/ccbDzT8J.s:2216   .text.specan:0000000000000000 $t
     /tmp/ccbDzT8J.s:2221   .text.specan:0000000000000000 specan
ARM GAS  /tmp/ccbDzT8J.s 			page 85


     /tmp/ccbDzT8J.s:2419   .text.specan:0000000000000100 $d
     /tmp/ccbDzT8J.s:2428   .text.find_giac:0000000000000000 $t
     /tmp/ccbDzT8J.s:2433   .text.find_giac:0000000000000000 find_giac
     /tmp/ccbDzT8J.s:2538   .text.find_giac:0000000000000074 $d
     /tmp/ccbDzT8J.s:2543   .text.bt_test_rx:0000000000000000 $t
     /tmp/ccbDzT8J.s:2548   .text.bt_test_rx:0000000000000000 bt_test_rx
     /tmp/ccbDzT8J.s:2679   .text.bt_test_rx:0000000000000084 $d
     /tmp/ccbDzT8J.s:2688   .text.waitms:0000000000000000 $t
     /tmp/ccbDzT8J.s:2693   .text.waitms:0000000000000000 waitms
     /tmp/ccbDzT8J.s:2706   .text.startup.main:0000000000000000 $t
     /tmp/ccbDzT8J.s:2711   .text.startup.main:0000000000000000 main
     /tmp/ccbDzT8J.s:2938   .text.startup.main:00000000000000f8 $d
     /tmp/ccbDzT8J.s:3269   .bss:0000000000000010 tail
     /tmp/ccbDzT8J.s:3265   .bss:000000000000000c head
     /tmp/ccbDzT8J.s:3273   .bss:0000000000000014 status
     /tmp/ccbDzT8J.s:3253   .bss:0000000000000000 rx_pkts
     /tmp/ccbDzT8J.s:3237   .data:0000000000000004 high_freq
     /tmp/ccbDzT8J.s:3233   .data:0000000000000002 low_freq
     /tmp/ccbDzT8J.s:3229   .data:0000000000000000 channel
     /tmp/ccbDzT8J.s:3261   .bss:0000000000000008 modulation
     /tmp/ccbDzT8J.s:3257   .bss:0000000000000004 requested_mode
     /tmp/ccbDzT8J.s:3282   .bss:0000000000000028 mode
     /tmp/ccbDzT8J.s:3246   .data:000000000000000c idle_rxbuf
     /tmp/ccbDzT8J.s:3242   .data:0000000000000008 active_rxbuf
     /tmp/ccbDzT8J.s:2974   .rodata:0000000000000000 abDescriptors
     /tmp/ccbDzT8J.s:3225   .data:0000000000000000 $d
     /tmp/ccbDzT8J.s:3249   .bss:0000000000000000 $d
     /tmp/ccbDzT8J.s:3277   .bss:0000000000000015 abVendorReqData
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
cc2400_get
cc2400_set
reset
strlen
memcpy
iap_entry
bootloader_ctrl
USBHwEPWrite
USBInit
USBRegisterDescriptors
USBRegisterRequestHandler
USBHwConnect
cc2400_status
cc2400_strobe
cc2400_set8
cc2400_get8
dio_ssp_init
USBHwEPGetStatus
USBHwISR
gpio_init
cc2400_init
cc2400_reset
clock_start
wait
